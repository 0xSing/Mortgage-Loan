{
	"id": "d8f34c930e7ae179e34f0248c9b3ab20",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"rate/JumpRateModel.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport \"./BaseJumpRateModel.sol\";\n\n\n/**\n  * @title Compound's JumpRateModel Contract V2 for V2 cTokens\n  * @author Arr00\n  * @notice Supports only for V2 cTokens\n  */\ncontract JumpRateModel is BaseJumpRateModel {\n\n    function initialize(uint baseRatePerYear, uint multiplierPerYear, uint jumpMultiplierPerYear, uint kink_) public initializer {\n        super.__Ownable_init();\n        super.updateJumpRateModelInternal(baseRatePerYear, multiplierPerYear, jumpMultiplierPerYear, kink_);\n    }\n}\n"
			},
			"rate/BaseJumpRateModel.sol": {
				"content": "// COPIED FROM https://github.com/compound-finance/compound-protocol/blob/master/contracts/BaseJumpRateModelV2.sol\n//Copyright 2020 Compound Labs, Inc.\n//Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n//1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n//2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n//3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n//THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\";\nimport \"./IInterestRateModel.sol\";\n\n/**\n  * @title Logic for Compound's JumpRateModel Contract V2.\n  * @author Compound (modified by Dharma Labs, refactored by Arr00)\n  * @notice Version 2 modifies Version 1 by enabling updateable parameters.\n  */\ncontract BaseJumpRateModel is IInterestRateModel, OwnableUpgradeSafe {\n    using SafeMath for uint;\n\n    event NewInterestParams(uint baseRatePerBlock, uint multiplierPerBlock, uint jumpMultiplierPerBlock, uint kink);\n\n    /**\n     * @notice The approximate number of blocks per year that is assumed by the interest rate model\n     */\n    uint public constant blocksPerYear = 15768000;\n\n    /**\n     * @notice The multiplier of utilization rate that gives the slope of the interest rate\n     */\n    uint public multiplierPerBlock;\n\n    /**\n     * @notice The base interest rate which is the y-intercept when utilization rate is 0\n     */\n    uint public baseRatePerBlock;\n\n    /**\n     * @notice The multiplierPerBlock after hitting a specified utilization point\n     */\n    uint public jumpMultiplierPerBlock;\n\n    /**\n     * @notice The utilization point at which the jump multiplier is applied\n     */\n    uint public kink;\n\n    /**\n     * @notice Update the parameters of the interest rate model (only callable by owner, i.e. Timelock)\n     * @param baseRatePerYear The approximate target base APR, as a mantissa (scaled by 1e18)\n     * @param multiplierPerYear The rate of increase in interest rate wrt utilization (scaled by 1e18)\n     * @param jumpMultiplierPerYear The multiplierPerBlock after hitting a specified utilization point\n     * @param kink_ The utilization point at which the jump multiplier is applied\n     */\n    function updateJumpRateModel(uint baseRatePerYear, uint multiplierPerYear, uint jumpMultiplierPerYear, uint kink_) external {\n        updateJumpRateModelInternal(baseRatePerYear, multiplierPerYear, jumpMultiplierPerYear, kink_);\n    }\n\n    /**\n     * @notice Calculates the utilization rate of the market: `borrows / (cash + borrows - reserves)`\n     * @param cash The amount of cash in the market\n     * @param borrows The amount of borrows in the market\n     * @param reserves The amount of reserves in the market (currently unused)\n     * @return The utilization rate as a mantissa between [0, 1e18]\n     */\n    function utilizationRate(uint cash, uint borrows, uint reserves) public pure returns (uint) {\n        // Utilization rate is 0 when there are no borrows\n        if (borrows == 0) {\n            return 0;\n        }\n\n        return borrows.mul(1e18).div(cash.add(borrows).sub(reserves));\n    }\n\n    /**\n     * @notice Calculates the current borrow rate per block, with the error code expected by the market\n     * @param cash The amount of cash in the market\n     * @param borrows The amount of borrows in the market\n     * @param reserves The amount of reserves in the market\n     * @return The borrow rate percentage per block as a mantissa (scaled by 1e18)\n     */\n    function getBorrowRateInternal(uint cash, uint borrows, uint reserves) internal view returns (uint) {\n        uint util = utilizationRate(cash, borrows, reserves);\n\n        if (util <= kink) {\n            return util.mul(multiplierPerBlock).div(1e18).add(baseRatePerBlock);\n        } else {\n            uint normalRate = kink.mul(multiplierPerBlock).div(1e18).add(baseRatePerBlock);\n            uint excessUtil = util.sub(kink);\n            return excessUtil.mul(jumpMultiplierPerBlock).div(1e18).add(normalRate);\n        }\n    }\n\n    /**\n     * @notice Calculates the current borrow rate per block\n     * @param cash The amount of cash in the market\n     * @param borrows The amount of borrows in the market\n     * @param reserves The amount of reserves in the market\n     * @return The borrow rate percentage per block as a mantissa (scaled by 1e18)\n     */\n    function getBorrowRate(uint cash, uint borrows, uint reserves) external virtual override view returns (uint) {\n        return getBorrowRateInternal(cash, borrows, reserves);\n    }\n\n\n    function getSupplyRateInternal(uint cash, uint borrows, uint reserves, uint reserveFactorMantissa) internal view returns (uint) {\n        uint oneMinusReserveFactor = uint(1e18).sub(reserveFactorMantissa);\n        uint borrowRate = getBorrowRateInternal(cash, borrows, reserves);\n        uint rateToPool = borrowRate.mul(oneMinusReserveFactor).div(1e18);\n        return utilizationRate(cash, borrows, reserves).mul(rateToPool).div(1e18);\n    }\n    /**\n     * @notice Calculates the current supply rate per block\n     * @param cash The amount of cash in the market\n     * @param borrows The amount of borrows in the market\n     * @param reserves The amount of reserves in the market\n     * @param reserveFactorMantissa The current reserve factor for the market\n     * @return The supply rate percentage per block as a mantissa (scaled by 1e18)\n     */\n    function getSupplyRate(uint cash, uint borrows, uint reserves, uint reserveFactorMantissa) external virtual override view returns (uint) {\n        return getSupplyRateInternal(cash, borrows, reserves, reserveFactorMantissa);\n    }\n\n    /**\n     * @notice Internal function to update the parameters of the interest rate model\n     * @param baseRatePerYear The approximate target base APR, as a mantissa (scaled by 1e18)\n     * @param multiplierPerYear The rate of increase in interest rate wrt utilization (scaled by 1e18)\n     * @param jumpMultiplierPerYear The multiplierPerBlock after hitting a specified utilization point\n     * @param kink_ The utilization point at which the jump multiplier is applied\n     */\n    function updateJumpRateModelInternal(uint baseRatePerYear, uint multiplierPerYear, uint jumpMultiplierPerYear, uint kink_) internal onlyOwner {\n        baseRatePerBlock = baseRatePerYear.div(blocksPerYear);\n        multiplierPerBlock = (multiplierPerYear.mul(1e18)).div(blocksPerYear.mul(kink_));\n        jumpMultiplierPerBlock = jumpMultiplierPerYear.div(blocksPerYear);\n        kink = kink_;\n\n        emit NewInterestParams(baseRatePerBlock, multiplierPerBlock, jumpMultiplierPerBlock, kink);\n    }\n}\n"
			},
			"rate/IInterestRateModel.sol": {
				"content": "// https://github.com/compound-finance/compound-protocol/blob/master/contracts/InterestRateModel.sol\n//Copyright 2020 Compound Labs, Inc.\n//Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n//1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n//2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n//3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n//THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\n/**\n  * @title Developer Lend's IInterestRateModel Interface\n  * @author Developer Lend\n  */\ninterface IInterestRateModel {\n    /**\n      * @notice Calculates the current borrow interest rate per block\n      * @param cash The total amount of cash the market has\n      * @param borrows The total amount of borrows the market has outstanding\n      * @param reserves The total amount of reserves the market has\n      * @return The borrow rate per block (as a percentage, and scaled by 1e18)\n      */\n    function getBorrowRate(uint cash, uint borrows, uint reserves) external view returns (uint);\n\n    /**\n      * @notice Calculates the current supply interest rate per block\n      * @param cash The total amount of cash the market has\n      * @param borrows The total amount of borrows the market has outstanding\n      * @param reserves The total amount of reserves the market has\n      * @param reserveFactorMantissa The current reserve factor the market has\n      * @return The supply rate per block (as a percentage, and scaled by 1e18)\n      */\n    function getSupplyRate(uint cash, uint borrows, uint reserves, uint reserveFactorMantissa) external view returns (uint);\n\n}\n"
			},
			"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol": {
				"content": "pragma solidity ^0.6.0;\n\nimport \"../GSN/Context.sol\";\nimport \"../Initializable.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract OwnableUpgradeSafe is Initializable, ContextUpgradeSafe {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n\n    function __Ownable_init() internal initializer {\n        __Context_init_unchained();\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal initializer {\n\n\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n\n    }\n\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol": {
				"content": "pragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol": {
				"content": "pragma solidity >=0.4.24 <0.7.0;\n\n\n/**\n * @title Initializable\n *\n * @dev Helper contract to support initializer functions. To use it, replace\n * the constructor with a function that has the `initializer` modifier.\n * WARNING: Unlike constructors, initializer functions must be manually\n * invoked. This applies both to deploying an Initializable contract, as well\n * as extending an Initializable contract via inheritance.\n * WARNING: When used with inheritance, manual care must be taken to not invoke\n * a parent initializer twice, or ensure that all initializers are idempotent,\n * because this is not dealt with automatically as with constructors.\n */\ncontract Initializable {\n\n  /**\n   * @dev Indicates that the contract has been initialized.\n   */\n  bool private initialized;\n\n  /**\n   * @dev Indicates that the contract is in the process of being initialized.\n   */\n  bool private initializing;\n\n  /**\n   * @dev Modifier to use in the initializer function of a contract.\n   */\n  modifier initializer() {\n    require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\");\n\n    bool isTopLevelCall = !initializing;\n    if (isTopLevelCall) {\n      initializing = true;\n      initialized = true;\n    }\n\n    _;\n\n    if (isTopLevelCall) {\n      initializing = false;\n    }\n  }\n\n  /// @dev Returns true if and only if the function is running in the constructor\n  function isConstructor() private view returns (bool) {\n    // extcodesize checks the size of the code stored in an address, and\n    // address returns the current address. Since the code is still not\n    // deployed when running a constructor, any checks on its code size will\n    // yield zero, making it an effective way to detect if a contract is\n    // under construction or not.\n    address self = address(this);\n    uint256 cs;\n    assembly { cs := extcodesize(self) }\n    return cs == 0;\n  }\n\n  // Reserved storage space to allow for layout changes in the future.\n  uint256[50] private ______gap;\n}\n"
			},
			"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol": {
				"content": "pragma solidity ^0.6.0;\nimport \"../Initializable.sol\";\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract ContextUpgradeSafe is Initializable {\n    // Empty internal constructor, to prevent people from mistakenly deploying\n    // an instance of this contract, which should be used via inheritance.\n\n    function __Context_init() internal initializer {\n        __Context_init_unchained();\n    }\n\n    function __Context_init_unchained() internal initializer {\n\n\n    }\n\n\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n\n    uint256[50] private __gap;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol": {
				"ContextUpgradeSafe": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":556:1305  contract ContextUpgradeSafe is Initializable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":556:1305  contract ContextUpgradeSafe is Initializable {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fe661dc0dd617e81159088fc26a41d59a4fedf80e359a6e9bf5410ffb407ea6f64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220fe661dc0dd617e81159088fc26a41d59a4fedf80e359a6e9bf5410ffb407ea6f64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID PUSH7 0x1DC0DD617E8115 SWAP1 DUP9 0xFC 0x26 LOG4 SAR MSIZE LOG4 INVALID 0xDF DUP1 0xE3 MSIZE 0xA6 0xE9 0xBF SLOAD LT SELFDESTRUCT 0xB4 SMOD 0xEA PUSH16 0x64736F6C634300060C00330000000000 ",
							"sourceMap": "556:749:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220fe661dc0dd617e81159088fc26a41d59a4fedf80e359a6e9bf5410ffb407ea6f64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID PUSH7 0x1DC0DD617E8115 SWAP1 DUP9 0xFC 0x26 LOG4 SAR MSIZE LOG4 INVALID 0xDF DUP1 0xE3 MSIZE 0xA6 0xE9 0xBF SLOAD LT SELFDESTRUCT 0xB4 SMOD 0xEA PUSH16 0x64736F6C634300060C00330000000000 ",
							"sourceMap": "556:749:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"__Context_init()": "infinite",
								"__Context_init_unchained()": "infinite",
								"_msgData()": "infinite",
								"_msgSender()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 556,
									"end": 1305,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fe661dc0dd617e81159088fc26a41d59a4fedf80e359a6e9bf5410ffb407ea6f64736f6c634300060c0033",
									".code": [
										{
											"begin": 556,
											"end": 1305,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 556,
											"end": 1305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 556,
											"end": 1305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 556,
											"end": 1305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 1305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 556,
											"end": 1305,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":\"ContextUpgradeSafe\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0xe81686511d62f18b2d9c693c2c94c0a789c690de63aa90e15451ebf65c5bfd3e\",\"urls\":[\"bzz-raw://1332ee1d2b096456bf2e5795b5871d0fed47be6a31c9a2f2cef9206a299565ea\",\"dweb:/ipfs/Qmdu1847Y4UL3gTjbLUManMGfxYEoyGPSodM3Br89SKzwx\"]},\"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 50,
								"contract": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:ContextUpgradeSafe",
								"label": "initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 53,
								"contract": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:ContextUpgradeSafe",
								"label": "initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 118,
								"contract": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:ContextUpgradeSafe",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 43,
								"contract": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:ContextUpgradeSafe",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol": {
				"Initializable": {
					"abi": [],
					"devdoc": {
						"details": "Helper contract to support initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier. WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"initialized": {
								"details": "Indicates that the contract has been initialized."
							},
							"initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"title": "Initializable",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":657:2014  contract Initializable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":657:2014  contract Initializable {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220daf0868b97284bbb43035033992e5d811748f9110379570d95ba8262c2d7363864736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220daf0868b97284bbb43035033992e5d811748f9110379570d95ba8262c2d7363864736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA CREATE DUP7 DUP12 SWAP8 0x28 0x4B 0xBB NUMBER SUB POP CALLER SWAP10 0x2E 0x5D DUP2 OR 0x48 0xF9 GT SUB PUSH26 0x570D95BA8262C2D7363864736F6C634300060C00330000000000 ",
							"sourceMap": "657:1357:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220daf0868b97284bbb43035033992e5d811748f9110379570d95ba8262c2d7363864736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA CREATE DUP7 DUP12 SWAP8 0x28 0x4B 0xBB NUMBER SUB POP CALLER SWAP10 0x2E 0x5D DUP2 OR 0x48 0xF9 GT SUB PUSH26 0x570D95BA8262C2D7363864736F6C634300060C00330000000000 ",
							"sourceMap": "657:1357:1:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"isConstructor()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 657,
									"end": 2014,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220daf0868b97284bbb43035033992e5d811748f9110379570d95ba8262c2d7363864736f6c634300060c0033",
									".code": [
										{
											"begin": 657,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 657,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 2014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 657,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 2014,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 657,
											"end": 2014,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper contract to support initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier. WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"initialized\":{\"details\":\"Indicates that the contract has been initialized.\"},\"initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"title\":\"Initializable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 50,
								"contract": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:Initializable",
								"label": "initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 53,
								"contract": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:Initializable",
								"label": "initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 118,
								"contract": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:Initializable",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol": {
				"OwnableUpgradeSafe": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":580:2462  contract OwnableUpgradeSafe is Initializable, ContextUpgradeSafe {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":580:2462  contract OwnableUpgradeSafe is Initializable, ContextUpgradeSafe {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1894:2039  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1271:1348  function owner() public view returns (address) {... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2188:2428  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_5:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_12\n      jump\t// in\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1894:2039  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1485:1497  _msgSender() */\n      tag_14\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1485:1495  _msgSender */\n      tag_15\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1485:1497  _msgSender() */\n      jump\t// in\n    tag_14:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1475:1481  _owner */\n      sload(0x65)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1475:1497  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1467:1534  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_16\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_16:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1984:1990  _owner */\n      sload(0x65)\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1963:2003  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2000:2001  0 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1984:1990  _owner */\n      and\n      swap1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1963:2003  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2000:2001  0 */\n      dup4\n      swap1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1963:2003  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2013:2019  _owner */\n      0x65\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2013:2032  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1894:2039  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1271:1348  function owner() public view returns (address) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1335:1341  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x65))\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1271:1348  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2188:2428  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_12:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1485:1497  _msgSender() */\n      tag_20\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1485:1495  _msgSender */\n      tag_15\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1485:1497  _msgSender() */\n      jump\t// in\n    tag_20:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1475:1481  _owner */\n      sload(0x65)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1475:1497  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1467:1534  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_21\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_21:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2276:2298  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2268:2341  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_23\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_23:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2377:2383  _owner */\n      sload(0x65)\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2356:2394  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup5\n      and\n      swap3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2377:2383  _owner */\n      and\n      swap1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2356:2394  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2377:2383  _owner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2356:2394  OwnershipTransferred(_owner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2404:2410  _owner */\n      0x65\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2404:2421  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2188:2428  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":931:1035  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":1018:1028  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":931:1035  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n\n    auxdata: 0xa264697066735822122061ca351f77bc207360a99a38d2aec021e9a5ec3f1b89daf351e3b70812a5cb7764736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506102c8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b14610074575b600080fd5b61004e61009a565b005b61005861014e565b604080516001600160a01b039092168252519081900360200190f35b61004e6004803603602081101561008a57600080fd5b50356001600160a01b031661015d565b6100a2610268565b6065546001600160a01b03908116911614610104576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6065546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3606580546001600160a01b0319169055565b6065546001600160a01b031690565b610165610268565b6065546001600160a01b039081169116146101c7576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03811661020c5760405162461bcd60e51b815260040180806020018281038252602681526020018061026d6026913960400191505060405180910390fd5b6065546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3606580546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122061ca351f77bc207360a99a38d2aec021e9a5ec3f1b89daf351e3b70812a5cb7764736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x74 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x14E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15D JUMP JUMPDEST PUSH2 0xA2 PUSH2 0x268 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x104 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x268 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1C7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x20C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26D PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373A264697066735822122061CA351F77BC KECCAK256 PUSH20 0x60A99A38D2AEC021E9A5EC3F1B89DAF351E3B708 SLT 0xA5 0xCB PUSH24 0x64736F6C634300060C003300000000000000000000000000 ",
							"sourceMap": "580:1882:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b14610074575b600080fd5b61004e61009a565b005b61005861014e565b604080516001600160a01b039092168252519081900360200190f35b61004e6004803603602081101561008a57600080fd5b50356001600160a01b031661015d565b6100a2610268565b6065546001600160a01b03908116911614610104576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6065546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3606580546001600160a01b0319169055565b6065546001600160a01b031690565b610165610268565b6065546001600160a01b039081169116146101c7576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03811661020c5760405162461bcd60e51b815260040180806020018281038252602681526020018061026d6026913960400191505060405180910390fd5b6065546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3606580546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122061ca351f77bc207360a99a38d2aec021e9a5ec3f1b89daf351e3b70812a5cb7764736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x74 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x14E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15D JUMP JUMPDEST PUSH2 0xA2 PUSH2 0x268 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x104 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x268 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1C7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x20C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26D PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373A264697066735822122061CA351F77BC KECCAK256 PUSH20 0x60A99A38D2AEC021E9A5EC3F1B89DAF351E3B708 SLT 0xA5 0xCB PUSH24 0x64736F6C634300060C003300000000000000000000000000 ",
							"sourceMap": "580:1882:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1894:145;;;:::i;:::-;;1271:77;;;:::i;:::-;;;;-1:-1:-1;;;;;1271:77:2;;;;;;;;;;;;;;2188:240;;;;;;;;;;;;;;;;-1:-1:-1;2188:240:2;-1:-1:-1;;;;;2188:240:2;;:::i;1894:145::-;1485:12;:10;:12::i;:::-;1475:6;;-1:-1:-1;;;;;1475:6:2;;;:22;;;1467:67;;;;;-1:-1:-1;;;1467:67:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1984:6:::1;::::0;1963:40:::1;::::0;2000:1:::1;::::0;-1:-1:-1;;;;;1984:6:2::1;::::0;1963:40:::1;::::0;2000:1;;1963:40:::1;2013:6;:19:::0;;-1:-1:-1;;;;;;2013:19:2::1;::::0;;1894:145::o;1271:77::-;1335:6;;-1:-1:-1;;;;;1335:6:2;1271:77;:::o;2188:240::-;1485:12;:10;:12::i;:::-;1475:6;;-1:-1:-1;;;;;1475:6:2;;;:22;;;1467:67;;;;;-1:-1:-1;;;1467:67:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2276:22:2;::::1;2268:73;;;;-1:-1:-1::0;;;2268:73:2::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2377:6;::::0;2356:38:::1;::::0;-1:-1:-1;;;;;2356:38:2;;::::1;::::0;2377:6:::1;::::0;2356:38:::1;::::0;2377:6:::1;::::0;2356:38:::1;2404:6;:17:::0;;-1:-1:-1;;;;;;2404:17:2::1;-1:-1:-1::0;;;;;2404:17:2;;;::::1;::::0;;;::::1;::::0;;2188:240::o;931:104:0:-;1018:10;931:104;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "142400",
								"executionCost": "190",
								"totalCost": "142590"
							},
							"external": {
								"owner()": "1037",
								"renounceOwnership()": "24179",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"__Ownable_init()": "infinite",
								"__Ownable_init_unchained()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 580,
									"end": 2462,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 580,
									"end": 2462,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 580,
									"end": 2462,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 580,
									"end": 2462,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 580,
									"end": 2462,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 580,
									"end": 2462,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 580,
									"end": 2462,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 580,
									"end": 2462,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 580,
									"end": 2462,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 580,
									"end": 2462,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 580,
									"end": 2462,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 580,
									"end": 2462,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 580,
									"end": 2462,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 580,
									"end": 2462,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 580,
									"end": 2462,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 580,
									"end": 2462,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 580,
									"end": 2462,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 580,
									"end": 2462,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 580,
									"end": 2462,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 580,
									"end": 2462,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 580,
									"end": 2462,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122061ca351f77bc207360a99a38d2aec021e9a5ec3f1b89daf351e3b70812a5cb7764736f6c634300060c0033",
									".code": [
										{
											"begin": 580,
											"end": 2462,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 580,
											"end": 2462,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 2039,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1894,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1894,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1894,
											"end": 2039,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1894,
											"end": 2039,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1894,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 2039,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1894,
											"end": 2039,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1894,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1485,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2003,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1963,
											"end": 2003,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2003,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2013,
											"end": 2019,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 2039,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1485,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2276,
											"end": 2298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2298,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH data",
											"source": 2,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2410,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 931,
											"end": 1035,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 931,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1028,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 931,
											"end": 1035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 931,
											"end": 1035,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":\"OwnableUpgradeSafe\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0xe81686511d62f18b2d9c693c2c94c0a789c690de63aa90e15451ebf65c5bfd3e\",\"urls\":[\"bzz-raw://1332ee1d2b096456bf2e5795b5871d0fed47be6a31c9a2f2cef9206a299565ea\",\"dweb:/ipfs/Qmdu1847Y4UL3gTjbLUManMGfxYEoyGPSodM3Br89SKzwx\"]},\"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":{\"keccak256\":\"0x04a69a78363214b4e3055db8e620bed222349f0c81e9d1cbe769eb849b69b73f\",\"urls\":[\"bzz-raw://b3115459376196d6c2c3817439c169d9b052b27b70e8ee2e28963cda760736da\",\"dweb:/ipfs/QmXaNF5rmcDSAzBiFMQjf979qb9xNXqD9eZtgo4uM9VEis\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 50,
								"contract": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:OwnableUpgradeSafe",
								"label": "initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 53,
								"contract": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:OwnableUpgradeSafe",
								"label": "initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 118,
								"contract": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:OwnableUpgradeSafe",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 43,
								"contract": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:OwnableUpgradeSafe",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:OwnableUpgradeSafe",
								"label": "_owner",
								"offset": 0,
								"slot": "101",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:OwnableUpgradeSafe",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":589:5177  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":589:5177  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208563d890a7279358a13be2ada6cd662ae2417d1d3111accb32d931f7787c4cc464736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208563d890a7279358a13be2ada6cd662ae2417d1d3111accb32d931f7787c4cc464736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 PUSH4 0xD890A727 SWAP4 PC LOG1 EXTCODESIZE 0xE2 0xAD 0xA6 0xCD PUSH7 0x2AE2417D1D3111 0xAC 0xCB ORIGIN 0xD9 BALANCE 0xF7 PUSH25 0x7C4CC464736F6C634300060C00330000000000000000000000 ",
							"sourceMap": "589:4588:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208563d890a7279358a13be2ada6cd662ae2417d1d3111accb32d931f7787c4cc464736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 PUSH4 0xD890A727 SWAP4 PC LOG1 EXTCODESIZE 0xE2 0xAD 0xA6 0xCD PUSH7 0x2AE2417D1D3111 0xAC 0xCB ORIGIN 0xD9 BALANCE 0xF7 PUSH25 0x7C4CC464736F6C634300060C00330000000000000000000000 ",
							"sourceMap": "589:4588:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 589,
									"end": 5177,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208563d890a7279358a13be2ada6cd662ae2417d1d3111accb32d931f7787c4cc464736f6c634300060c0033",
									".code": [
										{
											"begin": 589,
											"end": 5177,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"rate/BaseJumpRateModel.sol": {
				"BaseJumpRateModel": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "baseRatePerBlock",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "multiplierPerBlock",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "jumpMultiplierPerBlock",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "kink",
									"type": "uint256"
								}
							],
							"name": "NewInterestParams",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "baseRatePerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "blocksPerYear",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cash",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "borrows",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserves",
									"type": "uint256"
								}
							],
							"name": "getBorrowRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cash",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "borrows",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserves",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveFactorMantissa",
									"type": "uint256"
								}
							],
							"name": "getSupplyRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "jumpMultiplierPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kink",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "multiplierPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "baseRatePerYear",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "multiplierPerYear",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "jumpMultiplierPerYear",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "kink_",
									"type": "uint256"
								}
							],
							"name": "updateJumpRateModel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cash",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "borrows",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserves",
									"type": "uint256"
								}
							],
							"name": "utilizationRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Compound (modified by Dharma Labs, refactored by Arr00)",
						"kind": "dev",
						"methods": {
							"getBorrowRate(uint256,uint256,uint256)": {
								"params": {
									"borrows": "The amount of borrows in the market",
									"cash": "The amount of cash in the market",
									"reserves": "The amount of reserves in the market"
								},
								"returns": {
									"_0": "The borrow rate percentage per block as a mantissa (scaled by 1e18)"
								}
							},
							"getSupplyRate(uint256,uint256,uint256,uint256)": {
								"params": {
									"borrows": "The amount of borrows in the market",
									"cash": "The amount of cash in the market",
									"reserveFactorMantissa": "The current reserve factor for the market",
									"reserves": "The amount of reserves in the market"
								},
								"returns": {
									"_0": "The supply rate percentage per block as a mantissa (scaled by 1e18)"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateJumpRateModel(uint256,uint256,uint256,uint256)": {
								"params": {
									"baseRatePerYear": "The approximate target base APR, as a mantissa (scaled by 1e18)",
									"jumpMultiplierPerYear": "The multiplierPerBlock after hitting a specified utilization point",
									"kink_": "The utilization point at which the jump multiplier is applied",
									"multiplierPerYear": "The rate of increase in interest rate wrt utilization (scaled by 1e18)"
								}
							},
							"utilizationRate(uint256,uint256,uint256)": {
								"params": {
									"borrows": "The amount of borrows in the market",
									"cash": "The amount of cash in the market",
									"reserves": "The amount of reserves in the market (currently unused)"
								},
								"returns": {
									"_0": "The utilization rate as a mantissa between [0, 1e18]"
								}
							}
						},
						"title": "Logic for Compound's JumpRateModel Contract V2.",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"rate/BaseJumpRateModel.sol\":2051:7895  contract BaseJumpRateModel is IInterestRateModel, OwnableUpgradeSafe {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"rate/BaseJumpRateModel.sol\":2051:7895  contract BaseJumpRateModel is IInterestRateModel, OwnableUpgradeSafe {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa385fb96\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xa385fb96\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb8168816\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb9f9850a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf14039de\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xfd2da339\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x15f24053\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2037f3e7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6e71e2d8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8726bb89\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"rate/BaseJumpRateModel.sol\":5633:5812  function getBorrowRate(uint cash, uint borrows, uint reserves) external virtual override view returns (uint) {... */\n    tag_3:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0x40\n      add\n      calldataload\n      tag_18\n      jump\t// in\n    tag_16:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"rate/BaseJumpRateModel.sol\":3485:3719  function updateJumpRateModel(uint baseRatePerYear, uint multiplierPerYear, uint jumpMultiplierPerYear, uint kink_) external {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      add\n      calldataload\n      tag_21\n      jump\t// in\n    tag_19:\n      stop\n        /* \"rate/BaseJumpRateModel.sol\":4100:4390  function utilizationRate(uint cash, uint borrows, uint reserves) public pure returns (uint) {... */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0x40\n      add\n      calldataload\n      tag_24\n      jump\t// in\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1894:2039  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_19\n      tag_26\n      jump\t// in\n        /* \"rate/BaseJumpRateModel.sol\":2550:2580  uint public multiplierPerBlock */\n    tag_7:\n      tag_16\n      tag_28\n      jump\t// in\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1271:1348  function owner() public view returns (address) {... */\n    tag_8:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"rate/BaseJumpRateModel.sol\":2390:2435  uint public constant blocksPerYear = 15768000 */\n    tag_9:\n      tag_16\n      tag_32\n      jump\t// in\n        /* \"rate/BaseJumpRateModel.sol\":6674:6904  function getSupplyRate(uint cash, uint borrows, uint reserves, uint reserveFactorMantissa) external virtual override view returns (uint) {... */\n    tag_10:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      add\n      calldataload\n      tag_35\n      jump\t// in\n        /* \"rate/BaseJumpRateModel.sol\":2826:2860  uint public jumpMultiplierPerBlock */\n    tag_11:\n      tag_16\n      tag_37\n      jump\t// in\n        /* \"rate/BaseJumpRateModel.sol\":2693:2721  uint public baseRatePerBlock */\n    tag_12:\n      tag_16\n      tag_39\n      jump\t// in\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2188:2428  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_42\n      jump\t// in\n        /* \"rate/BaseJumpRateModel.sol\":2960:2976  uint public kink */\n    tag_14:\n      tag_16\n      tag_44\n      jump\t// in\n        /* \"rate/BaseJumpRateModel.sol\":5633:5812  function getBorrowRate(uint cash, uint borrows, uint reserves) external virtual override view returns (uint) {... */\n    tag_18:\n        /* \"rate/BaseJumpRateModel.sol\":5736:5740  uint */\n      0x00\n        /* \"rate/BaseJumpRateModel.sol\":5759:5805  getBorrowRateInternal(cash, borrows, reserves) */\n      tag_46\n        /* \"rate/BaseJumpRateModel.sol\":5781:5785  cash */\n      dup5\n        /* \"rate/BaseJumpRateModel.sol\":5787:5794  borrows */\n      dup5\n        /* \"rate/BaseJumpRateModel.sol\":5796:5804  reserves */\n      dup5\n        /* \"rate/BaseJumpRateModel.sol\":5759:5780  getBorrowRateInternal */\n      tag_47\n        /* \"rate/BaseJumpRateModel.sol\":5759:5805  getBorrowRateInternal(cash, borrows, reserves) */\n      jump\t// in\n    tag_46:\n        /* \"rate/BaseJumpRateModel.sol\":5752:5805  return getBorrowRateInternal(cash, borrows, reserves) */\n      swap1\n      pop\n        /* \"rate/BaseJumpRateModel.sol\":5633:5812  function getBorrowRate(uint cash, uint borrows, uint reserves) external virtual override view returns (uint) {... */\n    tag_45:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"rate/BaseJumpRateModel.sol\":3485:3719  function updateJumpRateModel(uint baseRatePerYear, uint multiplierPerYear, uint jumpMultiplierPerYear, uint kink_) external {... */\n    tag_21:\n        /* \"rate/BaseJumpRateModel.sol\":3619:3712  updateJumpRateModelInternal(baseRatePerYear, multiplierPerYear, jumpMultiplierPerYear, kink_) */\n      tag_49\n        /* \"rate/BaseJumpRateModel.sol\":3647:3662  baseRatePerYear */\n      dup5\n        /* \"rate/BaseJumpRateModel.sol\":3664:3681  multiplierPerYear */\n      dup5\n        /* \"rate/BaseJumpRateModel.sol\":3683:3704  jumpMultiplierPerYear */\n      dup5\n        /* \"rate/BaseJumpRateModel.sol\":3706:3711  kink_ */\n      dup5\n        /* \"rate/BaseJumpRateModel.sol\":3619:3646  updateJumpRateModelInternal */\n      tag_50\n        /* \"rate/BaseJumpRateModel.sol\":3619:3712  updateJumpRateModelInternal(baseRatePerYear, multiplierPerYear, jumpMultiplierPerYear, kink_) */\n      jump\t// in\n    tag_49:\n        /* \"rate/BaseJumpRateModel.sol\":3485:3719  function updateJumpRateModel(uint baseRatePerYear, uint multiplierPerYear, uint jumpMultiplierPerYear, uint kink_) external {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"rate/BaseJumpRateModel.sol\":4100:4390  function utilizationRate(uint cash, uint borrows, uint reserves) public pure returns (uint) {... */\n    tag_24:\n        /* \"rate/BaseJumpRateModel.sol\":4186:4190  uint */\n      0x00\n        /* \"rate/BaseJumpRateModel.sol\":4265:4277  borrows == 0 */\n      dup3\n        /* \"rate/BaseJumpRateModel.sol\":4261:4312  if (borrows == 0) {... */\n      tag_52\n      jumpi\n      pop\n        /* \"rate/BaseJumpRateModel.sol\":4300:4301  0 */\n      0x00\n        /* \"rate/BaseJumpRateModel.sol\":4293:4301  return 0 */\n      jump(tag_45)\n        /* \"rate/BaseJumpRateModel.sol\":4261:4312  if (borrows == 0) {... */\n    tag_52:\n        /* \"rate/BaseJumpRateModel.sol\":4329:4383  borrows.mul(1e18).div(cash.add(borrows).sub(reserves)) */\n      tag_46\n        /* \"rate/BaseJumpRateModel.sol\":4351:4382  cash.add(borrows).sub(reserves) */\n      tag_54\n        /* \"rate/BaseJumpRateModel.sol\":4373:4381  reserves */\n      dup4\n        /* \"rate/BaseJumpRateModel.sol\":4351:4368  cash.add(borrows) */\n      tag_55\n        /* \"rate/BaseJumpRateModel.sol\":4351:4355  cash */\n      dup8\n        /* \"rate/BaseJumpRateModel.sol\":4360:4367  borrows */\n      dup8\n        /* \"rate/BaseJumpRateModel.sol\":4351:4359  cash.add */\n      tag_56\n        /* \"rate/BaseJumpRateModel.sol\":4351:4368  cash.add(borrows) */\n      jump\t// in\n    tag_55:\n        /* \"rate/BaseJumpRateModel.sol\":4351:4372  cash.add(borrows).sub */\n      swap1\n      tag_57\n        /* \"rate/BaseJumpRateModel.sol\":4351:4382  cash.add(borrows).sub(reserves) */\n      jump\t// in\n    tag_54:\n        /* \"rate/BaseJumpRateModel.sol\":4329:4346  borrows.mul(1e18) */\n      tag_58\n        /* \"rate/BaseJumpRateModel.sol\":4329:4336  borrows */\n      dup6\n        /* \"rate/BaseJumpRateModel.sol\":4341:4345  1e18 */\n      0x0de0b6b3a7640000\n        /* \"rate/BaseJumpRateModel.sol\":4329:4340  borrows.mul */\n      tag_59\n        /* \"rate/BaseJumpRateModel.sol\":4329:4346  borrows.mul(1e18) */\n      jump\t// in\n    tag_58:\n        /* \"rate/BaseJumpRateModel.sol\":4329:4350  borrows.mul(1e18).div */\n      swap1\n      tag_60\n        /* \"rate/BaseJumpRateModel.sol\":4329:4383  borrows.mul(1e18).div(cash.add(borrows).sub(reserves)) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1894:2039  function renounceOwnership() public virtual onlyOwner {... */\n    tag_26:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1485:1497  _msgSender() */\n      tag_62\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1485:1495  _msgSender */\n      tag_63\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1485:1497  _msgSender() */\n      jump\t// in\n    tag_62:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1475:1481  _owner */\n      sload(0x65)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1475:1497  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1467:1534  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_64\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_64:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1984:1990  _owner */\n      sload(0x65)\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1963:2003  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2000:2001  0 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1984:1990  _owner */\n      and\n      swap1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1963:2003  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2000:2001  0 */\n      dup4\n      swap1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1963:2003  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2013:2019  _owner */\n      0x65\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2013:2032  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1894:2039  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"rate/BaseJumpRateModel.sol\":2550:2580  uint public multiplierPerBlock */\n    tag_28:\n      sload(0x97)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1271:1348  function owner() public view returns (address) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1335:1341  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x65))\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1271:1348  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"rate/BaseJumpRateModel.sol\":2390:2435  uint public constant blocksPerYear = 15768000 */\n    tag_32:\n        /* \"rate/BaseJumpRateModel.sol\":2427:2435  15768000 */\n      0xf099c0\n        /* \"rate/BaseJumpRateModel.sol\":2390:2435  uint public constant blocksPerYear = 15768000 */\n      dup2\n      jump\t// out\n        /* \"rate/BaseJumpRateModel.sol\":6674:6904  function getSupplyRate(uint cash, uint borrows, uint reserves, uint reserveFactorMantissa) external virtual override view returns (uint) {... */\n    tag_35:\n        /* \"rate/BaseJumpRateModel.sol\":6805:6809  uint */\n      0x00\n        /* \"rate/BaseJumpRateModel.sol\":6828:6897  getSupplyRateInternal(cash, borrows, reserves, reserveFactorMantissa) */\n      tag_68\n        /* \"rate/BaseJumpRateModel.sol\":6850:6854  cash */\n      dup6\n        /* \"rate/BaseJumpRateModel.sol\":6856:6863  borrows */\n      dup6\n        /* \"rate/BaseJumpRateModel.sol\":6865:6873  reserves */\n      dup6\n        /* \"rate/BaseJumpRateModel.sol\":6875:6896  reserveFactorMantissa */\n      dup6\n        /* \"rate/BaseJumpRateModel.sol\":6828:6849  getSupplyRateInternal */\n      tag_69\n        /* \"rate/BaseJumpRateModel.sol\":6828:6897  getSupplyRateInternal(cash, borrows, reserves, reserveFactorMantissa) */\n      jump\t// in\n    tag_68:\n        /* \"rate/BaseJumpRateModel.sol\":6821:6897  return getSupplyRateInternal(cash, borrows, reserves, reserveFactorMantissa) */\n      swap6\n        /* \"rate/BaseJumpRateModel.sol\":6674:6904  function getSupplyRate(uint cash, uint borrows, uint reserves, uint reserveFactorMantissa) external virtual override view returns (uint) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"rate/BaseJumpRateModel.sol\":2826:2860  uint public jumpMultiplierPerBlock */\n    tag_37:\n      sload(0x99)\n      dup2\n      jump\t// out\n        /* \"rate/BaseJumpRateModel.sol\":2693:2721  uint public baseRatePerBlock */\n    tag_39:\n      sload(0x98)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2188:2428  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_42:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1485:1497  _msgSender() */\n      tag_71\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1485:1495  _msgSender */\n      tag_63\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1485:1497  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1475:1481  _owner */\n      sload(0x65)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1475:1497  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1467:1534  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_72\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2276:2298  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2268:2341  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2377:2383  _owner */\n      sload(0x65)\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2356:2394  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup5\n      and\n      swap3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2377:2383  _owner */\n      and\n      swap1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2356:2394  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2377:2383  _owner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2356:2394  OwnershipTransferred(_owner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2404:2410  _owner */\n      0x65\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2404:2421  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2188:2428  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"rate/BaseJumpRateModel.sol\":2960:2976  uint public kink */\n    tag_44:\n      sload(0x9a)\n      dup2\n      jump\t// out\n        /* \"rate/BaseJumpRateModel.sol\":4769:5298  function getBorrowRateInternal(uint cash, uint borrows, uint reserves) internal view returns (uint) {... */\n    tag_47:\n        /* \"rate/BaseJumpRateModel.sol\":4863:4867  uint */\n      0x00\n        /* \"rate/BaseJumpRateModel.sol\":4879:4888  uint util */\n      dup1\n        /* \"rate/BaseJumpRateModel.sol\":4891:4931  utilizationRate(cash, borrows, reserves) */\n      tag_76\n        /* \"rate/BaseJumpRateModel.sol\":4907:4911  cash */\n      dup6\n        /* \"rate/BaseJumpRateModel.sol\":4913:4920  borrows */\n      dup6\n        /* \"rate/BaseJumpRateModel.sol\":4922:4930  reserves */\n      dup6\n        /* \"rate/BaseJumpRateModel.sol\":4891:4906  utilizationRate */\n      tag_24\n        /* \"rate/BaseJumpRateModel.sol\":4891:4931  utilizationRate(cash, borrows, reserves) */\n      jump\t// in\n    tag_76:\n        /* \"rate/BaseJumpRateModel.sol\":4879:4931  uint util = utilizationRate(cash, borrows, reserves) */\n      swap1\n      pop\n        /* \"rate/BaseJumpRateModel.sol\":4954:4958  kink */\n      sload(0x9a)\n        /* \"rate/BaseJumpRateModel.sol\":4946:4950  util */\n      dup2\n        /* \"rate/BaseJumpRateModel.sol\":4946:4958  util <= kink */\n      gt\n        /* \"rate/BaseJumpRateModel.sol\":4942:5292  if (util <= kink) {... */\n      tag_77\n      jumpi\n        /* \"rate/BaseJumpRateModel.sol\":4981:5041  util.mul(multiplierPerBlock).div(1e18).add(baseRatePerBlock) */\n      tag_78\n        /* \"rate/BaseJumpRateModel.sol\":5024:5040  baseRatePerBlock */\n      sload(0x98)\n        /* \"rate/BaseJumpRateModel.sol\":4981:5019  util.mul(multiplierPerBlock).div(1e18) */\n      tag_79\n        /* \"rate/BaseJumpRateModel.sol\":5014:5018  1e18 */\n      0x0de0b6b3a7640000\n        /* \"rate/BaseJumpRateModel.sol\":4981:5009  util.mul(multiplierPerBlock) */\n      tag_58\n        /* \"rate/BaseJumpRateModel.sol\":4990:5008  multiplierPerBlock */\n      sload(0x97)\n        /* \"rate/BaseJumpRateModel.sol\":4981:4985  util */\n      dup7\n        /* \"rate/BaseJumpRateModel.sol\":4981:4989  util.mul */\n      tag_59\n      swap1\n        /* \"rate/BaseJumpRateModel.sol\":4981:5009  util.mul(multiplierPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"rate/BaseJumpRateModel.sol\":4981:5019  util.mul(multiplierPerBlock).div(1e18) */\n    tag_79:\n        /* \"rate/BaseJumpRateModel.sol\":4981:5023  util.mul(multiplierPerBlock).div(1e18).add */\n      swap1\n      tag_56\n        /* \"rate/BaseJumpRateModel.sol\":4981:5041  util.mul(multiplierPerBlock).div(1e18).add(baseRatePerBlock) */\n      jump\t// in\n    tag_78:\n        /* \"rate/BaseJumpRateModel.sol\":4974:5041  return util.mul(multiplierPerBlock).div(1e18).add(baseRatePerBlock) */\n      swap2\n      pop\n      pop\n      jump(tag_45)\n        /* \"rate/BaseJumpRateModel.sol\":4942:5292  if (util <= kink) {... */\n    tag_77:\n        /* \"rate/BaseJumpRateModel.sol\":5072:5087  uint normalRate */\n      0x00\n        /* \"rate/BaseJumpRateModel.sol\":5090:5150  kink.mul(multiplierPerBlock).div(1e18).add(baseRatePerBlock) */\n      tag_82\n        /* \"rate/BaseJumpRateModel.sol\":5133:5149  baseRatePerBlock */\n      sload(0x98)\n        /* \"rate/BaseJumpRateModel.sol\":5090:5128  kink.mul(multiplierPerBlock).div(1e18) */\n      tag_79\n        /* \"rate/BaseJumpRateModel.sol\":5123:5127  1e18 */\n      0x0de0b6b3a7640000\n        /* \"rate/BaseJumpRateModel.sol\":5090:5118  kink.mul(multiplierPerBlock) */\n      tag_58\n        /* \"rate/BaseJumpRateModel.sol\":5099:5117  multiplierPerBlock */\n      sload(0x97)\n        /* \"rate/BaseJumpRateModel.sol\":5090:5094  kink */\n      sload(0x9a)\n        /* \"rate/BaseJumpRateModel.sol\":5090:5098  kink.mul */\n      tag_59\n      swap1\n        /* \"rate/BaseJumpRateModel.sol\":5090:5118  kink.mul(multiplierPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"rate/BaseJumpRateModel.sol\":5090:5150  kink.mul(multiplierPerBlock).div(1e18).add(baseRatePerBlock) */\n    tag_82:\n        /* \"rate/BaseJumpRateModel.sol\":5072:5150  uint normalRate = kink.mul(multiplierPerBlock).div(1e18).add(baseRatePerBlock) */\n      swap1\n      pop\n        /* \"rate/BaseJumpRateModel.sol\":5164:5179  uint excessUtil */\n      0x00\n        /* \"rate/BaseJumpRateModel.sol\":5182:5196  util.sub(kink) */\n      tag_85\n        /* \"rate/BaseJumpRateModel.sol\":5191:5195  kink */\n      sload(0x9a)\n        /* \"rate/BaseJumpRateModel.sol\":5182:5186  util */\n      dup5\n        /* \"rate/BaseJumpRateModel.sol\":5182:5190  util.sub */\n      tag_57\n      swap1\n        /* \"rate/BaseJumpRateModel.sol\":5182:5196  util.sub(kink) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"rate/BaseJumpRateModel.sol\":5164:5196  uint excessUtil = util.sub(kink) */\n      swap1\n      pop\n        /* \"rate/BaseJumpRateModel.sol\":5217:5281  excessUtil.mul(jumpMultiplierPerBlock).div(1e18).add(normalRate) */\n      tag_86\n        /* \"rate/BaseJumpRateModel.sol\":5270:5280  normalRate */\n      dup3\n        /* \"rate/BaseJumpRateModel.sol\":5217:5265  excessUtil.mul(jumpMultiplierPerBlock).div(1e18) */\n      tag_79\n        /* \"rate/BaseJumpRateModel.sol\":5260:5264  1e18 */\n      0x0de0b6b3a7640000\n        /* \"rate/BaseJumpRateModel.sol\":5217:5255  excessUtil.mul(jumpMultiplierPerBlock) */\n      tag_58\n        /* \"rate/BaseJumpRateModel.sol\":5232:5254  jumpMultiplierPerBlock */\n      sload(0x99)\n        /* \"rate/BaseJumpRateModel.sol\":5217:5227  excessUtil */\n      dup7\n        /* \"rate/BaseJumpRateModel.sol\":5217:5231  excessUtil.mul */\n      tag_59\n      swap1\n        /* \"rate/BaseJumpRateModel.sol\":5217:5255  excessUtil.mul(jumpMultiplierPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"rate/BaseJumpRateModel.sol\":5217:5281  excessUtil.mul(jumpMultiplierPerBlock).div(1e18).add(normalRate) */\n    tag_86:\n        /* \"rate/BaseJumpRateModel.sol\":5210:5281  return excessUtil.mul(jumpMultiplierPerBlock).div(1e18).add(normalRate) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_45)\n        /* \"rate/BaseJumpRateModel.sol\":7393:7893  function updateJumpRateModelInternal(uint baseRatePerYear, uint multiplierPerYear, uint jumpMultiplierPerYear, uint kink_) internal onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1485:1497  _msgSender() */\n      tag_90\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1485:1495  _msgSender */\n      tag_63\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1485:1497  _msgSender() */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1475:1481  _owner */\n      sload(0x65)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1475:1497  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1467:1534  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_91\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_91:\n        /* \"rate/BaseJumpRateModel.sol\":7564:7598  baseRatePerYear.div(blocksPerYear) */\n      tag_93\n        /* \"rate/BaseJumpRateModel.sol\":7564:7579  baseRatePerYear */\n      dup5\n        /* \"rate/BaseJumpRateModel.sol\":2427:2435  15768000 */\n      0xf099c0\n        /* \"rate/BaseJumpRateModel.sol\":7564:7583  baseRatePerYear.div */\n      tag_60\n        /* \"rate/BaseJumpRateModel.sol\":7564:7598  baseRatePerYear.div(blocksPerYear) */\n      jump\t// in\n    tag_93:\n        /* \"rate/BaseJumpRateModel.sol\":7545:7561  baseRatePerBlock */\n      0x98\n        /* \"rate/BaseJumpRateModel.sol\":7545:7598  baseRatePerBlock = baseRatePerYear.div(blocksPerYear) */\n      sstore\n        /* \"rate/BaseJumpRateModel.sol\":7629:7688  (multiplierPerYear.mul(1e18)).div(blocksPerYear.mul(kink_)) */\n      tag_94\n        /* \"rate/BaseJumpRateModel.sol\":7663:7687  blocksPerYear.mul(kink_) */\n      tag_54\n        /* \"rate/BaseJumpRateModel.sol\":2427:2435  15768000 */\n      0xf099c0\n        /* \"rate/BaseJumpRateModel.sol\":7681:7686  kink_ */\n      dup4\n        /* \"rate/BaseJumpRateModel.sol\":7663:7680  blocksPerYear.mul */\n      tag_59\n        /* \"rate/BaseJumpRateModel.sol\":7663:7687  blocksPerYear.mul(kink_) */\n      jump\t// in\n        /* \"rate/BaseJumpRateModel.sol\":7629:7688  (multiplierPerYear.mul(1e18)).div(blocksPerYear.mul(kink_)) */\n    tag_94:\n        /* \"rate/BaseJumpRateModel.sol\":7608:7626  multiplierPerBlock */\n      0x97\n        /* \"rate/BaseJumpRateModel.sol\":7608:7688  multiplierPerBlock = (multiplierPerYear.mul(1e18)).div(blocksPerYear.mul(kink_)) */\n      sstore\n        /* \"rate/BaseJumpRateModel.sol\":7723:7763  jumpMultiplierPerYear.div(blocksPerYear) */\n      tag_97\n        /* \"rate/BaseJumpRateModel.sol\":7723:7744  jumpMultiplierPerYear */\n      dup3\n        /* \"rate/BaseJumpRateModel.sol\":2427:2435  15768000 */\n      0xf099c0\n        /* \"rate/BaseJumpRateModel.sol\":7723:7748  jumpMultiplierPerYear.div */\n      tag_60\n        /* \"rate/BaseJumpRateModel.sol\":7723:7763  jumpMultiplierPerYear.div(blocksPerYear) */\n      jump\t// in\n    tag_97:\n        /* \"rate/BaseJumpRateModel.sol\":7698:7720  jumpMultiplierPerBlock */\n      0x99\n        /* \"rate/BaseJumpRateModel.sol\":7698:7763  jumpMultiplierPerBlock = jumpMultiplierPerYear.div(blocksPerYear) */\n      dup2\n      swap1\n      sstore\n        /* \"rate/BaseJumpRateModel.sol\":7773:7777  kink */\n      0x9a\n        /* \"rate/BaseJumpRateModel.sol\":7773:7785  kink = kink_ */\n      dup3\n      swap1\n      sstore\n        /* \"rate/BaseJumpRateModel.sol\":7819:7835  baseRatePerBlock */\n      sload(0x98)\n        /* \"rate/BaseJumpRateModel.sol\":7837:7855  multiplierPerBlock */\n      sload(0x97)\n        /* \"rate/BaseJumpRateModel.sol\":7801:7886  NewInterestParams(baseRatePerBlock, multiplierPerBlock, jumpMultiplierPerBlock, kink) */\n      0x40\n      dup1\n      mload\n      swap3\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup2\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x60\n      dup2\n      add\n      dup4\n      swap1\n      mstore\n      swap1\n      mload\n      0x6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d\n      swap2\n      dup2\n      swap1\n      sub\n      0x80\n      add\n      swap1\n      log1\n        /* \"rate/BaseJumpRateModel.sol\":7393:7893  function updateJumpRateModelInternal(uint baseRatePerYear, uint multiplierPerYear, uint jumpMultiplierPerYear, uint kink_) internal onlyOwner {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":892:899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":923:928  a + b */\n      dup3\n      dup3\n      add\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":946:952  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_99\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1002:1003  c */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_98:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1274:1408  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1332:1339  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_99\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1362:1363  a */\n      dup4\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1365:1366  b */\n      dup4\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1358:1361  sub */\n      tag_102\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2119:2578  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2177:2184  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2418:2424  a == 0 */\n      dup3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2414:2459  if (a == 0) {... */\n      tag_104\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2447:2448  0 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2440:2448  return 0 */\n      jump(tag_98)\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2414:2459  if (a == 0) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2481:2486  a * b */\n      dup3\n      dup3\n      mul\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2485:2486  b */\n      dup3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2481:2482  a */\n      dup5\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2481:2486  a * b */\n      dup3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2481:2482  a */\n      dup2\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2504:2509  c / a */\n      tag_105\n      jumpi\n      invalid\n    tag_105:\n      div\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2504:2514  c / a == b */\n      eq\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2496:2552  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3033:3163  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3091:3098  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3117:3156  div(a, b, \"SafeMath: division by zero\") */\n      tag_99\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3121:3122  a */\n      dup4\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3124:3125  b */\n      dup4\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3117:3156  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3117:3120  div */\n      tag_109\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3117:3156  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":931:1035  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":1018:1028  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":931:1035  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"rate/BaseJumpRateModel.sol\":5819:6262  function getSupplyRateInternal(uint cash, uint borrows, uint reserves, uint reserveFactorMantissa) internal view returns (uint) {... */\n    tag_69:\n        /* \"rate/BaseJumpRateModel.sol\":5941:5945  uint */\n      0x00\n      dup1\n        /* \"rate/BaseJumpRateModel.sol\":5986:6023  uint(1e18).sub(reserveFactorMantissa) */\n      tag_112\n        /* \"rate/BaseJumpRateModel.sol\":5991:5995  1e18 */\n      0x0de0b6b3a7640000\n        /* \"rate/BaseJumpRateModel.sol\":6001:6022  reserveFactorMantissa */\n      dup5\n        /* \"rate/BaseJumpRateModel.sol\":5986:6000  uint(1e18).sub */\n      tag_57\n        /* \"rate/BaseJumpRateModel.sol\":5986:6023  uint(1e18).sub(reserveFactorMantissa) */\n      jump\t// in\n    tag_112:\n        /* \"rate/BaseJumpRateModel.sol\":5957:6023  uint oneMinusReserveFactor = uint(1e18).sub(reserveFactorMantissa) */\n      swap1\n      pop\n        /* \"rate/BaseJumpRateModel.sol\":6033:6048  uint borrowRate */\n      0x00\n        /* \"rate/BaseJumpRateModel.sol\":6051:6097  getBorrowRateInternal(cash, borrows, reserves) */\n      tag_113\n        /* \"rate/BaseJumpRateModel.sol\":6073:6077  cash */\n      dup8\n        /* \"rate/BaseJumpRateModel.sol\":6079:6086  borrows */\n      dup8\n        /* \"rate/BaseJumpRateModel.sol\":6088:6096  reserves */\n      dup8\n        /* \"rate/BaseJumpRateModel.sol\":6051:6072  getBorrowRateInternal */\n      tag_47\n        /* \"rate/BaseJumpRateModel.sol\":6051:6097  getBorrowRateInternal(cash, borrows, reserves) */\n      jump\t// in\n    tag_113:\n        /* \"rate/BaseJumpRateModel.sol\":6033:6097  uint borrowRate = getBorrowRateInternal(cash, borrows, reserves) */\n      swap1\n      pop\n        /* \"rate/BaseJumpRateModel.sol\":6107:6122  uint rateToPool */\n      0x00\n        /* \"rate/BaseJumpRateModel.sol\":6125:6172  borrowRate.mul(oneMinusReserveFactor).div(1e18) */\n      tag_114\n        /* \"rate/BaseJumpRateModel.sol\":6167:6171  1e18 */\n      0x0de0b6b3a7640000\n        /* \"rate/BaseJumpRateModel.sol\":6125:6162  borrowRate.mul(oneMinusReserveFactor) */\n      tag_58\n        /* \"rate/BaseJumpRateModel.sol\":6033:6097  uint borrowRate = getBorrowRateInternal(cash, borrows, reserves) */\n      dup5\n        /* \"rate/BaseJumpRateModel.sol\":6140:6161  oneMinusReserveFactor */\n      dup7\n        /* \"rate/BaseJumpRateModel.sol\":6125:6139  borrowRate.mul */\n      tag_59\n        /* \"rate/BaseJumpRateModel.sol\":6125:6162  borrowRate.mul(oneMinusReserveFactor) */\n      jump\t// in\n        /* \"rate/BaseJumpRateModel.sol\":6125:6172  borrowRate.mul(oneMinusReserveFactor).div(1e18) */\n    tag_114:\n        /* \"rate/BaseJumpRateModel.sol\":6107:6172  uint rateToPool = borrowRate.mul(oneMinusReserveFactor).div(1e18) */\n      swap1\n      pop\n        /* \"rate/BaseJumpRateModel.sol\":6189:6255  utilizationRate(cash, borrows, reserves).mul(rateToPool).div(1e18) */\n      tag_116\n        /* \"rate/BaseJumpRateModel.sol\":6250:6254  1e18 */\n      0x0de0b6b3a7640000\n        /* \"rate/BaseJumpRateModel.sol\":6189:6245  utilizationRate(cash, borrows, reserves).mul(rateToPool) */\n      tag_58\n        /* \"rate/BaseJumpRateModel.sol\":6234:6244  rateToPool */\n      dup4\n        /* \"rate/BaseJumpRateModel.sol\":6189:6229  utilizationRate(cash, borrows, reserves) */\n      tag_118\n        /* \"rate/BaseJumpRateModel.sol\":6205:6209  cash */\n      dup13\n        /* \"rate/BaseJumpRateModel.sol\":6211:6218  borrows */\n      dup13\n        /* \"rate/BaseJumpRateModel.sol\":6220:6228  reserves */\n      dup13\n        /* \"rate/BaseJumpRateModel.sol\":6189:6204  utilizationRate */\n      tag_24\n        /* \"rate/BaseJumpRateModel.sol\":6189:6229  utilizationRate(cash, borrows, reserves) */\n      jump\t// in\n    tag_118:\n        /* \"rate/BaseJumpRateModel.sol\":6189:6233  utilizationRate(cash, borrows, reserves).mul */\n      swap1\n      tag_59\n        /* \"rate/BaseJumpRateModel.sol\":6189:6245  utilizationRate(cash, borrows, reserves).mul(rateToPool) */\n      jump\t// in\n        /* \"rate/BaseJumpRateModel.sol\":6189:6255  utilizationRate(cash, borrows, reserves).mul(rateToPool).div(1e18) */\n    tag_116:\n        /* \"rate/BaseJumpRateModel.sol\":6182:6255  return utilizationRate(cash, borrows, reserves).mul(rateToPool).div(1e18) */\n      swap9\n        /* \"rate/BaseJumpRateModel.sol\":5819:6262  function getSupplyRateInternal(uint cash, uint borrows, uint reserves, uint reserveFactorMantissa) internal view returns (uint) {... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1692:1879  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1778:1785  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1813:1825  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1805:1811  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1797:1826  require(b <= a, errorMessage) */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_121:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_123\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_121)\n    tag_123:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_124\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_124:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1848:1853  a - b */\n      swap1\n      sub\n      swap1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1692:1879  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3638:3976  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3724:3731  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3824:3836  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3817:3822  b > 0 */\n      dup4\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3809:3837  require(b > 0, errorMessage) */\n      tag_126\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n      swap1\n      swap3\n      dup4\n      swap3\n      0x44\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n      dup4\n      iszero\n      tag_123\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_121)\n    tag_126:\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3847:3856  uint256 c */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3863:3864  b */\n      dup4\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3859:3860  a */\n      dup6\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3859:3864  a / b */\n      dup2\n      tag_131\n      jumpi\n      invalid\n    tag_131:\n      div\n      swap6\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3638:3976  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n\n    auxdata: 0xa2646970667358221220de38ba6e00786777151e899e0e9f84196f63910d30a2464d1b7cfd52f9e6178764736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610948806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063a385fb9611610071578063a385fb9614610182578063b81688161461018a578063b9f9850a146101b9578063f14039de146101c1578063f2fde38b146101c9578063fd2da339146101ef576100b4565b806315f24053146100b95780632037f3e7146100f45780636e71e2d814610125578063715018a61461014e5780638726bb89146101565780638da5cb5b1461015e575b600080fd5b6100e2600480360360608110156100cf57600080fd5b50803590602081013590604001356101f7565b60408051918252519081900360200190f35b6101236004803603608081101561010a57600080fd5b508035906020810135906040810135906060013561020e565b005b6100e26004803603606081101561013b57600080fd5b5080359060208101359060400135610220565b61012361025e565b6100e2610312565b610166610318565b604080516001600160a01b039092168252519081900360200190f35b6100e2610327565b6100e2600480360360808110156101a057600080fd5b508035906020810135906040810135906060013561032e565b6100e2610345565b6100e261034b565b610123600480360360208110156101df57600080fd5b50356001600160a01b0316610351565b6100e261045c565b6000610204848484610462565b90505b9392505050565b61021a84848484610525565b50505050565b60008261022f57506000610207565b61020461024683610240878761061e565b90610681565b61025885670de0b6b3a76400006106c3565b9061071c565b61026661075e565b6065546001600160a01b039081169116146102c8576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6065546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3606580546001600160a01b0319169055565b60975481565b6065546001600160a01b031690565b62f099c081565b600061033c85858585610762565b95945050505050565b60995481565b60985481565b61035961075e565b6065546001600160a01b039081169116146103bb576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166104005760405162461bcd60e51b81526004018080602001828103825260268152602001806108cc6026913960400191505060405180910390fd5b6065546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3606580546001600160a01b0319166001600160a01b0392909216919091179055565b609a5481565b600080610470858585610220565b9050609a5481116104b0576104a86098546104a2670de0b6b3a7640000610258609754866106c390919063ffffffff16565b9061061e565b915050610207565b60006104db6098546104a2670de0b6b3a7640000610258609754609a546106c390919063ffffffff16565b905060006104f4609a548461068190919063ffffffff16565b905061051b826104a2670de0b6b3a7640000610258609954866106c390919063ffffffff16565b9350505050610207565b61052d61075e565b6065546001600160a01b0390811691161461058f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61059c8462f099c061071c565b6098556105af61024662f099c0836106c3565b6097556105bf8262f099c061071c565b6099819055609a829055609854609754604080519283526020830191909152818101929092526060810183905290517f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d9181900360800190a150505050565b600082820183811015610678576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b600061067883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506107cf565b6000826106d25750600061067b565b828202828482816106df57fe5b04146106785760405162461bcd60e51b81526004018080602001828103825260218152602001806108f26021913960400191505060405180910390fd5b600061067883836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610866565b3390565b600080610777670de0b6b3a764000084610681565b90506000610786878787610462565b905060006107a0670de0b6b3a764000061025884866106c3565b90506107c3670de0b6b3a7640000610258836107bd8c8c8c610220565b906106c3565b98975050505050505050565b6000818484111561085e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561082357818101518382015260200161080b565b50505050905090810190601f1680156108505780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600081836108b55760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561082357818101518382015260200161080b565b5060008385816108c157fe5b049594505050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220de38ba6e00786777151e899e0e9f84196f63910d30a2464d1b7cfd52f9e6178764736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x948 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA385FB96 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA385FB96 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xB8168816 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xB9F9850A EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xF14039DE EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xFD2DA339 EQ PUSH2 0x1EF JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x15F24053 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x2037F3E7 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x6E71E2D8 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x8726BB89 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x15E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x1F7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x123 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x20E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x220 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x25E JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x312 JUMP JUMPDEST PUSH2 0x166 PUSH2 0x318 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xE2 PUSH2 0x327 JUMP JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x32E JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x345 JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x34B JUMP JUMPDEST PUSH2 0x123 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x351 JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x45C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x204 DUP5 DUP5 DUP5 PUSH2 0x462 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x21A DUP5 DUP5 DUP5 DUP5 PUSH2 0x525 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x22F JUMPI POP PUSH1 0x0 PUSH2 0x207 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x246 DUP4 PUSH2 0x240 DUP8 DUP8 PUSH2 0x61E JUMP JUMPDEST SWAP1 PUSH2 0x681 JUMP JUMPDEST PUSH2 0x258 DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x6C3 JUMP JUMPDEST SWAP1 PUSH2 0x71C JUMP JUMPDEST PUSH2 0x266 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x2C8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x97 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH3 0xF099C0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33C DUP6 DUP6 DUP6 DUP6 PUSH2 0x762 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x99 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x98 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x359 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x3BB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x400 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8CC PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x470 DUP6 DUP6 DUP6 PUSH2 0x220 JUMP JUMPDEST SWAP1 POP PUSH1 0x9A SLOAD DUP2 GT PUSH2 0x4B0 JUMPI PUSH2 0x4A8 PUSH1 0x98 SLOAD PUSH2 0x4A2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x258 PUSH1 0x97 SLOAD DUP7 PUSH2 0x6C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x61E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x207 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DB PUSH1 0x98 SLOAD PUSH2 0x4A2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x258 PUSH1 0x97 SLOAD PUSH1 0x9A SLOAD PUSH2 0x6C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4F4 PUSH1 0x9A SLOAD DUP5 PUSH2 0x681 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x51B DUP3 PUSH2 0x4A2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x258 PUSH1 0x99 SLOAD DUP7 PUSH2 0x6C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x207 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x75E JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x58F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x59C DUP5 PUSH3 0xF099C0 PUSH2 0x71C JUMP JUMPDEST PUSH1 0x98 SSTORE PUSH2 0x5AF PUSH2 0x246 PUSH3 0xF099C0 DUP4 PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x97 SSTORE PUSH2 0x5BF DUP3 PUSH3 0xF099C0 PUSH2 0x71C JUMP JUMPDEST PUSH1 0x99 DUP2 SWAP1 SSTORE PUSH1 0x9A DUP3 SWAP1 SSTORE PUSH1 0x98 SLOAD PUSH1 0x97 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x6960AB234C7EF4B0C9197100F5393CFCDE7C453AC910A27BD2000AA1DD4C068D SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x678 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x678 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x6D2 JUMPI POP PUSH1 0x0 PUSH2 0x67B JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x6DF JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x678 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8F2 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x678 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x866 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x777 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x681 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x786 DUP8 DUP8 DUP8 PUSH2 0x462 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7A0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x258 DUP5 DUP7 PUSH2 0x6C3 JUMP JUMPDEST SWAP1 POP PUSH2 0x7C3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x258 DUP4 PUSH2 0x7BD DUP13 DUP13 DUP13 PUSH2 0x220 JUMP JUMPDEST SWAP1 PUSH2 0x6C3 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x85E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x823 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x80B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x850 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x8B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x823 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x80B JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x8C1 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373536166654D6174683A206D756C746970 PUSH13 0x69636174696F6E206F76657266 PUSH13 0x6F77A2646970667358221220DE CODESIZE 0xBA PUSH15 0x786777151E899E0E9F84196F6391 0xD ADDRESS LOG2 CHAINID 0x4D SHL PUSH29 0xFD52F9E6178764736F6C634300060C0033000000000000000000000000 ",
							"sourceMap": "2051:5844:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c8063a385fb9611610071578063a385fb9614610182578063b81688161461018a578063b9f9850a146101b9578063f14039de146101c1578063f2fde38b146101c9578063fd2da339146101ef576100b4565b806315f24053146100b95780632037f3e7146100f45780636e71e2d814610125578063715018a61461014e5780638726bb89146101565780638da5cb5b1461015e575b600080fd5b6100e2600480360360608110156100cf57600080fd5b50803590602081013590604001356101f7565b60408051918252519081900360200190f35b6101236004803603608081101561010a57600080fd5b508035906020810135906040810135906060013561020e565b005b6100e26004803603606081101561013b57600080fd5b5080359060208101359060400135610220565b61012361025e565b6100e2610312565b610166610318565b604080516001600160a01b039092168252519081900360200190f35b6100e2610327565b6100e2600480360360808110156101a057600080fd5b508035906020810135906040810135906060013561032e565b6100e2610345565b6100e261034b565b610123600480360360208110156101df57600080fd5b50356001600160a01b0316610351565b6100e261045c565b6000610204848484610462565b90505b9392505050565b61021a84848484610525565b50505050565b60008261022f57506000610207565b61020461024683610240878761061e565b90610681565b61025885670de0b6b3a76400006106c3565b9061071c565b61026661075e565b6065546001600160a01b039081169116146102c8576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6065546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3606580546001600160a01b0319169055565b60975481565b6065546001600160a01b031690565b62f099c081565b600061033c85858585610762565b95945050505050565b60995481565b60985481565b61035961075e565b6065546001600160a01b039081169116146103bb576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166104005760405162461bcd60e51b81526004018080602001828103825260268152602001806108cc6026913960400191505060405180910390fd5b6065546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3606580546001600160a01b0319166001600160a01b0392909216919091179055565b609a5481565b600080610470858585610220565b9050609a5481116104b0576104a86098546104a2670de0b6b3a7640000610258609754866106c390919063ffffffff16565b9061061e565b915050610207565b60006104db6098546104a2670de0b6b3a7640000610258609754609a546106c390919063ffffffff16565b905060006104f4609a548461068190919063ffffffff16565b905061051b826104a2670de0b6b3a7640000610258609954866106c390919063ffffffff16565b9350505050610207565b61052d61075e565b6065546001600160a01b0390811691161461058f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61059c8462f099c061071c565b6098556105af61024662f099c0836106c3565b6097556105bf8262f099c061071c565b6099819055609a829055609854609754604080519283526020830191909152818101929092526060810183905290517f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d9181900360800190a150505050565b600082820183811015610678576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b600061067883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506107cf565b6000826106d25750600061067b565b828202828482816106df57fe5b04146106785760405162461bcd60e51b81526004018080602001828103825260218152602001806108f26021913960400191505060405180910390fd5b600061067883836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610866565b3390565b600080610777670de0b6b3a764000084610681565b90506000610786878787610462565b905060006107a0670de0b6b3a764000061025884866106c3565b90506107c3670de0b6b3a7640000610258836107bd8c8c8c610220565b906106c3565b98975050505050505050565b6000818484111561085e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561082357818101518382015260200161080b565b50505050905090810190601f1680156108505780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600081836108b55760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561082357818101518382015260200161080b565b5060008385816108c157fe5b049594505050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220de38ba6e00786777151e899e0e9f84196f63910d30a2464d1b7cfd52f9e6178764736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA385FB96 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA385FB96 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xB8168816 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xB9F9850A EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xF14039DE EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xFD2DA339 EQ PUSH2 0x1EF JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x15F24053 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x2037F3E7 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x6E71E2D8 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x8726BB89 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x15E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x1F7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x123 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x20E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x220 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x25E JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x312 JUMP JUMPDEST PUSH2 0x166 PUSH2 0x318 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xE2 PUSH2 0x327 JUMP JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x32E JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x345 JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x34B JUMP JUMPDEST PUSH2 0x123 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x351 JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x45C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x204 DUP5 DUP5 DUP5 PUSH2 0x462 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x21A DUP5 DUP5 DUP5 DUP5 PUSH2 0x525 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x22F JUMPI POP PUSH1 0x0 PUSH2 0x207 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x246 DUP4 PUSH2 0x240 DUP8 DUP8 PUSH2 0x61E JUMP JUMPDEST SWAP1 PUSH2 0x681 JUMP JUMPDEST PUSH2 0x258 DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x6C3 JUMP JUMPDEST SWAP1 PUSH2 0x71C JUMP JUMPDEST PUSH2 0x266 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x2C8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x97 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH3 0xF099C0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33C DUP6 DUP6 DUP6 DUP6 PUSH2 0x762 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x99 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x98 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x359 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x3BB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x400 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8CC PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x470 DUP6 DUP6 DUP6 PUSH2 0x220 JUMP JUMPDEST SWAP1 POP PUSH1 0x9A SLOAD DUP2 GT PUSH2 0x4B0 JUMPI PUSH2 0x4A8 PUSH1 0x98 SLOAD PUSH2 0x4A2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x258 PUSH1 0x97 SLOAD DUP7 PUSH2 0x6C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x61E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x207 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DB PUSH1 0x98 SLOAD PUSH2 0x4A2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x258 PUSH1 0x97 SLOAD PUSH1 0x9A SLOAD PUSH2 0x6C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4F4 PUSH1 0x9A SLOAD DUP5 PUSH2 0x681 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x51B DUP3 PUSH2 0x4A2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x258 PUSH1 0x99 SLOAD DUP7 PUSH2 0x6C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x207 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x75E JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x58F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x59C DUP5 PUSH3 0xF099C0 PUSH2 0x71C JUMP JUMPDEST PUSH1 0x98 SSTORE PUSH2 0x5AF PUSH2 0x246 PUSH3 0xF099C0 DUP4 PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x97 SSTORE PUSH2 0x5BF DUP3 PUSH3 0xF099C0 PUSH2 0x71C JUMP JUMPDEST PUSH1 0x99 DUP2 SWAP1 SSTORE PUSH1 0x9A DUP3 SWAP1 SSTORE PUSH1 0x98 SLOAD PUSH1 0x97 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x6960AB234C7EF4B0C9197100F5393CFCDE7C453AC910A27BD2000AA1DD4C068D SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x678 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x678 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x6D2 JUMPI POP PUSH1 0x0 PUSH2 0x67B JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x6DF JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x678 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8F2 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x678 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x866 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x777 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x681 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x786 DUP8 DUP8 DUP8 PUSH2 0x462 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7A0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x258 DUP5 DUP7 PUSH2 0x6C3 JUMP JUMPDEST SWAP1 POP PUSH2 0x7C3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x258 DUP4 PUSH2 0x7BD DUP13 DUP13 DUP13 PUSH2 0x220 JUMP JUMPDEST SWAP1 PUSH2 0x6C3 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x85E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x823 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x80B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x850 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x8B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x823 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x80B JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x8C1 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373536166654D6174683A206D756C746970 PUSH13 0x69636174696F6E206F76657266 PUSH13 0x6F77A2646970667358221220DE CODESIZE 0xBA PUSH15 0x786777151E899E0E9F84196F6391 0xD ADDRESS LOG2 CHAINID 0x4D SHL PUSH29 0xFD52F9E6178764736F6C634300060C0033000000000000000000000000 ",
							"sourceMap": "2051:5844:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5633:179;;;;;;;;;;;;;;;;-1:-1:-1;5633:179:4;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3485:234;;;;;;;;;;;;;;;;-1:-1:-1;3485:234:4;;;;;;;;;;;;;;;;;:::i;:::-;;4100:290;;;;;;;;;;;;;;;;-1:-1:-1;4100:290:4;;;;;;;;;;;;:::i;1894:145:2:-;;;:::i;2550:30:4:-;;;:::i;1271:77:2:-;;;:::i;:::-;;;;-1:-1:-1;;;;;1271:77:2;;;;;;;;;;;;;;2390:45:4;;;:::i;6674:230::-;;;;;;;;;;;;;;;;-1:-1:-1;6674:230:4;;;;;;;;;;;;;;;;;:::i;2826:34::-;;;:::i;2693:28::-;;;:::i;2188:240:2:-;;;;;;;;;;;;;;;;-1:-1:-1;2188:240:2;-1:-1:-1;;;;;2188:240:2;;:::i;2960:16:4:-;;;:::i;5633:179::-;5736:4;5759:46;5781:4;5787:7;5796:8;5759:21;:46::i;:::-;5752:53;;5633:179;;;;;;:::o;3485:234::-;3619:93;3647:15;3664:17;3683:21;3706:5;3619:27;:93::i;:::-;3485:234;;;;:::o;4100:290::-;4186:4;4265:12;4261:51;;-1:-1:-1;4300:1:4;4293:8;;4261:51;4329:54;4351:31;4373:8;4351:17;:4;4360:7;4351:8;:17::i;:::-;:21;;:31::i;:::-;4329:17;:7;4341:4;4329:11;:17::i;:::-;:21;;:54::i;1894:145:2:-;1485:12;:10;:12::i;:::-;1475:6;;-1:-1:-1;;;;;1475:6:2;;;:22;;;1467:67;;;;;-1:-1:-1;;;1467:67:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1984:6:::1;::::0;1963:40:::1;::::0;2000:1:::1;::::0;-1:-1:-1;;;;;1984:6:2::1;::::0;1963:40:::1;::::0;2000:1;;1963:40:::1;2013:6;:19:::0;;-1:-1:-1;;;;;;2013:19:2::1;::::0;;1894:145::o;2550:30:4:-;;;;:::o;1271:77:2:-;1335:6;;-1:-1:-1;;;;;1335:6:2;1271:77;:::o;2390:45:4:-;2427:8;2390:45;:::o;6674:230::-;6805:4;6828:69;6850:4;6856:7;6865:8;6875:21;6828;:69::i;:::-;6821:76;6674:230;-1:-1:-1;;;;;6674:230:4:o;2826:34::-;;;;:::o;2693:28::-;;;;:::o;2188:240:2:-;1485:12;:10;:12::i;:::-;1475:6;;-1:-1:-1;;;;;1475:6:2;;;:22;;;1467:67;;;;;-1:-1:-1;;;1467:67:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2276:22:2;::::1;2268:73;;;;-1:-1:-1::0;;;2268:73:2::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2377:6;::::0;2356:38:::1;::::0;-1:-1:-1;;;;;2356:38:2;;::::1;::::0;2377:6:::1;::::0;2356:38:::1;::::0;2377:6:::1;::::0;2356:38:::1;2404:6;:17:::0;;-1:-1:-1;;;;;;2404:17:2::1;-1:-1:-1::0;;;;;2404:17:2;;;::::1;::::0;;;::::1;::::0;;2188:240::o;2960:16:4:-;;;;:::o;4769:529::-;4863:4;4879:9;4891:40;4907:4;4913:7;4922:8;4891:15;:40::i;:::-;4879:52;;4954:4;;4946;:12;4942:350;;4981:60;5024:16;;4981:38;5014:4;4981:28;4990:18;;4981:4;:8;;:28;;;;:::i;:38::-;:42;;:60::i;:::-;4974:67;;;;;4942:350;5072:15;5090:60;5133:16;;5090:38;5123:4;5090:28;5099:18;;5090:4;;:8;;:28;;;;:::i;:60::-;5072:78;;5164:15;5182:14;5191:4;;5182;:8;;:14;;;;:::i;:::-;5164:32;;5217:64;5270:10;5217:48;5260:4;5217:38;5232:22;;5217:10;:14;;:38;;;;:::i;:64::-;5210:71;;;;;;;7393:500;1485:12:2;:10;:12::i;:::-;1475:6;;-1:-1:-1;;;;;1475:6:2;;;:22;;;1467:67;;;;;-1:-1:-1;;;1467:67:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7564:34:4::1;:15:::0;2427:8:::1;7564:19;:34::i;:::-;7545:16;:53:::0;7629:59:::1;7663:24;2427:8;7681:5:::0;7663:17:::1;:24::i;7629:59::-;7608:18;:80:::0;7723:40:::1;:21:::0;2427:8:::1;7723:25;:40::i;:::-;7698:22;:65:::0;;;7773:4:::1;:12:::0;;;7819:16:::1;::::0;7837:18:::1;::::0;7801:85:::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;;;;;::::1;::::0;;;;;;;::::1;7393:500:::0;;;;:::o;834:176:3:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;-1:-1:-1;834:176:3;;;;;:::o;1274:134::-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;2119:459::-;2177:7;2418:6;2414:45;;-1:-1:-1;2447:1:3;2440:8;;2414:45;2481:5;;;2485:1;2481;:5;:1;2504:5;;;;;:10;2496:56;;;;-1:-1:-1;;;2496:56:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3033:130;3091:7;3117:39;3121:1;3124;3117:39;;;;;;;;;;;;;;;;;:3;:39::i;931:104:0:-;1018:10;931:104;:::o;5819:443:4:-;5941:4;;5986:37;5991:4;6001:21;5986:14;:37::i;:::-;5957:66;;6033:15;6051:46;6073:4;6079:7;6088:8;6051:21;:46::i;:::-;6033:64;-1:-1:-1;6107:15:4;6125:47;6167:4;6125:37;6033:64;6140:21;6125:14;:37::i;:47::-;6107:65;;6189:66;6250:4;6189:56;6234:10;6189:40;6205:4;6211:7;6220:8;6189:15;:40::i;:::-;:44;;:56::i;:66::-;6182:73;5819:443;-1:-1:-1;;;;;;;;5819:443:4:o;1692:187:3:-;1778:7;1813:12;1805:6;;;;1797:29;;;;-1:-1:-1;;;1797:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1848:5:3;;;1692:187::o;3638:338::-;3724:7;3824:12;3817:5;3809:28;;;;-1:-1:-1;;;3809:28:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3847:9;3863:1;3859;:5;;;;;;;3638:338;-1:-1:-1;;;;;3638:338:3:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "475200",
								"executionCost": "511",
								"totalCost": "475711"
							},
							"external": {
								"baseRatePerBlock()": "1064",
								"blocksPerYear()": "198",
								"getBorrowRate(uint256,uint256,uint256)": "infinite",
								"getSupplyRate(uint256,uint256,uint256,uint256)": "infinite",
								"jumpMultiplierPerBlock()": "1042",
								"kink()": "1108",
								"multiplierPerBlock()": "1087",
								"owner()": "1148",
								"renounceOwnership()": "24268",
								"transferOwnership(address)": "infinite",
								"updateJumpRateModel(uint256,uint256,uint256,uint256)": "infinite",
								"utilizationRate(uint256,uint256,uint256)": "infinite"
							},
							"internal": {
								"getBorrowRateInternal(uint256,uint256,uint256)": "infinite",
								"getSupplyRateInternal(uint256,uint256,uint256,uint256)": "infinite",
								"updateJumpRateModelInternal(uint256,uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2051,
									"end": 7895,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 2051,
									"end": 7895,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2051,
									"end": 7895,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2051,
									"end": 7895,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 2051,
									"end": 7895,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2051,
									"end": 7895,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2051,
									"end": 7895,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2051,
									"end": 7895,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2051,
									"end": 7895,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2051,
									"end": 7895,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2051,
									"end": 7895,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2051,
									"end": 7895,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2051,
									"end": 7895,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2051,
									"end": 7895,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2051,
									"end": 7895,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2051,
									"end": 7895,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2051,
									"end": 7895,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2051,
									"end": 7895,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2051,
									"end": 7895,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 2051,
									"end": 7895,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2051,
									"end": 7895,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220de38ba6e00786777151e899e0e9f84196f63910d30a2464d1b7cfd52f9e6178764736f6c634300060c0033",
									".code": [
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH",
											"source": 4,
											"value": "A385FB96"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH",
											"source": 4,
											"value": "A385FB96"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH",
											"source": 4,
											"value": "B8168816"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH",
											"source": 4,
											"value": "B9F9850A"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH",
											"source": 4,
											"value": "F14039DE"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH",
											"source": 4,
											"value": "FD2DA339"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH",
											"source": 4,
											"value": "15F24053"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH",
											"source": 4,
											"value": "2037F3E7"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH",
											"source": 4,
											"value": "6E71E2D8"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH",
											"source": 4,
											"value": "8726BB89"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 7895,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1894,
											"end": 2039,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1894,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1894,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1894,
											"end": 2039,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2550,
											"end": 2580,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2550,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2550,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2550,
											"end": 2580,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2435,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2390,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2390,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2390,
											"end": 2435,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2693,
											"end": 2721,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2693,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2693,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2693,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2693,
											"end": 2721,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2960,
											"end": 2976,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2960,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2960,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2960,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2960,
											"end": 2976,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5736,
											"end": 5740,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5759,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5781,
											"end": 5785,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5787,
											"end": 5794,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5796,
											"end": 5804,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5759,
											"end": 5780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 5759,
											"end": 5805,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5759,
											"end": 5805,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5759,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5752,
											"end": 5805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5752,
											"end": 5805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3647,
											"end": 3662,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3664,
											"end": 3681,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3683,
											"end": 3704,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3706,
											"end": 3711,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3619,
											"end": 3712,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3619,
											"end": 3712,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3619,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4186,
											"end": 4190,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4265,
											"end": 4277,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4261,
											"end": 4312,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4300,
											"end": 4301,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4293,
											"end": 4301,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4312,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4261,
											"end": 4312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4329,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4351,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4373,
											"end": 4381,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4351,
											"end": 4355,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4360,
											"end": 4367,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4351,
											"end": 4368,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4351,
											"end": 4368,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4351,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4372,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4351,
											"end": 4382,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4351,
											"end": 4382,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4351,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4329,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4329,
											"end": 4336,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4341,
											"end": 4345,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4329,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4329,
											"end": 4346,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4329,
											"end": 4346,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4329,
											"end": 4346,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4329,
											"end": 4350,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4329,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4329,
											"end": 4383,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1894,
											"end": 2039,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1894,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1485,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2003,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1963,
											"end": 2003,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2003,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2013,
											"end": 2019,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 2039,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2550,
											"end": 2580,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2550,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2580,
											"name": "PUSH",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2550,
											"end": 2580,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2580,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2580,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2390,
											"end": 2435,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2390,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2435,
											"name": "PUSH",
											"source": 4,
											"value": "F099C0"
										},
										{
											"begin": 2390,
											"end": 2435,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2435,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6805,
											"end": 6809,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 6850,
											"end": 6854,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6856,
											"end": 6863,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6865,
											"end": 6873,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6875,
											"end": 6896,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6828,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 6828,
											"end": 6897,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6828,
											"end": 6897,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 6828,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6821,
											"end": 6897,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "PUSH",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2693,
											"end": 2721,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2693,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2693,
											"end": 2721,
											"name": "PUSH",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2693,
											"end": 2721,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2693,
											"end": 2721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2693,
											"end": 2721,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1485,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2276,
											"end": 2298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2298,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH data",
											"source": 2,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2410,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2960,
											"end": 2976,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2960,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2960,
											"end": 2976,
											"name": "PUSH",
											"source": 4,
											"value": "9A"
										},
										{
											"begin": 2960,
											"end": 2976,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2960,
											"end": 2976,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2960,
											"end": 2976,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4769,
											"end": 5298,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 4769,
											"end": 5298,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4888,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4891,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4907,
											"end": 4911,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4913,
											"end": 4920,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4922,
											"end": 4930,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4891,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4891,
											"end": 4931,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4891,
											"end": 4931,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4891,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4931,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4931,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4954,
											"end": 4958,
											"name": "PUSH",
											"source": 4,
											"value": "9A"
										},
										{
											"begin": 4954,
											"end": 4958,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4946,
											"end": 4950,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4946,
											"end": 4958,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4942,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4942,
											"end": 5292,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 5024,
											"end": 5040,
											"name": "PUSH",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5024,
											"end": 5040,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 5014,
											"end": 5018,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4981,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "PUSH",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 4985,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 4989,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4981,
											"end": 4989,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 5009,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 5009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 5009,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4981,
											"end": 5009,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 5009,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4981,
											"end": 5019,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4981,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 5023,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4981,
											"end": 5041,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4981,
											"end": 5041,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4981,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 5041,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 5041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 5041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4974,
											"end": 5041,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4942,
											"end": 5292,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4942,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5072,
											"end": 5087,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5090,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 5133,
											"end": 5149,
											"name": "PUSH",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5133,
											"end": 5149,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5090,
											"end": 5128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 5123,
											"end": 5127,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5090,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 5099,
											"end": 5117,
											"name": "PUSH",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 5099,
											"end": 5117,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5090,
											"end": 5094,
											"name": "PUSH",
											"source": 4,
											"value": "9A"
										},
										{
											"begin": 5090,
											"end": 5094,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5090,
											"end": 5098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5090,
											"end": 5098,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5090,
											"end": 5118,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5090,
											"end": 5118,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5090,
											"end": 5118,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5090,
											"end": 5118,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5090,
											"end": 5118,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5090,
											"end": 5150,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 5090,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5072,
											"end": 5150,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5072,
											"end": 5150,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5164,
											"end": 5179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5182,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 5191,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "9A"
										},
										{
											"begin": 5191,
											"end": 5195,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5186,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 5182,
											"end": 5190,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5196,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5196,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5196,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5182,
											"end": 5196,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5196,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5182,
											"end": 5196,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 5182,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5164,
											"end": 5196,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5164,
											"end": 5196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 5270,
											"end": 5280,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 5260,
											"end": 5264,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5217,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 5232,
											"end": 5254,
											"name": "PUSH",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 5232,
											"end": 5254,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5227,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5217,
											"end": 5231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5255,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5255,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5255,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5217,
											"end": 5255,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5255,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5217,
											"end": 5281,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 5217,
											"end": 5281,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7393,
											"end": 7893,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 7393,
											"end": 7893,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1485,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7564,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 7564,
											"end": 7579,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2435,
											"name": "PUSH",
											"source": 4,
											"value": "F099C0"
										},
										{
											"begin": 7564,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7564,
											"end": 7598,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7564,
											"end": 7598,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 7564,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7561,
											"name": "PUSH",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 7545,
											"end": 7598,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7629,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 7663,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2427,
											"end": 2435,
											"name": "PUSH",
											"source": 4,
											"value": "F099C0"
										},
										{
											"begin": 7681,
											"end": 7686,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7663,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 7663,
											"end": 7687,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7629,
											"end": 7688,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 7629,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7608,
											"end": 7626,
											"name": "PUSH",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 7608,
											"end": 7688,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7723,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 7723,
											"end": 7744,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2435,
											"name": "PUSH",
											"source": 4,
											"value": "F099C0"
										},
										{
											"begin": 7723,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7723,
											"end": 7763,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7723,
											"end": 7763,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 7723,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7698,
											"end": 7720,
											"name": "PUSH",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 7698,
											"end": 7763,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7698,
											"end": 7763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7698,
											"end": 7763,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7773,
											"end": 7777,
											"name": "PUSH",
											"source": 4,
											"value": "9A"
										},
										{
											"begin": 7773,
											"end": 7785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7773,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7773,
											"end": 7785,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7819,
											"end": 7835,
											"name": "PUSH",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 7819,
											"end": 7835,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7837,
											"end": 7855,
											"name": "PUSH",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 7837,
											"end": 7855,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "PUSH",
											"source": 4,
											"value": "6960AB234C7EF4B0C9197100F5393CFCDE7C453AC910A27BD2000AA1DD4C068D"
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 7393,
											"end": 7893,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7393,
											"end": 7893,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7393,
											"end": 7893,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7393,
											"end": 7893,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7393,
											"end": 7893,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 923,
											"end": 928,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 923,
											"end": 928,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 946,
											"end": 952,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 946,
											"end": 952,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 946,
											"end": 952,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 946,
											"end": 952,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 3,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1003,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1362,
											"end": 1363,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "1E"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2119,
											"end": 2578,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2119,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2184,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2424,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2414,
											"end": 2459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2414,
											"end": 2459,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2447,
											"end": 2448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2440,
											"end": 2448,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2414,
											"end": 2459,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2414,
											"end": 2459,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2485,
											"end": 2486,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2482,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2482,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2504,
											"end": 2509,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2509,
											"name": "INVALID",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2509,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2504,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2509,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2514,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "PUSH data",
											"source": 3,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3033,
											"end": 3163,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3033,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3091,
											"end": 3098,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3121,
											"end": 3122,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH",
											"source": 3,
											"value": "1A"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH",
											"source": 3,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3117,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 931,
											"end": 1035,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 931,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1028,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 931,
											"end": 1035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 931,
											"end": 1035,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5819,
											"end": 6262,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 5819,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5941,
											"end": 5945,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5941,
											"end": 5945,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5986,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 5991,
											"end": 5995,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6001,
											"end": 6022,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5986,
											"end": 6000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 5986,
											"end": 6023,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5986,
											"end": 6023,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 5986,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5957,
											"end": 6023,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5957,
											"end": 6023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6048,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6051,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 6073,
											"end": 6077,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6079,
											"end": 6086,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6088,
											"end": 6096,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6051,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 6051,
											"end": 6097,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6051,
											"end": 6097,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 6051,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6097,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6107,
											"end": 6122,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6125,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 6167,
											"end": 6171,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6125,
											"end": 6162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 6033,
											"end": 6097,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6140,
											"end": 6161,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6125,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 6125,
											"end": 6162,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6125,
											"end": 6172,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 6125,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6107,
											"end": 6172,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6107,
											"end": 6172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6189,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 6250,
											"end": 6254,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6189,
											"end": 6245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 6234,
											"end": 6244,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6189,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 6205,
											"end": 6209,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6218,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 6220,
											"end": 6228,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 6189,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6189,
											"end": 6229,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6189,
											"end": 6229,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 6189,
											"end": 6229,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6189,
											"end": 6233,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6189,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 6189,
											"end": 6245,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6189,
											"end": 6255,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 6189,
											"end": 6255,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6182,
											"end": 6255,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 5819,
											"end": 6262,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5819,
											"end": 6262,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1778,
											"end": 1785,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1848,
											"end": 1853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1848,
											"end": 1853,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1848,
											"end": 1853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3638,
											"end": 3976,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3638,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3724,
											"end": 3731,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 3836,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3817,
											"end": 3822,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3847,
											"end": 3856,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3864,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3859,
											"end": 3860,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "INVALID",
											"source": 3
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3976,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3976,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77"
									}
								}
							}
						},
						"methodIdentifiers": {
							"baseRatePerBlock()": "f14039de",
							"blocksPerYear()": "a385fb96",
							"getBorrowRate(uint256,uint256,uint256)": "15f24053",
							"getSupplyRate(uint256,uint256,uint256,uint256)": "b8168816",
							"jumpMultiplierPerBlock()": "b9f9850a",
							"kink()": "fd2da339",
							"multiplierPerBlock()": "8726bb89",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"updateJumpRateModel(uint256,uint256,uint256,uint256)": "2037f3e7",
							"utilizationRate(uint256,uint256,uint256)": "6e71e2d8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseRatePerBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"multiplierPerBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"jumpMultiplierPerBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"}],\"name\":\"NewInterestParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"baseRatePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blocksPerYear\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrows\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserves\",\"type\":\"uint256\"}],\"name\":\"getBorrowRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrows\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveFactorMantissa\",\"type\":\"uint256\"}],\"name\":\"getSupplyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"jumpMultiplierPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kink\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"multiplierPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"baseRatePerYear\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"multiplierPerYear\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"jumpMultiplierPerYear\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink_\",\"type\":\"uint256\"}],\"name\":\"updateJumpRateModel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrows\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserves\",\"type\":\"uint256\"}],\"name\":\"utilizationRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Compound (modified by Dharma Labs, refactored by Arr00)\",\"kind\":\"dev\",\"methods\":{\"getBorrowRate(uint256,uint256,uint256)\":{\"params\":{\"borrows\":\"The amount of borrows in the market\",\"cash\":\"The amount of cash in the market\",\"reserves\":\"The amount of reserves in the market\"},\"returns\":{\"_0\":\"The borrow rate percentage per block as a mantissa (scaled by 1e18)\"}},\"getSupplyRate(uint256,uint256,uint256,uint256)\":{\"params\":{\"borrows\":\"The amount of borrows in the market\",\"cash\":\"The amount of cash in the market\",\"reserveFactorMantissa\":\"The current reserve factor for the market\",\"reserves\":\"The amount of reserves in the market\"},\"returns\":{\"_0\":\"The supply rate percentage per block as a mantissa (scaled by 1e18)\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateJumpRateModel(uint256,uint256,uint256,uint256)\":{\"params\":{\"baseRatePerYear\":\"The approximate target base APR, as a mantissa (scaled by 1e18)\",\"jumpMultiplierPerYear\":\"The multiplierPerBlock after hitting a specified utilization point\",\"kink_\":\"The utilization point at which the jump multiplier is applied\",\"multiplierPerYear\":\"The rate of increase in interest rate wrt utilization (scaled by 1e18)\"}},\"utilizationRate(uint256,uint256,uint256)\":{\"params\":{\"borrows\":\"The amount of borrows in the market\",\"cash\":\"The amount of cash in the market\",\"reserves\":\"The amount of reserves in the market (currently unused)\"},\"returns\":{\"_0\":\"The utilization rate as a mantissa between [0, 1e18]\"}}},\"title\":\"Logic for Compound's JumpRateModel Contract V2.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"baseRatePerBlock()\":{\"notice\":\"The base interest rate which is the y-intercept when utilization rate is 0\"},\"blocksPerYear()\":{\"notice\":\"The approximate number of blocks per year that is assumed by the interest rate model\"},\"getBorrowRate(uint256,uint256,uint256)\":{\"notice\":\"Calculates the current borrow rate per block\"},\"getSupplyRate(uint256,uint256,uint256,uint256)\":{\"notice\":\"Calculates the current supply rate per block\"},\"jumpMultiplierPerBlock()\":{\"notice\":\"The multiplierPerBlock after hitting a specified utilization point\"},\"kink()\":{\"notice\":\"The utilization point at which the jump multiplier is applied\"},\"multiplierPerBlock()\":{\"notice\":\"The multiplier of utilization rate that gives the slope of the interest rate\"},\"updateJumpRateModel(uint256,uint256,uint256,uint256)\":{\"notice\":\"Update the parameters of the interest rate model (only callable by owner, i.e. Timelock)\"},\"utilizationRate(uint256,uint256,uint256)\":{\"notice\":\"Calculates the utilization rate of the market: `borrows / (cash + borrows - reserves)`\"}},\"notice\":\"Version 2 modifies Version 1 by enabling updateable parameters.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"rate/BaseJumpRateModel.sol\":\"BaseJumpRateModel\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0xe81686511d62f18b2d9c693c2c94c0a789c690de63aa90e15451ebf65c5bfd3e\",\"urls\":[\"bzz-raw://1332ee1d2b096456bf2e5795b5871d0fed47be6a31c9a2f2cef9206a299565ea\",\"dweb:/ipfs/Qmdu1847Y4UL3gTjbLUManMGfxYEoyGPSodM3Br89SKzwx\"]},\"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":{\"keccak256\":\"0x04a69a78363214b4e3055db8e620bed222349f0c81e9d1cbe769eb849b69b73f\",\"urls\":[\"bzz-raw://b3115459376196d6c2c3817439c169d9b052b27b70e8ee2e28963cda760736da\",\"dweb:/ipfs/QmXaNF5rmcDSAzBiFMQjf979qb9xNXqD9eZtgo4uM9VEis\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"rate/BaseJumpRateModel.sol\":{\"keccak256\":\"0xa4c8ea5fc74bbc9dc0baf62cfcc4f8001b82f4b5260c981d069637128d39efa3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa51a37550330a8d8ad5c316f602a07751958093eb10377a9359f49d882a82ce\",\"dweb:/ipfs/Qma435Cs8gUpvgFhoKcgb656Q7r98e3rhCr6nxbfJHMVtG\"]},\"rate/IInterestRateModel.sol\":{\"keccak256\":\"0x2966eac6888c8dc2a8aadef2e30de55be0d28e9e4960afdfc7d6b81dc18480bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e323b32256b207682d1379149e9200eb318fa76e423a164524e0adc63473d3a9\",\"dweb:/ipfs/Qme5dfdoGV9jaB6Ay6krLPTmaavtmCFBexBSjeUhq8YpSC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 50,
								"contract": "rate/BaseJumpRateModel.sol:BaseJumpRateModel",
								"label": "initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 53,
								"contract": "rate/BaseJumpRateModel.sol:BaseJumpRateModel",
								"label": "initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 118,
								"contract": "rate/BaseJumpRateModel.sol:BaseJumpRateModel",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 43,
								"contract": "rate/BaseJumpRateModel.sol:BaseJumpRateModel",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 130,
								"contract": "rate/BaseJumpRateModel.sol:BaseJumpRateModel",
								"label": "_owner",
								"offset": 0,
								"slot": "101",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "rate/BaseJumpRateModel.sol:BaseJumpRateModel",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 475,
								"contract": "rate/BaseJumpRateModel.sol:BaseJumpRateModel",
								"label": "multiplierPerBlock",
								"offset": 0,
								"slot": "151",
								"type": "t_uint256"
							},
							{
								"astId": 478,
								"contract": "rate/BaseJumpRateModel.sol:BaseJumpRateModel",
								"label": "baseRatePerBlock",
								"offset": 0,
								"slot": "152",
								"type": "t_uint256"
							},
							{
								"astId": 481,
								"contract": "rate/BaseJumpRateModel.sol:BaseJumpRateModel",
								"label": "jumpMultiplierPerBlock",
								"offset": 0,
								"slot": "153",
								"type": "t_uint256"
							},
							{
								"astId": 484,
								"contract": "rate/BaseJumpRateModel.sol:BaseJumpRateModel",
								"label": "kink",
								"offset": 0,
								"slot": "154",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"baseRatePerBlock()": {
								"notice": "The base interest rate which is the y-intercept when utilization rate is 0"
							},
							"blocksPerYear()": {
								"notice": "The approximate number of blocks per year that is assumed by the interest rate model"
							},
							"getBorrowRate(uint256,uint256,uint256)": {
								"notice": "Calculates the current borrow rate per block"
							},
							"getSupplyRate(uint256,uint256,uint256,uint256)": {
								"notice": "Calculates the current supply rate per block"
							},
							"jumpMultiplierPerBlock()": {
								"notice": "The multiplierPerBlock after hitting a specified utilization point"
							},
							"kink()": {
								"notice": "The utilization point at which the jump multiplier is applied"
							},
							"multiplierPerBlock()": {
								"notice": "The multiplier of utilization rate that gives the slope of the interest rate"
							},
							"updateJumpRateModel(uint256,uint256,uint256,uint256)": {
								"notice": "Update the parameters of the interest rate model (only callable by owner, i.e. Timelock)"
							},
							"utilizationRate(uint256,uint256,uint256)": {
								"notice": "Calculates the utilization rate of the market: `borrows / (cash + borrows - reserves)`"
							}
						},
						"notice": "Version 2 modifies Version 1 by enabling updateable parameters.",
						"version": 1
					}
				}
			},
			"rate/IInterestRateModel.sol": {
				"IInterestRateModel": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cash",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "borrows",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserves",
									"type": "uint256"
								}
							],
							"name": "getBorrowRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cash",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "borrows",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserves",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveFactorMantissa",
									"type": "uint256"
								}
							],
							"name": "getSupplyRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Developer Lend",
						"kind": "dev",
						"methods": {
							"getBorrowRate(uint256,uint256,uint256)": {
								"params": {
									"borrows": "The total amount of borrows the market has outstanding",
									"cash": "The total amount of cash the market has",
									"reserves": "The total amount of reserves the market has"
								},
								"returns": {
									"_0": "The borrow rate per block (as a percentage, and scaled by 1e18)"
								}
							},
							"getSupplyRate(uint256,uint256,uint256,uint256)": {
								"params": {
									"borrows": "The total amount of borrows the market has outstanding",
									"cash": "The total amount of cash the market has",
									"reserveFactorMantissa": "The current reserve factor the market has",
									"reserves": "The total amount of reserves the market has"
								},
								"returns": {
									"_0": "The supply rate per block (as a percentage, and scaled by 1e18)"
								}
							}
						},
						"title": "Developer Lend's IInterestRateModel Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getBorrowRate(uint256,uint256,uint256)": "15f24053",
							"getSupplyRate(uint256,uint256,uint256,uint256)": "b8168816"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrows\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserves\",\"type\":\"uint256\"}],\"name\":\"getBorrowRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrows\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveFactorMantissa\",\"type\":\"uint256\"}],\"name\":\"getSupplyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Developer Lend\",\"kind\":\"dev\",\"methods\":{\"getBorrowRate(uint256,uint256,uint256)\":{\"params\":{\"borrows\":\"The total amount of borrows the market has outstanding\",\"cash\":\"The total amount of cash the market has\",\"reserves\":\"The total amount of reserves the market has\"},\"returns\":{\"_0\":\"The borrow rate per block (as a percentage, and scaled by 1e18)\"}},\"getSupplyRate(uint256,uint256,uint256,uint256)\":{\"params\":{\"borrows\":\"The total amount of borrows the market has outstanding\",\"cash\":\"The total amount of cash the market has\",\"reserveFactorMantissa\":\"The current reserve factor the market has\",\"reserves\":\"The total amount of reserves the market has\"},\"returns\":{\"_0\":\"The supply rate per block (as a percentage, and scaled by 1e18)\"}}},\"title\":\"Developer Lend's IInterestRateModel Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getBorrowRate(uint256,uint256,uint256)\":{\"notice\":\"Calculates the current borrow interest rate per block\"},\"getSupplyRate(uint256,uint256,uint256,uint256)\":{\"notice\":\"Calculates the current supply interest rate per block\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"rate/IInterestRateModel.sol\":\"IInterestRateModel\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"rate/IInterestRateModel.sol\":{\"keccak256\":\"0x2966eac6888c8dc2a8aadef2e30de55be0d28e9e4960afdfc7d6b81dc18480bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e323b32256b207682d1379149e9200eb318fa76e423a164524e0adc63473d3a9\",\"dweb:/ipfs/Qme5dfdoGV9jaB6Ay6krLPTmaavtmCFBexBSjeUhq8YpSC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getBorrowRate(uint256,uint256,uint256)": {
								"notice": "Calculates the current borrow interest rate per block"
							},
							"getSupplyRate(uint256,uint256,uint256,uint256)": {
								"notice": "Calculates the current supply interest rate per block"
							}
						},
						"version": 1
					}
				}
			},
			"rate/JumpRateModel.sol": {
				"JumpRateModel": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "baseRatePerBlock",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "multiplierPerBlock",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "jumpMultiplierPerBlock",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "kink",
									"type": "uint256"
								}
							],
							"name": "NewInterestParams",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "baseRatePerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "blocksPerYear",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cash",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "borrows",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserves",
									"type": "uint256"
								}
							],
							"name": "getBorrowRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cash",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "borrows",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserves",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveFactorMantissa",
									"type": "uint256"
								}
							],
							"name": "getSupplyRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "baseRatePerYear",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "multiplierPerYear",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "jumpMultiplierPerYear",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "kink_",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "jumpMultiplierPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kink",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "multiplierPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "baseRatePerYear",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "multiplierPerYear",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "jumpMultiplierPerYear",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "kink_",
									"type": "uint256"
								}
							],
							"name": "updateJumpRateModel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cash",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "borrows",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserves",
									"type": "uint256"
								}
							],
							"name": "utilizationRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Arr00",
						"kind": "dev",
						"methods": {
							"getBorrowRate(uint256,uint256,uint256)": {
								"params": {
									"borrows": "The amount of borrows in the market",
									"cash": "The amount of cash in the market",
									"reserves": "The amount of reserves in the market"
								},
								"returns": {
									"_0": "The borrow rate percentage per block as a mantissa (scaled by 1e18)"
								}
							},
							"getSupplyRate(uint256,uint256,uint256,uint256)": {
								"params": {
									"borrows": "The amount of borrows in the market",
									"cash": "The amount of cash in the market",
									"reserveFactorMantissa": "The current reserve factor for the market",
									"reserves": "The amount of reserves in the market"
								},
								"returns": {
									"_0": "The supply rate percentage per block as a mantissa (scaled by 1e18)"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateJumpRateModel(uint256,uint256,uint256,uint256)": {
								"params": {
									"baseRatePerYear": "The approximate target base APR, as a mantissa (scaled by 1e18)",
									"jumpMultiplierPerYear": "The multiplierPerBlock after hitting a specified utilization point",
									"kink_": "The utilization point at which the jump multiplier is applied",
									"multiplierPerYear": "The rate of increase in interest rate wrt utilization (scaled by 1e18)"
								}
							},
							"utilizationRate(uint256,uint256,uint256)": {
								"params": {
									"borrows": "The amount of borrows in the market",
									"cash": "The amount of cash in the market",
									"reserves": "The amount of reserves in the market (currently unused)"
								},
								"returns": {
									"_0": "The utilization rate as a mantissa between [0, 1e18]"
								}
							}
						},
						"title": "Compound's JumpRateModel Contract V2 for V2 cTokens",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"rate/JumpRateModel.sol\":224:550  contract JumpRateModel is BaseJumpRateModel {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"rate/JumpRateModel.sol\":224:550  contract JumpRateModel is BaseJumpRateModel {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xb9f9850a\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xb9f9850a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf14039de\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xfd2da339\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa385fb96\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb8168816\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x15f24053\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2037f3e7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x60a2da44\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x6e71e2d8\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8726bb89\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"rate/BaseJumpRateModel.sol\":5633:5812  function getBorrowRate(uint cash, uint borrows, uint reserves) external virtual override view returns (uint) {... */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0x40\n      add\n      calldataload\n      tag_20\n      jump\t// in\n    tag_18:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"rate/BaseJumpRateModel.sol\":3485:3719  function updateJumpRateModel(uint baseRatePerYear, uint multiplierPerYear, uint jumpMultiplierPerYear, uint kink_) external {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      add\n      calldataload\n      tag_23\n      jump\t// in\n    tag_21:\n      stop\n        /* \"rate/JumpRateModel.sol\":275:548  function initialize(uint baseRatePerYear, uint multiplierPerYear, uint jumpMultiplierPerYear, uint kink_) public initializer {... */\n    tag_5:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      add\n      calldataload\n      tag_26\n      jump\t// in\n        /* \"rate/BaseJumpRateModel.sol\":4100:4390  function utilizationRate(uint cash, uint borrows, uint reserves) public pure returns (uint) {... */\n    tag_6:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0x40\n      add\n      calldataload\n      tag_29\n      jump\t// in\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1894:2039  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_21\n      tag_31\n      jump\t// in\n        /* \"rate/BaseJumpRateModel.sol\":2550:2580  uint public multiplierPerBlock */\n    tag_8:\n      tag_18\n      tag_33\n      jump\t// in\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1271:1348  function owner() public view returns (address) {... */\n    tag_9:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"rate/BaseJumpRateModel.sol\":2390:2435  uint public constant blocksPerYear = 15768000 */\n    tag_10:\n      tag_18\n      tag_37\n      jump\t// in\n        /* \"rate/BaseJumpRateModel.sol\":6674:6904  function getSupplyRate(uint cash, uint borrows, uint reserves, uint reserveFactorMantissa) external virtual override view returns (uint) {... */\n    tag_11:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      add\n      calldataload\n      tag_40\n      jump\t// in\n        /* \"rate/BaseJumpRateModel.sol\":2826:2860  uint public jumpMultiplierPerBlock */\n    tag_12:\n      tag_18\n      tag_42\n      jump\t// in\n        /* \"rate/BaseJumpRateModel.sol\":2693:2721  uint public baseRatePerBlock */\n    tag_13:\n      tag_18\n      tag_44\n      jump\t// in\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2188:2428  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_47\n      jump\t// in\n        /* \"rate/BaseJumpRateModel.sol\":2960:2976  uint public kink */\n    tag_15:\n      tag_18\n      tag_49\n      jump\t// in\n        /* \"rate/BaseJumpRateModel.sol\":5633:5812  function getBorrowRate(uint cash, uint borrows, uint reserves) external virtual override view returns (uint) {... */\n    tag_20:\n        /* \"rate/BaseJumpRateModel.sol\":5736:5740  uint */\n      0x00\n        /* \"rate/BaseJumpRateModel.sol\":5759:5805  getBorrowRateInternal(cash, borrows, reserves) */\n      tag_51\n        /* \"rate/BaseJumpRateModel.sol\":5781:5785  cash */\n      dup5\n        /* \"rate/BaseJumpRateModel.sol\":5787:5794  borrows */\n      dup5\n        /* \"rate/BaseJumpRateModel.sol\":5796:5804  reserves */\n      dup5\n        /* \"rate/BaseJumpRateModel.sol\":5759:5780  getBorrowRateInternal */\n      tag_52\n        /* \"rate/BaseJumpRateModel.sol\":5759:5805  getBorrowRateInternal(cash, borrows, reserves) */\n      jump\t// in\n    tag_51:\n        /* \"rate/BaseJumpRateModel.sol\":5752:5805  return getBorrowRateInternal(cash, borrows, reserves) */\n      swap1\n      pop\n        /* \"rate/BaseJumpRateModel.sol\":5633:5812  function getBorrowRate(uint cash, uint borrows, uint reserves) external virtual override view returns (uint) {... */\n    tag_50:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"rate/BaseJumpRateModel.sol\":3485:3719  function updateJumpRateModel(uint baseRatePerYear, uint multiplierPerYear, uint jumpMultiplierPerYear, uint kink_) external {... */\n    tag_23:\n        /* \"rate/BaseJumpRateModel.sol\":3619:3712  updateJumpRateModelInternal(baseRatePerYear, multiplierPerYear, jumpMultiplierPerYear, kink_) */\n      tag_54\n        /* \"rate/BaseJumpRateModel.sol\":3647:3662  baseRatePerYear */\n      dup5\n        /* \"rate/BaseJumpRateModel.sol\":3664:3681  multiplierPerYear */\n      dup5\n        /* \"rate/BaseJumpRateModel.sol\":3683:3704  jumpMultiplierPerYear */\n      dup5\n        /* \"rate/BaseJumpRateModel.sol\":3706:3711  kink_ */\n      dup5\n        /* \"rate/BaseJumpRateModel.sol\":3619:3646  updateJumpRateModelInternal */\n      tag_55\n        /* \"rate/BaseJumpRateModel.sol\":3619:3712  updateJumpRateModelInternal(baseRatePerYear, multiplierPerYear, jumpMultiplierPerYear, kink_) */\n      jump\t// in\n    tag_54:\n        /* \"rate/BaseJumpRateModel.sol\":3485:3719  function updateJumpRateModel(uint baseRatePerYear, uint multiplierPerYear, uint jumpMultiplierPerYear, uint kink_) external {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"rate/JumpRateModel.sol\":275:548  function initialize(uint baseRatePerYear, uint multiplierPerYear, uint jumpMultiplierPerYear, uint kink_) public initializer {... */\n    tag_26:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1024:1036  initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1024:1055  initializing || isConstructor() */\n      tag_58\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1040:1055  isConstructor() */\n      tag_58\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1040:1053  isConstructor */\n      tag_59\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1040:1055  isConstructor() */\n      jump\t// in\n    tag_58:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1024:1071  initializing || isConstructor() || !initialized */\n      dup1\n      tag_60\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1060:1071  initialized */\n      and(0xff, sload(0x00))\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1059:1071  !initialized */\n      iszero\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1024:1071  initializing || isConstructor() || !initialized */\n    tag_60:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1016:1122  require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1129:1148  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1152:1164  initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1151:1164  !initializing */\n      iszero\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1170:1250  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_62\n      jumpi\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1198:1210  initializing */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1198:1217  initializing = true */\n      dup1\n      sload\n      not(0xff)\n      not(0xff00)\n      swap1\n      swap2\n      and\n      0x0100\n      or\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1225:1243  initialized = true */\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1213:1217  true */\n      0x01\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1225:1243  initialized = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1170:1250  if (isTopLevelCall) {... */\n    tag_62:\n        /* \"rate/JumpRateModel.sol\":410:432  super.__Ownable_init() */\n      tag_64\n        /* \"rate/JumpRateModel.sol\":410:430  super.__Ownable_init */\n      tag_65\n        /* \"rate/JumpRateModel.sol\":410:432  super.__Ownable_init() */\n      jump\t// in\n    tag_64:\n        /* \"rate/JumpRateModel.sol\":442:541  super.updateJumpRateModelInternal(baseRatePerYear, multiplierPerYear, jumpMultiplierPerYear, kink_) */\n      tag_66\n        /* \"rate/JumpRateModel.sol\":476:491  baseRatePerYear */\n      dup6\n        /* \"rate/JumpRateModel.sol\":493:510  multiplierPerYear */\n      dup6\n        /* \"rate/JumpRateModel.sol\":512:533  jumpMultiplierPerYear */\n      dup6\n        /* \"rate/JumpRateModel.sol\":535:540  kink_ */\n      dup6\n        /* \"rate/JumpRateModel.sol\":442:475  super.updateJumpRateModelInternal */\n      tag_55\n        /* \"rate/JumpRateModel.sol\":442:541  super.updateJumpRateModelInternal(baseRatePerYear, multiplierPerYear, jumpMultiplierPerYear, kink_) */\n      jump\t// in\n    tag_66:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1268:1282  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1264:1319  if (isTopLevelCall) {... */\n      iszero\n      tag_67\n      jumpi\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1307:1312  false */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1292:1312  initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1264:1319  if (isTopLevelCall) {... */\n    tag_67:\n        /* \"rate/JumpRateModel.sol\":275:548  function initialize(uint baseRatePerYear, uint multiplierPerYear, uint jumpMultiplierPerYear, uint kink_) public initializer {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"rate/BaseJumpRateModel.sol\":4100:4390  function utilizationRate(uint cash, uint borrows, uint reserves) public pure returns (uint) {... */\n    tag_29:\n        /* \"rate/BaseJumpRateModel.sol\":4186:4190  uint */\n      0x00\n        /* \"rate/BaseJumpRateModel.sol\":4265:4277  borrows == 0 */\n      dup3\n        /* \"rate/BaseJumpRateModel.sol\":4261:4312  if (borrows == 0) {... */\n      tag_69\n      jumpi\n      pop\n        /* \"rate/BaseJumpRateModel.sol\":4300:4301  0 */\n      0x00\n        /* \"rate/BaseJumpRateModel.sol\":4293:4301  return 0 */\n      jump(tag_50)\n        /* \"rate/BaseJumpRateModel.sol\":4261:4312  if (borrows == 0) {... */\n    tag_69:\n        /* \"rate/BaseJumpRateModel.sol\":4329:4383  borrows.mul(1e18).div(cash.add(borrows).sub(reserves)) */\n      tag_51\n        /* \"rate/BaseJumpRateModel.sol\":4351:4382  cash.add(borrows).sub(reserves) */\n      tag_71\n        /* \"rate/BaseJumpRateModel.sol\":4373:4381  reserves */\n      dup4\n        /* \"rate/BaseJumpRateModel.sol\":4351:4368  cash.add(borrows) */\n      tag_72\n        /* \"rate/BaseJumpRateModel.sol\":4351:4355  cash */\n      dup8\n        /* \"rate/BaseJumpRateModel.sol\":4360:4367  borrows */\n      dup8\n        /* \"rate/BaseJumpRateModel.sol\":4351:4359  cash.add */\n      tag_73\n        /* \"rate/BaseJumpRateModel.sol\":4351:4368  cash.add(borrows) */\n      jump\t// in\n    tag_72:\n        /* \"rate/BaseJumpRateModel.sol\":4351:4372  cash.add(borrows).sub */\n      swap1\n      tag_74\n        /* \"rate/BaseJumpRateModel.sol\":4351:4382  cash.add(borrows).sub(reserves) */\n      jump\t// in\n    tag_71:\n        /* \"rate/BaseJumpRateModel.sol\":4329:4346  borrows.mul(1e18) */\n      tag_75\n        /* \"rate/BaseJumpRateModel.sol\":4329:4336  borrows */\n      dup6\n        /* \"rate/BaseJumpRateModel.sol\":4341:4345  1e18 */\n      0x0de0b6b3a7640000\n        /* \"rate/BaseJumpRateModel.sol\":4329:4340  borrows.mul */\n      tag_76\n        /* \"rate/BaseJumpRateModel.sol\":4329:4346  borrows.mul(1e18) */\n      jump\t// in\n    tag_75:\n        /* \"rate/BaseJumpRateModel.sol\":4329:4350  borrows.mul(1e18).div */\n      swap1\n      tag_77\n        /* \"rate/BaseJumpRateModel.sol\":4329:4383  borrows.mul(1e18).div(cash.add(borrows).sub(reserves)) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1894:2039  function renounceOwnership() public virtual onlyOwner {... */\n    tag_31:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1485:1497  _msgSender() */\n      tag_79\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1485:1495  _msgSender */\n      tag_80\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1485:1497  _msgSender() */\n      jump\t// in\n    tag_79:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1475:1481  _owner */\n      sload(0x65)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1475:1497  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1467:1534  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_81\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_81:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1984:1990  _owner */\n      sload(0x65)\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1963:2003  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2000:2001  0 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1984:1990  _owner */\n      and\n      swap1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1963:2003  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2000:2001  0 */\n      dup4\n      swap1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1963:2003  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2013:2019  _owner */\n      0x65\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2013:2032  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1894:2039  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"rate/BaseJumpRateModel.sol\":2550:2580  uint public multiplierPerBlock */\n    tag_33:\n      sload(0x97)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1271:1348  function owner() public view returns (address) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1335:1341  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x65))\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1271:1348  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"rate/BaseJumpRateModel.sol\":2390:2435  uint public constant blocksPerYear = 15768000 */\n    tag_37:\n        /* \"rate/BaseJumpRateModel.sol\":2427:2435  15768000 */\n      0xf099c0\n        /* \"rate/BaseJumpRateModel.sol\":2390:2435  uint public constant blocksPerYear = 15768000 */\n      dup2\n      jump\t// out\n        /* \"rate/BaseJumpRateModel.sol\":6674:6904  function getSupplyRate(uint cash, uint borrows, uint reserves, uint reserveFactorMantissa) external virtual override view returns (uint) {... */\n    tag_40:\n        /* \"rate/BaseJumpRateModel.sol\":6805:6809  uint */\n      0x00\n        /* \"rate/BaseJumpRateModel.sol\":6828:6897  getSupplyRateInternal(cash, borrows, reserves, reserveFactorMantissa) */\n      tag_85\n        /* \"rate/BaseJumpRateModel.sol\":6850:6854  cash */\n      dup6\n        /* \"rate/BaseJumpRateModel.sol\":6856:6863  borrows */\n      dup6\n        /* \"rate/BaseJumpRateModel.sol\":6865:6873  reserves */\n      dup6\n        /* \"rate/BaseJumpRateModel.sol\":6875:6896  reserveFactorMantissa */\n      dup6\n        /* \"rate/BaseJumpRateModel.sol\":6828:6849  getSupplyRateInternal */\n      tag_86\n        /* \"rate/BaseJumpRateModel.sol\":6828:6897  getSupplyRateInternal(cash, borrows, reserves, reserveFactorMantissa) */\n      jump\t// in\n    tag_85:\n        /* \"rate/BaseJumpRateModel.sol\":6821:6897  return getSupplyRateInternal(cash, borrows, reserves, reserveFactorMantissa) */\n      swap6\n        /* \"rate/BaseJumpRateModel.sol\":6674:6904  function getSupplyRate(uint cash, uint borrows, uint reserves, uint reserveFactorMantissa) external virtual override view returns (uint) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"rate/BaseJumpRateModel.sol\":2826:2860  uint public jumpMultiplierPerBlock */\n    tag_42:\n      sload(0x99)\n      dup2\n      jump\t// out\n        /* \"rate/BaseJumpRateModel.sol\":2693:2721  uint public baseRatePerBlock */\n    tag_44:\n      sload(0x98)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2188:2428  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_47:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1485:1497  _msgSender() */\n      tag_88\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1485:1495  _msgSender */\n      tag_80\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1485:1497  _msgSender() */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1475:1481  _owner */\n      sload(0x65)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1475:1497  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1467:1534  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_89\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_89:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2276:2298  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2268:2341  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2377:2383  _owner */\n      sload(0x65)\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2356:2394  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup5\n      and\n      swap3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2377:2383  _owner */\n      and\n      swap1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2356:2394  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2377:2383  _owner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2356:2394  OwnershipTransferred(_owner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2404:2410  _owner */\n      0x65\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2404:2421  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":2188:2428  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"rate/BaseJumpRateModel.sol\":2960:2976  uint public kink */\n    tag_49:\n      sload(0x9a)\n      dup2\n      jump\t// out\n        /* \"rate/BaseJumpRateModel.sol\":4769:5298  function getBorrowRateInternal(uint cash, uint borrows, uint reserves) internal view returns (uint) {... */\n    tag_52:\n        /* \"rate/BaseJumpRateModel.sol\":4863:4867  uint */\n      0x00\n        /* \"rate/BaseJumpRateModel.sol\":4879:4888  uint util */\n      dup1\n        /* \"rate/BaseJumpRateModel.sol\":4891:4931  utilizationRate(cash, borrows, reserves) */\n      tag_93\n        /* \"rate/BaseJumpRateModel.sol\":4907:4911  cash */\n      dup6\n        /* \"rate/BaseJumpRateModel.sol\":4913:4920  borrows */\n      dup6\n        /* \"rate/BaseJumpRateModel.sol\":4922:4930  reserves */\n      dup6\n        /* \"rate/BaseJumpRateModel.sol\":4891:4906  utilizationRate */\n      tag_29\n        /* \"rate/BaseJumpRateModel.sol\":4891:4931  utilizationRate(cash, borrows, reserves) */\n      jump\t// in\n    tag_93:\n        /* \"rate/BaseJumpRateModel.sol\":4879:4931  uint util = utilizationRate(cash, borrows, reserves) */\n      swap1\n      pop\n        /* \"rate/BaseJumpRateModel.sol\":4954:4958  kink */\n      sload(0x9a)\n        /* \"rate/BaseJumpRateModel.sol\":4946:4950  util */\n      dup2\n        /* \"rate/BaseJumpRateModel.sol\":4946:4958  util <= kink */\n      gt\n        /* \"rate/BaseJumpRateModel.sol\":4942:5292  if (util <= kink) {... */\n      tag_94\n      jumpi\n        /* \"rate/BaseJumpRateModel.sol\":4981:5041  util.mul(multiplierPerBlock).div(1e18).add(baseRatePerBlock) */\n      tag_95\n        /* \"rate/BaseJumpRateModel.sol\":5024:5040  baseRatePerBlock */\n      sload(0x98)\n        /* \"rate/BaseJumpRateModel.sol\":4981:5019  util.mul(multiplierPerBlock).div(1e18) */\n      tag_96\n        /* \"rate/BaseJumpRateModel.sol\":5014:5018  1e18 */\n      0x0de0b6b3a7640000\n        /* \"rate/BaseJumpRateModel.sol\":4981:5009  util.mul(multiplierPerBlock) */\n      tag_75\n        /* \"rate/BaseJumpRateModel.sol\":4990:5008  multiplierPerBlock */\n      sload(0x97)\n        /* \"rate/BaseJumpRateModel.sol\":4981:4985  util */\n      dup7\n        /* \"rate/BaseJumpRateModel.sol\":4981:4989  util.mul */\n      tag_76\n      swap1\n        /* \"rate/BaseJumpRateModel.sol\":4981:5009  util.mul(multiplierPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"rate/BaseJumpRateModel.sol\":4981:5019  util.mul(multiplierPerBlock).div(1e18) */\n    tag_96:\n        /* \"rate/BaseJumpRateModel.sol\":4981:5023  util.mul(multiplierPerBlock).div(1e18).add */\n      swap1\n      tag_73\n        /* \"rate/BaseJumpRateModel.sol\":4981:5041  util.mul(multiplierPerBlock).div(1e18).add(baseRatePerBlock) */\n      jump\t// in\n    tag_95:\n        /* \"rate/BaseJumpRateModel.sol\":4974:5041  return util.mul(multiplierPerBlock).div(1e18).add(baseRatePerBlock) */\n      swap2\n      pop\n      pop\n      jump(tag_50)\n        /* \"rate/BaseJumpRateModel.sol\":4942:5292  if (util <= kink) {... */\n    tag_94:\n        /* \"rate/BaseJumpRateModel.sol\":5072:5087  uint normalRate */\n      0x00\n        /* \"rate/BaseJumpRateModel.sol\":5090:5150  kink.mul(multiplierPerBlock).div(1e18).add(baseRatePerBlock) */\n      tag_99\n        /* \"rate/BaseJumpRateModel.sol\":5133:5149  baseRatePerBlock */\n      sload(0x98)\n        /* \"rate/BaseJumpRateModel.sol\":5090:5128  kink.mul(multiplierPerBlock).div(1e18) */\n      tag_96\n        /* \"rate/BaseJumpRateModel.sol\":5123:5127  1e18 */\n      0x0de0b6b3a7640000\n        /* \"rate/BaseJumpRateModel.sol\":5090:5118  kink.mul(multiplierPerBlock) */\n      tag_75\n        /* \"rate/BaseJumpRateModel.sol\":5099:5117  multiplierPerBlock */\n      sload(0x97)\n        /* \"rate/BaseJumpRateModel.sol\":5090:5094  kink */\n      sload(0x9a)\n        /* \"rate/BaseJumpRateModel.sol\":5090:5098  kink.mul */\n      tag_76\n      swap1\n        /* \"rate/BaseJumpRateModel.sol\":5090:5118  kink.mul(multiplierPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"rate/BaseJumpRateModel.sol\":5090:5150  kink.mul(multiplierPerBlock).div(1e18).add(baseRatePerBlock) */\n    tag_99:\n        /* \"rate/BaseJumpRateModel.sol\":5072:5150  uint normalRate = kink.mul(multiplierPerBlock).div(1e18).add(baseRatePerBlock) */\n      swap1\n      pop\n        /* \"rate/BaseJumpRateModel.sol\":5164:5179  uint excessUtil */\n      0x00\n        /* \"rate/BaseJumpRateModel.sol\":5182:5196  util.sub(kink) */\n      tag_102\n        /* \"rate/BaseJumpRateModel.sol\":5191:5195  kink */\n      sload(0x9a)\n        /* \"rate/BaseJumpRateModel.sol\":5182:5186  util */\n      dup5\n        /* \"rate/BaseJumpRateModel.sol\":5182:5190  util.sub */\n      tag_74\n      swap1\n        /* \"rate/BaseJumpRateModel.sol\":5182:5196  util.sub(kink) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_102:\n        /* \"rate/BaseJumpRateModel.sol\":5164:5196  uint excessUtil = util.sub(kink) */\n      swap1\n      pop\n        /* \"rate/BaseJumpRateModel.sol\":5217:5281  excessUtil.mul(jumpMultiplierPerBlock).div(1e18).add(normalRate) */\n      tag_103\n        /* \"rate/BaseJumpRateModel.sol\":5270:5280  normalRate */\n      dup3\n        /* \"rate/BaseJumpRateModel.sol\":5217:5265  excessUtil.mul(jumpMultiplierPerBlock).div(1e18) */\n      tag_96\n        /* \"rate/BaseJumpRateModel.sol\":5260:5264  1e18 */\n      0x0de0b6b3a7640000\n        /* \"rate/BaseJumpRateModel.sol\":5217:5255  excessUtil.mul(jumpMultiplierPerBlock) */\n      tag_75\n        /* \"rate/BaseJumpRateModel.sol\":5232:5254  jumpMultiplierPerBlock */\n      sload(0x99)\n        /* \"rate/BaseJumpRateModel.sol\":5217:5227  excessUtil */\n      dup7\n        /* \"rate/BaseJumpRateModel.sol\":5217:5231  excessUtil.mul */\n      tag_76\n      swap1\n        /* \"rate/BaseJumpRateModel.sol\":5217:5255  excessUtil.mul(jumpMultiplierPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"rate/BaseJumpRateModel.sol\":5217:5281  excessUtil.mul(jumpMultiplierPerBlock).div(1e18).add(normalRate) */\n    tag_103:\n        /* \"rate/BaseJumpRateModel.sol\":5210:5281  return excessUtil.mul(jumpMultiplierPerBlock).div(1e18).add(normalRate) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_50)\n        /* \"rate/BaseJumpRateModel.sol\":7393:7893  function updateJumpRateModelInternal(uint baseRatePerYear, uint multiplierPerYear, uint jumpMultiplierPerYear, uint kink_) internal onlyOwner {... */\n    tag_55:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1485:1497  _msgSender() */\n      tag_107\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1485:1495  _msgSender */\n      tag_80\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1485:1497  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1475:1481  _owner */\n      sload(0x65)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1475:1497  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1467:1534  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_108\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_108:\n        /* \"rate/BaseJumpRateModel.sol\":7564:7598  baseRatePerYear.div(blocksPerYear) */\n      tag_110\n        /* \"rate/BaseJumpRateModel.sol\":7564:7579  baseRatePerYear */\n      dup5\n        /* \"rate/BaseJumpRateModel.sol\":2427:2435  15768000 */\n      0xf099c0\n        /* \"rate/BaseJumpRateModel.sol\":7564:7583  baseRatePerYear.div */\n      tag_77\n        /* \"rate/BaseJumpRateModel.sol\":7564:7598  baseRatePerYear.div(blocksPerYear) */\n      jump\t// in\n    tag_110:\n        /* \"rate/BaseJumpRateModel.sol\":7545:7561  baseRatePerBlock */\n      0x98\n        /* \"rate/BaseJumpRateModel.sol\":7545:7598  baseRatePerBlock = baseRatePerYear.div(blocksPerYear) */\n      sstore\n        /* \"rate/BaseJumpRateModel.sol\":7629:7688  (multiplierPerYear.mul(1e18)).div(blocksPerYear.mul(kink_)) */\n      tag_111\n        /* \"rate/BaseJumpRateModel.sol\":7663:7687  blocksPerYear.mul(kink_) */\n      tag_71\n        /* \"rate/BaseJumpRateModel.sol\":2427:2435  15768000 */\n      0xf099c0\n        /* \"rate/BaseJumpRateModel.sol\":7681:7686  kink_ */\n      dup4\n        /* \"rate/BaseJumpRateModel.sol\":7663:7680  blocksPerYear.mul */\n      tag_76\n        /* \"rate/BaseJumpRateModel.sol\":7663:7687  blocksPerYear.mul(kink_) */\n      jump\t// in\n        /* \"rate/BaseJumpRateModel.sol\":7629:7688  (multiplierPerYear.mul(1e18)).div(blocksPerYear.mul(kink_)) */\n    tag_111:\n        /* \"rate/BaseJumpRateModel.sol\":7608:7626  multiplierPerBlock */\n      0x97\n        /* \"rate/BaseJumpRateModel.sol\":7608:7688  multiplierPerBlock = (multiplierPerYear.mul(1e18)).div(blocksPerYear.mul(kink_)) */\n      sstore\n        /* \"rate/BaseJumpRateModel.sol\":7723:7763  jumpMultiplierPerYear.div(blocksPerYear) */\n      tag_114\n        /* \"rate/BaseJumpRateModel.sol\":7723:7744  jumpMultiplierPerYear */\n      dup3\n        /* \"rate/BaseJumpRateModel.sol\":2427:2435  15768000 */\n      0xf099c0\n        /* \"rate/BaseJumpRateModel.sol\":7723:7748  jumpMultiplierPerYear.div */\n      tag_77\n        /* \"rate/BaseJumpRateModel.sol\":7723:7763  jumpMultiplierPerYear.div(blocksPerYear) */\n      jump\t// in\n    tag_114:\n        /* \"rate/BaseJumpRateModel.sol\":7698:7720  jumpMultiplierPerBlock */\n      0x99\n        /* \"rate/BaseJumpRateModel.sol\":7698:7763  jumpMultiplierPerBlock = jumpMultiplierPerYear.div(blocksPerYear) */\n      dup2\n      swap1\n      sstore\n        /* \"rate/BaseJumpRateModel.sol\":7773:7777  kink */\n      0x9a\n        /* \"rate/BaseJumpRateModel.sol\":7773:7785  kink = kink_ */\n      dup3\n      swap1\n      sstore\n        /* \"rate/BaseJumpRateModel.sol\":7819:7835  baseRatePerBlock */\n      sload(0x98)\n        /* \"rate/BaseJumpRateModel.sol\":7837:7855  multiplierPerBlock */\n      sload(0x97)\n        /* \"rate/BaseJumpRateModel.sol\":7801:7886  NewInterestParams(baseRatePerBlock, multiplierPerBlock, jumpMultiplierPerBlock, kink) */\n      0x40\n      dup1\n      mload\n      swap3\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup2\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x60\n      dup2\n      add\n      dup4\n      swap1\n      mstore\n      swap1\n      mload\n      0x6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d\n      swap2\n      dup2\n      swap1\n      sub\n      0x80\n      add\n      swap1\n      log1\n        /* \"rate/BaseJumpRateModel.sol\":7393:7893  function updateJumpRateModelInternal(uint baseRatePerYear, uint multiplierPerYear, uint jumpMultiplierPerYear, uint kink_) internal onlyOwner {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1409:1907  function isConstructor() private view returns (bool) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1820:1824  this */\n      address\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1864:1881  extcodesize(self) */\n      extcodesize\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1895:1902  cs == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1409:1907  function isConstructor() private view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":867:993  function __Ownable_init() internal initializer {... */\n    tag_65:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1024:1036  initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1024:1055  initializing || isConstructor() */\n      tag_118\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1040:1055  isConstructor() */\n      tag_118\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1040:1053  isConstructor */\n      tag_59\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1040:1055  isConstructor() */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1024:1071  initializing || isConstructor() || !initialized */\n      dup1\n      tag_119\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1060:1071  initialized */\n      and(0xff, sload(0x00))\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1059:1071  !initialized */\n      iszero\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1024:1071  initializing || isConstructor() || !initialized */\n    tag_119:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1016:1122  require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1129:1148  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1152:1164  initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1151:1164  !initializing */\n      iszero\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1170:1250  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_121\n      jumpi\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1198:1210  initializing */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1198:1217  initializing = true */\n      dup1\n      sload\n      not(0xff)\n      not(0xff00)\n      swap1\n      swap2\n      and\n      0x0100\n      or\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1225:1243  initialized = true */\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1213:1217  true */\n      0x01\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1225:1243  initialized = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1170:1250  if (isTopLevelCall) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":924:950  __Context_init_unchained() */\n      tag_123\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":924:948  __Context_init_unchained */\n      tag_124\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":924:950  __Context_init_unchained() */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":960:986  __Ownable_init_unchained() */\n      tag_125\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":960:984  __Ownable_init_unchained */\n      tag_126\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":960:986  __Ownable_init_unchained() */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1268:1282  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1264:1319  if (isTopLevelCall) {... */\n      iszero\n      tag_127\n      jumpi\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1307:1312  false */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1292:1312  initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1264:1319  if (isTopLevelCall) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":867:993  function __Ownable_init() internal initializer {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":892:899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":923:928  a + b */\n      dup3\n      dup3\n      add\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":946:952  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_129\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_129:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1002:1003  c */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_128:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1274:1408  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1332:1339  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_129\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1362:1363  a */\n      dup4\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1365:1366  b */\n      dup4\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1358:1361  sub */\n      tag_132\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2119:2578  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2177:2184  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2418:2424  a == 0 */\n      dup3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2414:2459  if (a == 0) {... */\n      tag_134\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2447:2448  0 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2440:2448  return 0 */\n      jump(tag_128)\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2414:2459  if (a == 0) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2481:2486  a * b */\n      dup3\n      dup3\n      mul\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2485:2486  b */\n      dup3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2481:2482  a */\n      dup5\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2481:2486  a * b */\n      dup3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2481:2482  a */\n      dup2\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2504:2509  c / a */\n      tag_135\n      jumpi\n      invalid\n    tag_135:\n      div\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2504:2514  c / a == b */\n      eq\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2496:2552  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3033:3163  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3091:3098  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3117:3156  div(a, b, \"SafeMath: division by zero\") */\n      tag_129\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3121:3122  a */\n      dup4\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3124:3125  b */\n      dup4\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3117:3156  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3117:3120  div */\n      tag_139\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3117:3156  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":931:1035  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":1018:1028  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":931:1035  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"rate/BaseJumpRateModel.sol\":5819:6262  function getSupplyRateInternal(uint cash, uint borrows, uint reserves, uint reserveFactorMantissa) internal view returns (uint) {... */\n    tag_86:\n        /* \"rate/BaseJumpRateModel.sol\":5941:5945  uint */\n      0x00\n      dup1\n        /* \"rate/BaseJumpRateModel.sol\":5986:6023  uint(1e18).sub(reserveFactorMantissa) */\n      tag_142\n        /* \"rate/BaseJumpRateModel.sol\":5991:5995  1e18 */\n      0x0de0b6b3a7640000\n        /* \"rate/BaseJumpRateModel.sol\":6001:6022  reserveFactorMantissa */\n      dup5\n        /* \"rate/BaseJumpRateModel.sol\":5986:6000  uint(1e18).sub */\n      tag_74\n        /* \"rate/BaseJumpRateModel.sol\":5986:6023  uint(1e18).sub(reserveFactorMantissa) */\n      jump\t// in\n    tag_142:\n        /* \"rate/BaseJumpRateModel.sol\":5957:6023  uint oneMinusReserveFactor = uint(1e18).sub(reserveFactorMantissa) */\n      swap1\n      pop\n        /* \"rate/BaseJumpRateModel.sol\":6033:6048  uint borrowRate */\n      0x00\n        /* \"rate/BaseJumpRateModel.sol\":6051:6097  getBorrowRateInternal(cash, borrows, reserves) */\n      tag_143\n        /* \"rate/BaseJumpRateModel.sol\":6073:6077  cash */\n      dup8\n        /* \"rate/BaseJumpRateModel.sol\":6079:6086  borrows */\n      dup8\n        /* \"rate/BaseJumpRateModel.sol\":6088:6096  reserves */\n      dup8\n        /* \"rate/BaseJumpRateModel.sol\":6051:6072  getBorrowRateInternal */\n      tag_52\n        /* \"rate/BaseJumpRateModel.sol\":6051:6097  getBorrowRateInternal(cash, borrows, reserves) */\n      jump\t// in\n    tag_143:\n        /* \"rate/BaseJumpRateModel.sol\":6033:6097  uint borrowRate = getBorrowRateInternal(cash, borrows, reserves) */\n      swap1\n      pop\n        /* \"rate/BaseJumpRateModel.sol\":6107:6122  uint rateToPool */\n      0x00\n        /* \"rate/BaseJumpRateModel.sol\":6125:6172  borrowRate.mul(oneMinusReserveFactor).div(1e18) */\n      tag_144\n        /* \"rate/BaseJumpRateModel.sol\":6167:6171  1e18 */\n      0x0de0b6b3a7640000\n        /* \"rate/BaseJumpRateModel.sol\":6125:6162  borrowRate.mul(oneMinusReserveFactor) */\n      tag_75\n        /* \"rate/BaseJumpRateModel.sol\":6033:6097  uint borrowRate = getBorrowRateInternal(cash, borrows, reserves) */\n      dup5\n        /* \"rate/BaseJumpRateModel.sol\":6140:6161  oneMinusReserveFactor */\n      dup7\n        /* \"rate/BaseJumpRateModel.sol\":6125:6139  borrowRate.mul */\n      tag_76\n        /* \"rate/BaseJumpRateModel.sol\":6125:6162  borrowRate.mul(oneMinusReserveFactor) */\n      jump\t// in\n        /* \"rate/BaseJumpRateModel.sol\":6125:6172  borrowRate.mul(oneMinusReserveFactor).div(1e18) */\n    tag_144:\n        /* \"rate/BaseJumpRateModel.sol\":6107:6172  uint rateToPool = borrowRate.mul(oneMinusReserveFactor).div(1e18) */\n      swap1\n      pop\n        /* \"rate/BaseJumpRateModel.sol\":6189:6255  utilizationRate(cash, borrows, reserves).mul(rateToPool).div(1e18) */\n      tag_146\n        /* \"rate/BaseJumpRateModel.sol\":6250:6254  1e18 */\n      0x0de0b6b3a7640000\n        /* \"rate/BaseJumpRateModel.sol\":6189:6245  utilizationRate(cash, borrows, reserves).mul(rateToPool) */\n      tag_75\n        /* \"rate/BaseJumpRateModel.sol\":6234:6244  rateToPool */\n      dup4\n        /* \"rate/BaseJumpRateModel.sol\":6189:6229  utilizationRate(cash, borrows, reserves) */\n      tag_148\n        /* \"rate/BaseJumpRateModel.sol\":6205:6209  cash */\n      dup13\n        /* \"rate/BaseJumpRateModel.sol\":6211:6218  borrows */\n      dup13\n        /* \"rate/BaseJumpRateModel.sol\":6220:6228  reserves */\n      dup13\n        /* \"rate/BaseJumpRateModel.sol\":6189:6204  utilizationRate */\n      tag_29\n        /* \"rate/BaseJumpRateModel.sol\":6189:6229  utilizationRate(cash, borrows, reserves) */\n      jump\t// in\n    tag_148:\n        /* \"rate/BaseJumpRateModel.sol\":6189:6233  utilizationRate(cash, borrows, reserves).mul */\n      swap1\n      tag_76\n        /* \"rate/BaseJumpRateModel.sol\":6189:6245  utilizationRate(cash, borrows, reserves).mul(rateToPool) */\n      jump\t// in\n        /* \"rate/BaseJumpRateModel.sol\":6189:6255  utilizationRate(cash, borrows, reserves).mul(rateToPool).div(1e18) */\n    tag_146:\n        /* \"rate/BaseJumpRateModel.sol\":6182:6255  return utilizationRate(cash, borrows, reserves).mul(rateToPool).div(1e18) */\n      swap9\n        /* \"rate/BaseJumpRateModel.sol\":5819:6262  function getSupplyRateInternal(uint cash, uint borrows, uint reserves, uint reserveFactorMantissa) internal view returns (uint) {... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":858:924  function __Context_init_unchained() internal initializer {... */\n    tag_124:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1024:1036  initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1024:1055  initializing || isConstructor() */\n      tag_151\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1040:1055  isConstructor() */\n      tag_151\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1040:1053  isConstructor */\n      tag_59\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1040:1055  isConstructor() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1024:1071  initializing || isConstructor() || !initialized */\n      dup1\n      tag_152\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1060:1071  initialized */\n      and(0xff, sload(0x00))\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1059:1071  !initialized */\n      iszero\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1024:1071  initializing || isConstructor() || !initialized */\n    tag_152:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1016:1122  require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1129:1148  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1152:1164  initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1151:1164  !initializing */\n      iszero\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1170:1250  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_125\n      jumpi\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1198:1210  initializing */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1198:1217  initializing = true */\n      dup1\n      sload\n      not(0xff)\n      not(0xff00)\n      swap1\n      swap2\n      and\n      0x0100\n      or\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1225:1243  initialized = true */\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1213:1217  true */\n      0x01\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1225:1243  initialized = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1268:1282  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1264:1319  if (isTopLevelCall) {... */\n      iszero\n      tag_127\n      jumpi\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1307:1312  false */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1292:1312  initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":858:924  function __Context_init_unchained() internal initializer {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":999:1194  function __Ownable_init_unchained() internal initializer {... */\n    tag_126:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1024:1036  initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1024:1055  initializing || isConstructor() */\n      tag_159\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1040:1055  isConstructor() */\n      tag_159\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1040:1053  isConstructor */\n      tag_59\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1040:1055  isConstructor() */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1024:1071  initializing || isConstructor() || !initialized */\n      dup1\n      tag_160\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1060:1071  initialized */\n      and(0xff, sload(0x00))\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1059:1071  !initialized */\n      iszero\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1024:1071  initializing || isConstructor() || !initialized */\n    tag_160:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1016:1122  require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1129:1148  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1152:1164  initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1151:1164  !initializing */\n      iszero\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1170:1250  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_162\n      jumpi\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1198:1210  initializing */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1198:1217  initializing = true */\n      dup1\n      sload\n      not(0xff)\n      not(0xff00)\n      swap1\n      swap2\n      and\n      0x0100\n      or\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1225:1243  initialized = true */\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1213:1217  true */\n      0x01\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1225:1243  initialized = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1170:1250  if (isTopLevelCall) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1068:1085  address msgSender */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1088:1100  _msgSender() */\n      tag_164\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1088:1098  _msgSender */\n      tag_80\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1088:1100  _msgSender() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1110:1116  _owner */\n      0x65\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1110:1128  _owner = msgSender */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1143:1186  OwnershipTransferred(address(0), msgSender) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1110:1128  _owner = msgSender */\n      swap2\n      swap3\n      pop\n      swap1\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":1143:1186  OwnershipTransferred(address(0), msgSender) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n      dup3\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1256:1257  _ */\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1268:1282  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1264:1319  if (isTopLevelCall) {... */\n      iszero\n      tag_127\n      jumpi\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1307:1312  false */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":1292:1312  initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":999:1194  function __Ownable_init_unchained() internal initializer {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1692:1879  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1778:1785  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1813:1825  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1805:1811  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1797:1826  require(b <= a, errorMessage) */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_168:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_170\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_168)\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_171\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_171:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1848:1853  a - b */\n      swap1\n      sub\n      swap1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1692:1879  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3638:3976  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3724:3731  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3824:3836  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3817:3822  b > 0 */\n      dup4\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3809:3837  require(b > 0, errorMessage) */\n      tag_173\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n      swap1\n      swap3\n      dup4\n      swap3\n      0x44\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n      dup4\n      iszero\n      tag_170\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_168)\n    tag_173:\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3847:3856  uint256 c */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3863:3864  b */\n      dup4\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3859:3860  a */\n      dup6\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3859:3864  a / b */\n      dup2\n      tag_178\n      jumpi\n      invalid\n    tag_178:\n      div\n      swap6\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3638:3976  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4 436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564\n\n    auxdata: 0xa2646970667358221220464cf6851d658e8b57a4350eef357d7e2ccc74bc124d46a38b6c47d4d56cd85b64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610ccb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c578063b9f9850a11610066578063b9f9850a14610203578063f14039de1461020b578063f2fde38b14610213578063fd2da33914610239576100cf565b80638da5cb5b146101a8578063a385fb96146101cc578063b8168816146101d4576100cf565b806315f24053146100d45780632037f3e71461010f57806360a2da44146101405780636e71e2d81461016f578063715018a6146101985780638726bb89146101a0575b600080fd5b6100fd600480360360608110156100ea57600080fd5b5080359060208101359060400135610241565b60408051918252519081900360200190f35b61013e6004803603608081101561012557600080fd5b5080359060208101359060408101359060600135610258565b005b61013e6004803603608081101561015657600080fd5b508035906020810135906040810135906060013561026a565b6100fd6004803603606081101561018557600080fd5b5080359060208101359060400135610324565b61013e610362565b6100fd610416565b6101b061041c565b604080516001600160a01b039092168252519081900360200190f35b6100fd61042b565b6100fd600480360360808110156101ea57600080fd5b5080359060208101359060408101359060600135610432565b6100fd610449565b6100fd61044f565b61013e6004803603602081101561022957600080fd5b50356001600160a01b0316610455565b6100fd610560565b600061024e848484610566565b90505b9392505050565b61026484848484610629565b50505050565b600054610100900460ff16806102835750610283610722565b80610291575060005460ff16155b6102cc5760405162461bcd60e51b815260040180806020018281038252602e815260200180610c68602e913960400191505060405180910390fd5b600054610100900460ff161580156102f7576000805460ff1961ff0019909116610100171660011790555b6102ff610728565b61030b85858585610629565b801561031d576000805461ff00191690555b5050505050565b60008261033357506000610251565b61024e61034a8361034487876107da565b9061083d565b61035c85670de0b6b3a764000061087f565b906108d8565b61036a61091a565b6065546001600160a01b039081169116146103cc576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6065546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3606580546001600160a01b0319169055565b60975481565b6065546001600160a01b031690565b62f099c081565b60006104408585858561091e565b95945050505050565b60995481565b60985481565b61045d61091a565b6065546001600160a01b039081169116146104bf576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166105045760405162461bcd60e51b8152600401808060200182810382526026815260200180610c216026913960400191505060405180910390fd5b6065546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3606580546001600160a01b0319166001600160a01b0392909216919091179055565b609a5481565b600080610574858585610324565b9050609a5481116105b4576105ac6098546105a6670de0b6b3a764000061035c6097548661087f90919063ffffffff16565b906107da565b915050610251565b60006105df6098546105a6670de0b6b3a764000061035c609754609a5461087f90919063ffffffff16565b905060006105f8609a548461083d90919063ffffffff16565b905061061f826105a6670de0b6b3a764000061035c6099548661087f90919063ffffffff16565b9350505050610251565b61063161091a565b6065546001600160a01b03908116911614610693576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6106a08462f099c06108d8565b6098556106b361034a62f099c08361087f565b6097556106c38262f099c06108d8565b6099819055609a829055609854609754604080519283526020830191909152818101929092526060810183905290517f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d9181900360800190a150505050565b303b1590565b600054610100900460ff16806107415750610741610722565b8061074f575060005460ff16155b61078a5760405162461bcd60e51b815260040180806020018281038252602e815260200180610c68602e913960400191505060405180910390fd5b600054610100900460ff161580156107b5576000805460ff1961ff0019909116610100171660011790555b6107bd61098b565b6107c5610a2b565b80156107d7576000805461ff00191690555b50565b600082820183811015610834576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b600061083483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610b24565b60008261088e57506000610837565b8282028284828161089b57fe5b04146108345760405162461bcd60e51b8152600401808060200182810382526021815260200180610c476021913960400191505060405180910390fd5b600061083483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610bbb565b3390565b600080610933670de0b6b3a76400008461083d565b90506000610942878787610566565b9050600061095c670de0b6b3a764000061035c848661087f565b905061097f670de0b6b3a764000061035c836109798c8c8c610324565b9061087f565b98975050505050505050565b600054610100900460ff16806109a457506109a4610722565b806109b2575060005460ff16155b6109ed5760405162461bcd60e51b815260040180806020018281038252602e815260200180610c68602e913960400191505060405180910390fd5b600054610100900460ff161580156107c5576000805460ff1961ff00199091166101001716600117905580156107d7576000805461ff001916905550565b600054610100900460ff1680610a445750610a44610722565b80610a52575060005460ff16155b610a8d5760405162461bcd60e51b815260040180806020018281038252602e815260200180610c68602e913960400191505060405180910390fd5b600054610100900460ff16158015610ab8576000805460ff1961ff0019909116610100171660011790555b6000610ac261091a565b606580546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156107d7576000805461ff001916905550565b60008184841115610bb35760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b78578181015183820152602001610b60565b50505050905090810190601f168015610ba55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008183610c0a5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610b78578181015183820152602001610b60565b506000838581610c1657fe5b049594505050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a2646970667358221220464cf6851d658e8b57a4350eef357d7e2ccc74bc124d46a38b6c47d4d56cd85b64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCCB DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB9F9850A GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB9F9850A EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0xF14039DE EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0xFD2DA339 EQ PUSH2 0x239 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xA385FB96 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0xB8168816 EQ PUSH2 0x1D4 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x15F24053 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x2037F3E7 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x60A2DA44 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x6E71E2D8 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x8726BB89 EQ PUSH2 0x1A0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x241 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x258 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x26A JUMP JUMPDEST PUSH2 0xFD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x324 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x362 JUMP JUMPDEST PUSH2 0xFD PUSH2 0x416 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xFD PUSH2 0x42B JUMP JUMPDEST PUSH2 0xFD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x432 JUMP JUMPDEST PUSH2 0xFD PUSH2 0x449 JUMP JUMPDEST PUSH2 0xFD PUSH2 0x44F JUMP JUMPDEST PUSH2 0x13E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x455 JUMP JUMPDEST PUSH2 0xFD PUSH2 0x560 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24E DUP5 DUP5 DUP5 PUSH2 0x566 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x264 DUP5 DUP5 DUP5 DUP5 PUSH2 0x629 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x283 JUMPI POP PUSH2 0x283 PUSH2 0x722 JUMP JUMPDEST DUP1 PUSH2 0x291 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x2CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC68 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0x2FF PUSH2 0x728 JUMP JUMPDEST PUSH2 0x30B DUP6 DUP6 DUP6 DUP6 PUSH2 0x629 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x333 JUMPI POP PUSH1 0x0 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x24E PUSH2 0x34A DUP4 PUSH2 0x344 DUP8 DUP8 PUSH2 0x7DA JUMP JUMPDEST SWAP1 PUSH2 0x83D JUMP JUMPDEST PUSH2 0x35C DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x87F JUMP JUMPDEST SWAP1 PUSH2 0x8D8 JUMP JUMPDEST PUSH2 0x36A PUSH2 0x91A JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x3CC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x97 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH3 0xF099C0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x440 DUP6 DUP6 DUP6 DUP6 PUSH2 0x91E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x99 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x98 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x45D PUSH2 0x91A JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x4BF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x504 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC21 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x574 DUP6 DUP6 DUP6 PUSH2 0x324 JUMP JUMPDEST SWAP1 POP PUSH1 0x9A SLOAD DUP2 GT PUSH2 0x5B4 JUMPI PUSH2 0x5AC PUSH1 0x98 SLOAD PUSH2 0x5A6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x35C PUSH1 0x97 SLOAD DUP7 PUSH2 0x87F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x7DA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x251 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DF PUSH1 0x98 SLOAD PUSH2 0x5A6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x35C PUSH1 0x97 SLOAD PUSH1 0x9A SLOAD PUSH2 0x87F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5F8 PUSH1 0x9A SLOAD DUP5 PUSH2 0x83D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x61F DUP3 PUSH2 0x5A6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x35C PUSH1 0x99 SLOAD DUP7 PUSH2 0x87F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x251 JUMP JUMPDEST PUSH2 0x631 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x693 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6A0 DUP5 PUSH3 0xF099C0 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x98 SSTORE PUSH2 0x6B3 PUSH2 0x34A PUSH3 0xF099C0 DUP4 PUSH2 0x87F JUMP JUMPDEST PUSH1 0x97 SSTORE PUSH2 0x6C3 DUP3 PUSH3 0xF099C0 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x99 DUP2 SWAP1 SSTORE PUSH1 0x9A DUP3 SWAP1 SSTORE PUSH1 0x98 SLOAD PUSH1 0x97 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x6960AB234C7EF4B0C9197100F5393CFCDE7C453AC910A27BD2000AA1DD4C068D SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x741 JUMPI POP PUSH2 0x741 PUSH2 0x722 JUMP JUMPDEST DUP1 PUSH2 0x74F JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x78A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC68 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x7B5 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0x7BD PUSH2 0x98B JUMP JUMPDEST PUSH2 0x7C5 PUSH2 0xA2B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D7 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x834 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x834 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x88E JUMPI POP PUSH1 0x0 PUSH2 0x837 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x89B JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x834 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC47 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x834 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0xBBB JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x933 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x83D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x942 DUP8 DUP8 DUP8 PUSH2 0x566 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x95C PUSH8 0xDE0B6B3A7640000 PUSH2 0x35C DUP5 DUP7 PUSH2 0x87F JUMP JUMPDEST SWAP1 POP PUSH2 0x97F PUSH8 0xDE0B6B3A7640000 PUSH2 0x35C DUP4 PUSH2 0x979 DUP13 DUP13 DUP13 PUSH2 0x324 JUMP JUMPDEST SWAP1 PUSH2 0x87F JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x9A4 JUMPI POP PUSH2 0x9A4 PUSH2 0x722 JUMP JUMPDEST DUP1 PUSH2 0x9B2 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x9ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC68 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x7C5 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x7D7 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xA44 JUMPI POP PUSH2 0xA44 PUSH2 0x722 JUMP JUMPDEST DUP1 PUSH2 0xA52 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xA8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC68 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xAB8 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 PUSH2 0xAC2 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x0 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP DUP1 ISZERO PUSH2 0x7D7 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xBB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB78 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB60 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xBA5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xC0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xB78 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB60 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0xC16 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373536166654D6174683A206D756C746970 PUSH13 0x69636174696F6E206F76657266 PUSH13 0x6F77436F6E747261637420696E PUSH20 0x74616E63652068617320616C7265616479206265 PUSH6 0x6E20696E6974 PUSH10 0x616C697A6564A2646970 PUSH7 0x7358221220464C 0xF6 DUP6 SAR PUSH6 0x8E8B57A4350E 0xEF CALLDATALOAD PUSH30 0x7E2CCC74BC124D46A38B6C47D4D56CD85B64736F6C634300060C00330000 ",
							"sourceMap": "224:326:6:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c578063b9f9850a11610066578063b9f9850a14610203578063f14039de1461020b578063f2fde38b14610213578063fd2da33914610239576100cf565b80638da5cb5b146101a8578063a385fb96146101cc578063b8168816146101d4576100cf565b806315f24053146100d45780632037f3e71461010f57806360a2da44146101405780636e71e2d81461016f578063715018a6146101985780638726bb89146101a0575b600080fd5b6100fd600480360360608110156100ea57600080fd5b5080359060208101359060400135610241565b60408051918252519081900360200190f35b61013e6004803603608081101561012557600080fd5b5080359060208101359060408101359060600135610258565b005b61013e6004803603608081101561015657600080fd5b508035906020810135906040810135906060013561026a565b6100fd6004803603606081101561018557600080fd5b5080359060208101359060400135610324565b61013e610362565b6100fd610416565b6101b061041c565b604080516001600160a01b039092168252519081900360200190f35b6100fd61042b565b6100fd600480360360808110156101ea57600080fd5b5080359060208101359060408101359060600135610432565b6100fd610449565b6100fd61044f565b61013e6004803603602081101561022957600080fd5b50356001600160a01b0316610455565b6100fd610560565b600061024e848484610566565b90505b9392505050565b61026484848484610629565b50505050565b600054610100900460ff16806102835750610283610722565b80610291575060005460ff16155b6102cc5760405162461bcd60e51b815260040180806020018281038252602e815260200180610c68602e913960400191505060405180910390fd5b600054610100900460ff161580156102f7576000805460ff1961ff0019909116610100171660011790555b6102ff610728565b61030b85858585610629565b801561031d576000805461ff00191690555b5050505050565b60008261033357506000610251565b61024e61034a8361034487876107da565b9061083d565b61035c85670de0b6b3a764000061087f565b906108d8565b61036a61091a565b6065546001600160a01b039081169116146103cc576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6065546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3606580546001600160a01b0319169055565b60975481565b6065546001600160a01b031690565b62f099c081565b60006104408585858561091e565b95945050505050565b60995481565b60985481565b61045d61091a565b6065546001600160a01b039081169116146104bf576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166105045760405162461bcd60e51b8152600401808060200182810382526026815260200180610c216026913960400191505060405180910390fd5b6065546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3606580546001600160a01b0319166001600160a01b0392909216919091179055565b609a5481565b600080610574858585610324565b9050609a5481116105b4576105ac6098546105a6670de0b6b3a764000061035c6097548661087f90919063ffffffff16565b906107da565b915050610251565b60006105df6098546105a6670de0b6b3a764000061035c609754609a5461087f90919063ffffffff16565b905060006105f8609a548461083d90919063ffffffff16565b905061061f826105a6670de0b6b3a764000061035c6099548661087f90919063ffffffff16565b9350505050610251565b61063161091a565b6065546001600160a01b03908116911614610693576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6106a08462f099c06108d8565b6098556106b361034a62f099c08361087f565b6097556106c38262f099c06108d8565b6099819055609a829055609854609754604080519283526020830191909152818101929092526060810183905290517f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d9181900360800190a150505050565b303b1590565b600054610100900460ff16806107415750610741610722565b8061074f575060005460ff16155b61078a5760405162461bcd60e51b815260040180806020018281038252602e815260200180610c68602e913960400191505060405180910390fd5b600054610100900460ff161580156107b5576000805460ff1961ff0019909116610100171660011790555b6107bd61098b565b6107c5610a2b565b80156107d7576000805461ff00191690555b50565b600082820183811015610834576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b600061083483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610b24565b60008261088e57506000610837565b8282028284828161089b57fe5b04146108345760405162461bcd60e51b8152600401808060200182810382526021815260200180610c476021913960400191505060405180910390fd5b600061083483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610bbb565b3390565b600080610933670de0b6b3a76400008461083d565b90506000610942878787610566565b9050600061095c670de0b6b3a764000061035c848661087f565b905061097f670de0b6b3a764000061035c836109798c8c8c610324565b9061087f565b98975050505050505050565b600054610100900460ff16806109a457506109a4610722565b806109b2575060005460ff16155b6109ed5760405162461bcd60e51b815260040180806020018281038252602e815260200180610c68602e913960400191505060405180910390fd5b600054610100900460ff161580156107c5576000805460ff1961ff00199091166101001716600117905580156107d7576000805461ff001916905550565b600054610100900460ff1680610a445750610a44610722565b80610a52575060005460ff16155b610a8d5760405162461bcd60e51b815260040180806020018281038252602e815260200180610c68602e913960400191505060405180910390fd5b600054610100900460ff16158015610ab8576000805460ff1961ff0019909116610100171660011790555b6000610ac261091a565b606580546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156107d7576000805461ff001916905550565b60008184841115610bb35760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b78578181015183820152602001610b60565b50505050905090810190601f168015610ba55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008183610c0a5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610b78578181015183820152602001610b60565b506000838581610c1657fe5b049594505050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a2646970667358221220464cf6851d658e8b57a4350eef357d7e2ccc74bc124d46a38b6c47d4d56cd85b64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB9F9850A GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB9F9850A EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0xF14039DE EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0xFD2DA339 EQ PUSH2 0x239 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xA385FB96 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0xB8168816 EQ PUSH2 0x1D4 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x15F24053 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x2037F3E7 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x60A2DA44 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x6E71E2D8 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x8726BB89 EQ PUSH2 0x1A0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x241 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x258 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x26A JUMP JUMPDEST PUSH2 0xFD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x324 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x362 JUMP JUMPDEST PUSH2 0xFD PUSH2 0x416 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xFD PUSH2 0x42B JUMP JUMPDEST PUSH2 0xFD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x432 JUMP JUMPDEST PUSH2 0xFD PUSH2 0x449 JUMP JUMPDEST PUSH2 0xFD PUSH2 0x44F JUMP JUMPDEST PUSH2 0x13E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x455 JUMP JUMPDEST PUSH2 0xFD PUSH2 0x560 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24E DUP5 DUP5 DUP5 PUSH2 0x566 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x264 DUP5 DUP5 DUP5 DUP5 PUSH2 0x629 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x283 JUMPI POP PUSH2 0x283 PUSH2 0x722 JUMP JUMPDEST DUP1 PUSH2 0x291 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x2CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC68 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0x2FF PUSH2 0x728 JUMP JUMPDEST PUSH2 0x30B DUP6 DUP6 DUP6 DUP6 PUSH2 0x629 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x333 JUMPI POP PUSH1 0x0 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x24E PUSH2 0x34A DUP4 PUSH2 0x344 DUP8 DUP8 PUSH2 0x7DA JUMP JUMPDEST SWAP1 PUSH2 0x83D JUMP JUMPDEST PUSH2 0x35C DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x87F JUMP JUMPDEST SWAP1 PUSH2 0x8D8 JUMP JUMPDEST PUSH2 0x36A PUSH2 0x91A JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x3CC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x97 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH3 0xF099C0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x440 DUP6 DUP6 DUP6 DUP6 PUSH2 0x91E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x99 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x98 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x45D PUSH2 0x91A JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x4BF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x504 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC21 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x574 DUP6 DUP6 DUP6 PUSH2 0x324 JUMP JUMPDEST SWAP1 POP PUSH1 0x9A SLOAD DUP2 GT PUSH2 0x5B4 JUMPI PUSH2 0x5AC PUSH1 0x98 SLOAD PUSH2 0x5A6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x35C PUSH1 0x97 SLOAD DUP7 PUSH2 0x87F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x7DA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x251 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DF PUSH1 0x98 SLOAD PUSH2 0x5A6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x35C PUSH1 0x97 SLOAD PUSH1 0x9A SLOAD PUSH2 0x87F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5F8 PUSH1 0x9A SLOAD DUP5 PUSH2 0x83D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x61F DUP3 PUSH2 0x5A6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x35C PUSH1 0x99 SLOAD DUP7 PUSH2 0x87F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x251 JUMP JUMPDEST PUSH2 0x631 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x693 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6A0 DUP5 PUSH3 0xF099C0 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x98 SSTORE PUSH2 0x6B3 PUSH2 0x34A PUSH3 0xF099C0 DUP4 PUSH2 0x87F JUMP JUMPDEST PUSH1 0x97 SSTORE PUSH2 0x6C3 DUP3 PUSH3 0xF099C0 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x99 DUP2 SWAP1 SSTORE PUSH1 0x9A DUP3 SWAP1 SSTORE PUSH1 0x98 SLOAD PUSH1 0x97 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x6960AB234C7EF4B0C9197100F5393CFCDE7C453AC910A27BD2000AA1DD4C068D SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x741 JUMPI POP PUSH2 0x741 PUSH2 0x722 JUMP JUMPDEST DUP1 PUSH2 0x74F JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x78A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC68 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x7B5 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0x7BD PUSH2 0x98B JUMP JUMPDEST PUSH2 0x7C5 PUSH2 0xA2B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D7 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x834 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x834 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x88E JUMPI POP PUSH1 0x0 PUSH2 0x837 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x89B JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x834 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC47 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x834 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0xBBB JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x933 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x83D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x942 DUP8 DUP8 DUP8 PUSH2 0x566 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x95C PUSH8 0xDE0B6B3A7640000 PUSH2 0x35C DUP5 DUP7 PUSH2 0x87F JUMP JUMPDEST SWAP1 POP PUSH2 0x97F PUSH8 0xDE0B6B3A7640000 PUSH2 0x35C DUP4 PUSH2 0x979 DUP13 DUP13 DUP13 PUSH2 0x324 JUMP JUMPDEST SWAP1 PUSH2 0x87F JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x9A4 JUMPI POP PUSH2 0x9A4 PUSH2 0x722 JUMP JUMPDEST DUP1 PUSH2 0x9B2 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x9ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC68 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x7C5 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x7D7 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xA44 JUMPI POP PUSH2 0xA44 PUSH2 0x722 JUMP JUMPDEST DUP1 PUSH2 0xA52 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xA8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC68 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xAB8 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 PUSH2 0xAC2 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x0 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP DUP1 ISZERO PUSH2 0x7D7 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xBB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB78 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB60 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xBA5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xC0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xB78 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB60 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0xC16 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373536166654D6174683A206D756C746970 PUSH13 0x69636174696F6E206F76657266 PUSH13 0x6F77436F6E747261637420696E PUSH20 0x74616E63652068617320616C7265616479206265 PUSH6 0x6E20696E6974 PUSH10 0x616C697A6564A2646970 PUSH7 0x7358221220464C 0xF6 DUP6 SAR PUSH6 0x8E8B57A4350E 0xEF CALLDATALOAD PUSH30 0x7E2CCC74BC124D46A38B6C47D4D56CD85B64736F6C634300060C00330000 ",
							"sourceMap": "224:326:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5633:179:4;;;;;;;;;;;;;;;;-1:-1:-1;5633:179:4;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3485:234;;;;;;;;;;;;;;;;-1:-1:-1;3485:234:4;;;;;;;;;;;;;;;;;:::i;:::-;;275:273:6;;;;;;;;;;;;;;;;-1:-1:-1;275:273:6;;;;;;;;;;;;;;;;;:::i;4100:290:4:-;;;;;;;;;;;;;;;;-1:-1:-1;4100:290:4;;;;;;;;;;;;:::i;1894:145:2:-;;;:::i;2550:30:4:-;;;:::i;1271:77:2:-;;;:::i;:::-;;;;-1:-1:-1;;;;;1271:77:2;;;;;;;;;;;;;;2390:45:4;;;:::i;6674:230::-;;;;;;;;;;;;;;;;-1:-1:-1;6674:230:4;;;;;;;;;;;;;;;;;:::i;2826:34::-;;;:::i;2693:28::-;;;:::i;2188:240:2:-;;;;;;;;;;;;;;;;-1:-1:-1;2188:240:2;-1:-1:-1;;;;;2188:240:2;;:::i;2960:16:4:-;;;:::i;5633:179::-;5736:4;5759:46;5781:4;5787:7;5796:8;5759:21;:46::i;:::-;5752:53;;5633:179;;;;;;:::o;3485:234::-;3619:93;3647:15;3664:17;3683:21;3706:5;3619:27;:93::i;:::-;3485:234;;;;:::o;275:273:6:-;1024:12:1;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:1;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:1;;;;;1225:18;1213:4;1225:18;;;1170:80;410:22:6::1;:20;:22::i;:::-;442:99;476:15;493:17;512:21;535:5;442:33;:99::i;:::-;1268:14:1::0;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:1;;;1264:55;275:273:6;;;;;:::o;4100:290:4:-;4186:4;4265:12;4261:51;;-1:-1:-1;4300:1:4;4293:8;;4261:51;4329:54;4351:31;4373:8;4351:17;:4;4360:7;4351:8;:17::i;:::-;:21;;:31::i;:::-;4329:17;:7;4341:4;4329:11;:17::i;:::-;:21;;:54::i;1894:145:2:-;1485:12;:10;:12::i;:::-;1475:6;;-1:-1:-1;;;;;1475:6:2;;;:22;;;1467:67;;;;;-1:-1:-1;;;1467:67:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1984:6:::1;::::0;1963:40:::1;::::0;2000:1:::1;::::0;-1:-1:-1;;;;;1984:6:2::1;::::0;1963:40:::1;::::0;2000:1;;1963:40:::1;2013:6;:19:::0;;-1:-1:-1;;;;;;2013:19:2::1;::::0;;1894:145::o;2550:30:4:-;;;;:::o;1271:77:2:-;1335:6;;-1:-1:-1;;;;;1335:6:2;1271:77;:::o;2390:45:4:-;2427:8;2390:45;:::o;6674:230::-;6805:4;6828:69;6850:4;6856:7;6865:8;6875:21;6828;:69::i;:::-;6821:76;6674:230;-1:-1:-1;;;;;6674:230:4:o;2826:34::-;;;;:::o;2693:28::-;;;;:::o;2188:240:2:-;1485:12;:10;:12::i;:::-;1475:6;;-1:-1:-1;;;;;1475:6:2;;;:22;;;1467:67;;;;;-1:-1:-1;;;1467:67:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2276:22:2;::::1;2268:73;;;;-1:-1:-1::0;;;2268:73:2::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2377:6;::::0;2356:38:::1;::::0;-1:-1:-1;;;;;2356:38:2;;::::1;::::0;2377:6:::1;::::0;2356:38:::1;::::0;2377:6:::1;::::0;2356:38:::1;2404:6;:17:::0;;-1:-1:-1;;;;;;2404:17:2::1;-1:-1:-1::0;;;;;2404:17:2;;;::::1;::::0;;;::::1;::::0;;2188:240::o;2960:16:4:-;;;;:::o;4769:529::-;4863:4;4879:9;4891:40;4907:4;4913:7;4922:8;4891:15;:40::i;:::-;4879:52;;4954:4;;4946;:12;4942:350;;4981:60;5024:16;;4981:38;5014:4;4981:28;4990:18;;4981:4;:8;;:28;;;;:::i;:38::-;:42;;:60::i;:::-;4974:67;;;;;4942:350;5072:15;5090:60;5133:16;;5090:38;5123:4;5090:28;5099:18;;5090:4;;:8;;:28;;;;:::i;:60::-;5072:78;;5164:15;5182:14;5191:4;;5182;:8;;:14;;;;:::i;:::-;5164:32;;5217:64;5270:10;5217:48;5260:4;5217:38;5232:22;;5217:10;:14;;:38;;;;:::i;:64::-;5210:71;;;;;;;7393:500;1485:12:2;:10;:12::i;:::-;1475:6;;-1:-1:-1;;;;;1475:6:2;;;:22;;;1467:67;;;;;-1:-1:-1;;;1467:67:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7564:34:4::1;:15:::0;2427:8:::1;7564:19;:34::i;:::-;7545:16;:53:::0;7629:59:::1;7663:24;2427:8;7681:5:::0;7663:17:::1;:24::i;7629:59::-;7608:18;:80:::0;7723:40:::1;:21:::0;2427:8:::1;7723:25;:40::i;:::-;7698:22;:65:::0;;;7773:4:::1;:12:::0;;;7819:16:::1;::::0;7837:18:::1;::::0;7801:85:::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;;;;;::::1;::::0;;;;;;;::::1;7393:500:::0;;;;:::o;1409:498:1:-;1820:4;1864:17;1895:7;1409:498;:::o;867:126:2:-;1024:12:1;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:1;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:1;;;;;1225:18;1213:4;1225:18;;;1170:80;924:26:2::1;:24;:26::i;:::-;960;:24;:26::i;:::-;1268:14:1::0;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:1;;;1264:55;867:126:2;:::o;834:176:3:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;-1:-1:-1;834:176:3;;;;;:::o;1274:134::-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;2119:459::-;2177:7;2418:6;2414:45;;-1:-1:-1;2447:1:3;2440:8;;2414:45;2481:5;;;2485:1;2481;:5;:1;2504:5;;;;;:10;2496:56;;;;-1:-1:-1;;;2496:56:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3033:130;3091:7;3117:39;3121:1;3124;3117:39;;;;;;;;;;;;;;;;;:3;:39::i;931:104:0:-;1018:10;931:104;:::o;5819:443:4:-;5941:4;;5986:37;5991:4;6001:21;5986:14;:37::i;:::-;5957:66;;6033:15;6051:46;6073:4;6079:7;6088:8;6051:21;:46::i;:::-;6033:64;-1:-1:-1;6107:15:4;6125:47;6167:4;6125:37;6033:64;6140:21;6125:14;:37::i;:47::-;6107:65;;6189:66;6250:4;6189:56;6234:10;6189:40;6205:4;6211:7;6220:8;6189:15;:40::i;:::-;:44;;:56::i;:66::-;6182:73;5819:443;-1:-1:-1;;;;;;;;5819:443:4:o;858:66:0:-;1024:12:1;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:1;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:1;;;;;1225:18;1213:4;1225:18;;;1268:14;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:1;;;858:66:0;:::o;999:195:2:-;1024:12:1;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:1;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:1;;;;;1225:18;1213:4;1225:18;;;1170:80;1068:17:2::1;1088:12;:10;:12::i;:::-;1110:6;:18:::0;;-1:-1:-1;;;;;;1110:18:2::1;-1:-1:-1::0;;;;;1110:18:2;::::1;::::0;;::::1;::::0;;;1143:43:::1;::::0;1110:18;;-1:-1:-1;1110:18:2;-1:-1:-1;;1143:43:2::1;::::0;-1:-1:-1;;1143:43:2::1;1256:1:1;1268:14:::0;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:1;;;999:195:2;:::o;1692:187:3:-;1778:7;1813:12;1805:6;;;;1797:29;;;;-1:-1:-1;;;1797:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1848:5:3;;;1692:187::o;3638:338::-;3724:7;3824:12;3817:5;3809:28;;;;-1:-1:-1;;;3809:28:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3847:9;3863:1;3859;:5;;;;;;;3638:338;-1:-1:-1;;;;;3638:338:3:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "655000",
								"executionCost": "689",
								"totalCost": "655689"
							},
							"external": {
								"baseRatePerBlock()": "1042",
								"blocksPerYear()": "243",
								"getBorrowRate(uint256,uint256,uint256)": "infinite",
								"getSupplyRate(uint256,uint256,uint256,uint256)": "infinite",
								"initialize(uint256,uint256,uint256,uint256)": "infinite",
								"jumpMultiplierPerBlock()": "1020",
								"kink()": "1086",
								"multiplierPerBlock()": "1109",
								"owner()": "1060",
								"renounceOwnership()": "24290",
								"transferOwnership(address)": "infinite",
								"updateJumpRateModel(uint256,uint256,uint256,uint256)": "infinite",
								"utilizationRate(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 550,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 224,
									"end": 550,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 224,
									"end": 550,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 224,
									"end": 550,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 224,
									"end": 550,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 224,
									"end": 550,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 224,
									"end": 550,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 224,
									"end": 550,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 224,
									"end": 550,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 550,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 224,
									"end": 550,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 224,
									"end": 550,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 224,
									"end": 550,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 224,
									"end": 550,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 224,
									"end": 550,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 550,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 224,
									"end": 550,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 550,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 550,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 224,
									"end": 550,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 550,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220464cf6851d658e8b57a4350eef357d7e2ccc74bc124d46a38b6c47d4d56cd85b64736f6c634300060c0033",
									".code": [
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH",
											"source": 6,
											"value": "B9F9850A"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH",
											"source": 6,
											"value": "B9F9850A"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH",
											"source": 6,
											"value": "F14039DE"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH",
											"source": 6,
											"value": "FD2DA339"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH",
											"source": 6,
											"value": "A385FB96"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH",
											"source": 6,
											"value": "B8168816"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH",
											"source": 6,
											"value": "15F24053"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH",
											"source": 6,
											"value": "2037F3E7"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH",
											"source": 6,
											"value": "60A2DA44"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH",
											"source": 6,
											"value": "6E71E2D8"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH",
											"source": 6,
											"value": "8726BB89"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 550,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 275,
											"end": 548,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 275,
											"end": 548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 275,
											"end": 548,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 275,
											"end": 548,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 275,
											"end": 548,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 275,
											"end": 548,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 548,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 275,
											"end": 548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 275,
											"end": 548,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 275,
											"end": 548,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 275,
											"end": 548,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 275,
											"end": 548,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 275,
											"end": 548,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1894,
											"end": 2039,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1894,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1894,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1894,
											"end": 2039,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2550,
											"end": 2580,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2550,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2550,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2550,
											"end": 2580,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2435,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2390,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2390,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2390,
											"end": 2435,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2693,
											"end": 2721,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2693,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2693,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2693,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2693,
											"end": 2721,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2960,
											"end": 2976,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2960,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2960,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2960,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2960,
											"end": 2976,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5736,
											"end": 5740,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5759,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 5781,
											"end": 5785,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5787,
											"end": 5794,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5796,
											"end": 5804,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5759,
											"end": 5780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 5759,
											"end": 5805,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5759,
											"end": 5805,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 5759,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5752,
											"end": 5805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5752,
											"end": 5805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5812,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3647,
											"end": 3662,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3664,
											"end": 3681,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3683,
											"end": 3704,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3706,
											"end": 3711,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3619,
											"end": 3712,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3619,
											"end": 3712,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3619,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3719,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 275,
											"end": 548,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 275,
											"end": 548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1040,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1071,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH data",
											"source": 1,
											"value": "9FBBA6C4DCAC9134893B633B9564F36435B3F927C1D5FA152C5C14B20CECB1A4"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1148,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1210,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 410,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 410,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 410,
											"end": 432,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 410,
											"end": 432,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 410,
											"end": 432,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 442,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 476,
											"end": 491,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 493,
											"end": 510,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 512,
											"end": 533,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 535,
											"end": 540,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 442,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 442,
											"end": 541,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 442,
											"end": 541,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 442,
											"end": 541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1282,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 275,
											"end": 548,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 275,
											"end": 548,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4100,
											"end": 4390,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4186,
											"end": 4190,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4265,
											"end": 4277,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4261,
											"end": 4312,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4300,
											"end": 4301,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4293,
											"end": 4301,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4312,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4261,
											"end": 4312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4329,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4351,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4373,
											"end": 4381,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4351,
											"end": 4355,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4360,
											"end": 4367,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4351,
											"end": 4368,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4351,
											"end": 4368,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4351,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4372,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 4351,
											"end": 4382,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4351,
											"end": 4382,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4351,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4329,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 4329,
											"end": 4336,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4341,
											"end": 4345,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4329,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4329,
											"end": 4346,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4329,
											"end": 4346,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 4329,
											"end": 4346,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4329,
											"end": 4350,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4329,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4329,
											"end": 4383,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1894,
											"end": 2039,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1894,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1485,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2003,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1963,
											"end": 2003,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2003,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2013,
											"end": 2019,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 2039,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2550,
											"end": 2580,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2550,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2580,
											"name": "PUSH",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2550,
											"end": 2580,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2580,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2580,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2390,
											"end": 2435,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2390,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2435,
											"name": "PUSH",
											"source": 4,
											"value": "F099C0"
										},
										{
											"begin": 2390,
											"end": 2435,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2435,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6805,
											"end": 6809,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 6850,
											"end": 6854,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6856,
											"end": 6863,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6865,
											"end": 6873,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6875,
											"end": 6896,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6828,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 6828,
											"end": 6897,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6828,
											"end": 6897,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 6828,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6821,
											"end": 6897,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6674,
											"end": 6904,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "PUSH",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2693,
											"end": 2721,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2693,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2693,
											"end": 2721,
											"name": "PUSH",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2693,
											"end": 2721,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2693,
											"end": 2721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2693,
											"end": 2721,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1485,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2276,
											"end": 2298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2298,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH data",
											"source": 2,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2268,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2410,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2428,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2960,
											"end": 2976,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2960,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2960,
											"end": 2976,
											"name": "PUSH",
											"source": 4,
											"value": "9A"
										},
										{
											"begin": 2960,
											"end": 2976,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2960,
											"end": 2976,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2960,
											"end": 2976,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4769,
											"end": 5298,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4769,
											"end": 5298,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4888,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4891,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 4907,
											"end": 4911,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4913,
											"end": 4920,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4922,
											"end": 4930,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4891,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4891,
											"end": 4931,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4891,
											"end": 4931,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 4891,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4931,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4931,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4954,
											"end": 4958,
											"name": "PUSH",
											"source": 4,
											"value": "9A"
										},
										{
											"begin": 4954,
											"end": 4958,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4946,
											"end": 4950,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4946,
											"end": 4958,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4942,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 4942,
											"end": 5292,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 5024,
											"end": 5040,
											"name": "PUSH",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5024,
											"end": 5040,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 5014,
											"end": 5018,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4981,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "PUSH",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 4985,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 4989,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4981,
											"end": 4989,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 5009,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 5009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 5009,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4981,
											"end": 5009,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 5009,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4981,
											"end": 5019,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 4981,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 5023,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4981,
											"end": 5041,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4981,
											"end": 5041,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 4981,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 5041,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 5041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 5041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4974,
											"end": 5041,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4942,
											"end": 5292,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 4942,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5072,
											"end": 5087,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5090,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 5133,
											"end": 5149,
											"name": "PUSH",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5133,
											"end": 5149,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5090,
											"end": 5128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 5123,
											"end": 5127,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5090,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 5099,
											"end": 5117,
											"name": "PUSH",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 5099,
											"end": 5117,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5090,
											"end": 5094,
											"name": "PUSH",
											"source": 4,
											"value": "9A"
										},
										{
											"begin": 5090,
											"end": 5094,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5090,
											"end": 5098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 5090,
											"end": 5098,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5090,
											"end": 5118,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5090,
											"end": 5118,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5090,
											"end": 5118,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5090,
											"end": 5118,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5090,
											"end": 5118,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5090,
											"end": 5150,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 5090,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5072,
											"end": 5150,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5072,
											"end": 5150,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5164,
											"end": 5179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5182,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 5191,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "9A"
										},
										{
											"begin": 5191,
											"end": 5195,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5186,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 5182,
											"end": 5190,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5196,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5196,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5196,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5182,
											"end": 5196,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5196,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5182,
											"end": 5196,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 5182,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5164,
											"end": 5196,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5164,
											"end": 5196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 5270,
											"end": 5280,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 5260,
											"end": 5264,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5217,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 5232,
											"end": 5254,
											"name": "PUSH",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 5232,
											"end": 5254,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5227,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 5217,
											"end": 5231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5255,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5255,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5255,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5217,
											"end": 5255,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5255,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5217,
											"end": 5281,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 5217,
											"end": 5281,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7393,
											"end": 7893,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 7393,
											"end": 7893,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1485,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1467,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7564,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 7564,
											"end": 7579,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2435,
											"name": "PUSH",
											"source": 4,
											"value": "F099C0"
										},
										{
											"begin": 7564,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 7564,
											"end": 7598,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7564,
											"end": 7598,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 7564,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7561,
											"name": "PUSH",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 7545,
											"end": 7598,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7629,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 7663,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2427,
											"end": 2435,
											"name": "PUSH",
											"source": 4,
											"value": "F099C0"
										},
										{
											"begin": 7681,
											"end": 7686,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7663,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 7663,
											"end": 7687,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7629,
											"end": 7688,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 7629,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7608,
											"end": 7626,
											"name": "PUSH",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 7608,
											"end": 7688,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7723,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 7723,
											"end": 7744,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2435,
											"name": "PUSH",
											"source": 4,
											"value": "F099C0"
										},
										{
											"begin": 7723,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 7723,
											"end": 7763,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7723,
											"end": 7763,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 7723,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7698,
											"end": 7720,
											"name": "PUSH",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 7698,
											"end": 7763,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7698,
											"end": 7763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7698,
											"end": 7763,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7773,
											"end": 7777,
											"name": "PUSH",
											"source": 4,
											"value": "9A"
										},
										{
											"begin": 7773,
											"end": 7785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7773,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7773,
											"end": 7785,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7819,
											"end": 7835,
											"name": "PUSH",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 7819,
											"end": 7835,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7837,
											"end": 7855,
											"name": "PUSH",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 7837,
											"end": 7855,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "PUSH",
											"source": 4,
											"value": "6960AB234C7EF4B0C9197100F5393CFCDE7C453AC910A27BD2000AA1DD4C068D"
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7886,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 7393,
											"end": 7893,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7393,
											"end": 7893,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7393,
											"end": 7893,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7393,
											"end": 7893,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7393,
											"end": 7893,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1409,
											"end": 1907,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1409,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1824,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1881,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1902,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1907,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 867,
											"end": 993,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 867,
											"end": 993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1040,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1071,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH data",
											"source": 1,
											"value": "9FBBA6C4DCAC9134893B633B9564F36435B3F927C1D5FA152C5C14B20CECB1A4"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1148,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1210,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 924,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 924,
											"end": 950,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 924,
											"end": 950,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 924,
											"end": 950,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 960,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 960,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 960,
											"end": 986,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 960,
											"end": 986,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 960,
											"end": 986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1282,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 867,
											"end": 993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 867,
											"end": 993,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 923,
											"end": 928,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 923,
											"end": 928,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 946,
											"end": 952,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 946,
											"end": 952,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 946,
											"end": 952,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 946,
											"end": 952,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 3,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1003,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1362,
											"end": 1363,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "1E"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2119,
											"end": 2578,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2119,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2184,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2424,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2414,
											"end": 2459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2414,
											"end": 2459,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2447,
											"end": 2448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2440,
											"end": 2448,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2414,
											"end": 2459,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2414,
											"end": 2459,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2485,
											"end": 2486,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2482,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2482,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2504,
											"end": 2509,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2509,
											"name": "INVALID",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2509,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2504,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2509,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2514,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "PUSH data",
											"source": 3,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3033,
											"end": 3163,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3033,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3091,
											"end": 3098,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 3121,
											"end": 3122,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH",
											"source": 3,
											"value": "1A"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH",
											"source": 3,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3117,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 931,
											"end": 1035,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 931,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1028,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 931,
											"end": 1035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 931,
											"end": 1035,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5819,
											"end": 6262,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 5819,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5941,
											"end": 5945,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5941,
											"end": 5945,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5986,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 5991,
											"end": 5995,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6001,
											"end": 6022,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5986,
											"end": 6000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 5986,
											"end": 6023,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5986,
											"end": 6023,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 5986,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5957,
											"end": 6023,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5957,
											"end": 6023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6048,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6051,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 6073,
											"end": 6077,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6079,
											"end": 6086,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6088,
											"end": 6096,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6051,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 6051,
											"end": 6097,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6051,
											"end": 6097,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 6051,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6097,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6107,
											"end": 6122,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6125,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 6167,
											"end": 6171,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6125,
											"end": 6162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 6033,
											"end": 6097,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6140,
											"end": 6161,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6125,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 6125,
											"end": 6162,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6125,
											"end": 6172,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 6125,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6107,
											"end": 6172,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6107,
											"end": 6172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6189,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 6250,
											"end": 6254,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6189,
											"end": 6245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 6234,
											"end": 6244,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6189,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 6205,
											"end": 6209,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6218,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 6220,
											"end": 6228,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 6189,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 6189,
											"end": 6229,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6189,
											"end": 6229,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 6189,
											"end": 6229,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6189,
											"end": 6233,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6189,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 6189,
											"end": 6245,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6189,
											"end": 6255,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 6189,
											"end": 6255,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6182,
											"end": 6255,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 5819,
											"end": 6262,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5819,
											"end": 6262,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 858,
											"end": 924,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 858,
											"end": 924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1040,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1071,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH data",
											"source": 1,
											"value": "9FBBA6C4DCAC9134893B633B9564F36435B3F927C1D5FA152C5C14B20CECB1A4"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1148,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1210,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1282,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 858,
											"end": 924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 858,
											"end": 924,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 999,
											"end": 1194,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 999,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1040,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1071,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH data",
											"source": 1,
											"value": "9FBBA6C4DCAC9134893B633B9564F36435B3F927C1D5FA152C5C14B20CECB1A4"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1148,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1210,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1088,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 1088,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1088,
											"end": 1100,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1088,
											"end": 1100,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 1088,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1110,
											"end": 1128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1128,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1110,
											"end": 1128,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1110,
											"end": 1128,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1128,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1128,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1128,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1186,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1143,
											"end": 1186,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1128,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1110,
											"end": 1128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1143,
											"end": 1186,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1143,
											"end": 1186,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1143,
											"end": 1186,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 1256,
											"end": 1257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1282,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1194,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1778,
											"end": 1785,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1848,
											"end": 1853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1848,
											"end": 1853,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1848,
											"end": 1853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3638,
											"end": 3976,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3638,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3724,
											"end": 3731,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 3836,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3817,
											"end": 3822,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3847,
											"end": 3856,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3864,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3859,
											"end": 3860,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "INVALID",
											"source": 3
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3976,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3976,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"9FBBA6C4DCAC9134893B633B9564F36435B3F927C1D5FA152C5C14B20CECB1A4": "436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"baseRatePerBlock()": "f14039de",
							"blocksPerYear()": "a385fb96",
							"getBorrowRate(uint256,uint256,uint256)": "15f24053",
							"getSupplyRate(uint256,uint256,uint256,uint256)": "b8168816",
							"initialize(uint256,uint256,uint256,uint256)": "60a2da44",
							"jumpMultiplierPerBlock()": "b9f9850a",
							"kink()": "fd2da339",
							"multiplierPerBlock()": "8726bb89",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"updateJumpRateModel(uint256,uint256,uint256,uint256)": "2037f3e7",
							"utilizationRate(uint256,uint256,uint256)": "6e71e2d8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseRatePerBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"multiplierPerBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"jumpMultiplierPerBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"}],\"name\":\"NewInterestParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"baseRatePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blocksPerYear\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrows\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserves\",\"type\":\"uint256\"}],\"name\":\"getBorrowRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrows\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveFactorMantissa\",\"type\":\"uint256\"}],\"name\":\"getSupplyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"baseRatePerYear\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"multiplierPerYear\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"jumpMultiplierPerYear\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"jumpMultiplierPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kink\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"multiplierPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"baseRatePerYear\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"multiplierPerYear\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"jumpMultiplierPerYear\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink_\",\"type\":\"uint256\"}],\"name\":\"updateJumpRateModel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrows\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserves\",\"type\":\"uint256\"}],\"name\":\"utilizationRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Arr00\",\"kind\":\"dev\",\"methods\":{\"getBorrowRate(uint256,uint256,uint256)\":{\"params\":{\"borrows\":\"The amount of borrows in the market\",\"cash\":\"The amount of cash in the market\",\"reserves\":\"The amount of reserves in the market\"},\"returns\":{\"_0\":\"The borrow rate percentage per block as a mantissa (scaled by 1e18)\"}},\"getSupplyRate(uint256,uint256,uint256,uint256)\":{\"params\":{\"borrows\":\"The amount of borrows in the market\",\"cash\":\"The amount of cash in the market\",\"reserveFactorMantissa\":\"The current reserve factor for the market\",\"reserves\":\"The amount of reserves in the market\"},\"returns\":{\"_0\":\"The supply rate percentage per block as a mantissa (scaled by 1e18)\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateJumpRateModel(uint256,uint256,uint256,uint256)\":{\"params\":{\"baseRatePerYear\":\"The approximate target base APR, as a mantissa (scaled by 1e18)\",\"jumpMultiplierPerYear\":\"The multiplierPerBlock after hitting a specified utilization point\",\"kink_\":\"The utilization point at which the jump multiplier is applied\",\"multiplierPerYear\":\"The rate of increase in interest rate wrt utilization (scaled by 1e18)\"}},\"utilizationRate(uint256,uint256,uint256)\":{\"params\":{\"borrows\":\"The amount of borrows in the market\",\"cash\":\"The amount of cash in the market\",\"reserves\":\"The amount of reserves in the market (currently unused)\"},\"returns\":{\"_0\":\"The utilization rate as a mantissa between [0, 1e18]\"}}},\"title\":\"Compound's JumpRateModel Contract V2 for V2 cTokens\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"baseRatePerBlock()\":{\"notice\":\"The base interest rate which is the y-intercept when utilization rate is 0\"},\"blocksPerYear()\":{\"notice\":\"The approximate number of blocks per year that is assumed by the interest rate model\"},\"getBorrowRate(uint256,uint256,uint256)\":{\"notice\":\"Calculates the current borrow rate per block\"},\"getSupplyRate(uint256,uint256,uint256,uint256)\":{\"notice\":\"Calculates the current supply rate per block\"},\"jumpMultiplierPerBlock()\":{\"notice\":\"The multiplierPerBlock after hitting a specified utilization point\"},\"kink()\":{\"notice\":\"The utilization point at which the jump multiplier is applied\"},\"multiplierPerBlock()\":{\"notice\":\"The multiplier of utilization rate that gives the slope of the interest rate\"},\"updateJumpRateModel(uint256,uint256,uint256,uint256)\":{\"notice\":\"Update the parameters of the interest rate model (only callable by owner, i.e. Timelock)\"},\"utilizationRate(uint256,uint256,uint256)\":{\"notice\":\"Calculates the utilization rate of the market: `borrows / (cash + borrows - reserves)`\"}},\"notice\":\"Supports only for V2 cTokens\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"rate/JumpRateModel.sol\":\"JumpRateModel\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0xe81686511d62f18b2d9c693c2c94c0a789c690de63aa90e15451ebf65c5bfd3e\",\"urls\":[\"bzz-raw://1332ee1d2b096456bf2e5795b5871d0fed47be6a31c9a2f2cef9206a299565ea\",\"dweb:/ipfs/Qmdu1847Y4UL3gTjbLUManMGfxYEoyGPSodM3Br89SKzwx\"]},\"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":{\"keccak256\":\"0x04a69a78363214b4e3055db8e620bed222349f0c81e9d1cbe769eb849b69b73f\",\"urls\":[\"bzz-raw://b3115459376196d6c2c3817439c169d9b052b27b70e8ee2e28963cda760736da\",\"dweb:/ipfs/QmXaNF5rmcDSAzBiFMQjf979qb9xNXqD9eZtgo4uM9VEis\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"rate/BaseJumpRateModel.sol\":{\"keccak256\":\"0xa4c8ea5fc74bbc9dc0baf62cfcc4f8001b82f4b5260c981d069637128d39efa3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa51a37550330a8d8ad5c316f602a07751958093eb10377a9359f49d882a82ce\",\"dweb:/ipfs/Qma435Cs8gUpvgFhoKcgb656Q7r98e3rhCr6nxbfJHMVtG\"]},\"rate/IInterestRateModel.sol\":{\"keccak256\":\"0x2966eac6888c8dc2a8aadef2e30de55be0d28e9e4960afdfc7d6b81dc18480bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e323b32256b207682d1379149e9200eb318fa76e423a164524e0adc63473d3a9\",\"dweb:/ipfs/Qme5dfdoGV9jaB6Ay6krLPTmaavtmCFBexBSjeUhq8YpSC\"]},\"rate/JumpRateModel.sol\":{\"keccak256\":\"0xc521eb8c54396a57cbec6efd33b198540b5be158c3ff1a3f3ab2443731717fc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99a4ea49cf3a0da28246b8937600611169112c6d74fba7b5811ef6d11d39d9d1\",\"dweb:/ipfs/QmSX5DEXFz7setJwcS21gYPfpPLsMnqASCTtFM6KRx7zAC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 50,
								"contract": "rate/JumpRateModel.sol:JumpRateModel",
								"label": "initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 53,
								"contract": "rate/JumpRateModel.sol:JumpRateModel",
								"label": "initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 118,
								"contract": "rate/JumpRateModel.sol:JumpRateModel",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 43,
								"contract": "rate/JumpRateModel.sol:JumpRateModel",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 130,
								"contract": "rate/JumpRateModel.sol:JumpRateModel",
								"label": "_owner",
								"offset": 0,
								"slot": "101",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "rate/JumpRateModel.sol:JumpRateModel",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 475,
								"contract": "rate/JumpRateModel.sol:JumpRateModel",
								"label": "multiplierPerBlock",
								"offset": 0,
								"slot": "151",
								"type": "t_uint256"
							},
							{
								"astId": 478,
								"contract": "rate/JumpRateModel.sol:JumpRateModel",
								"label": "baseRatePerBlock",
								"offset": 0,
								"slot": "152",
								"type": "t_uint256"
							},
							{
								"astId": 481,
								"contract": "rate/JumpRateModel.sol:JumpRateModel",
								"label": "jumpMultiplierPerBlock",
								"offset": 0,
								"slot": "153",
								"type": "t_uint256"
							},
							{
								"astId": 484,
								"contract": "rate/JumpRateModel.sol:JumpRateModel",
								"label": "kink",
								"offset": 0,
								"slot": "154",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"baseRatePerBlock()": {
								"notice": "The base interest rate which is the y-intercept when utilization rate is 0"
							},
							"blocksPerYear()": {
								"notice": "The approximate number of blocks per year that is assumed by the interest rate model"
							},
							"getBorrowRate(uint256,uint256,uint256)": {
								"notice": "Calculates the current borrow rate per block"
							},
							"getSupplyRate(uint256,uint256,uint256,uint256)": {
								"notice": "Calculates the current supply rate per block"
							},
							"jumpMultiplierPerBlock()": {
								"notice": "The multiplierPerBlock after hitting a specified utilization point"
							},
							"kink()": {
								"notice": "The utilization point at which the jump multiplier is applied"
							},
							"multiplierPerBlock()": {
								"notice": "The multiplier of utilization rate that gives the slope of the interest rate"
							},
							"updateJumpRateModel(uint256,uint256,uint256,uint256)": {
								"notice": "Update the parameters of the interest rate model (only callable by owner, i.e. Timelock)"
							},
							"utilizationRate(uint256,uint256,uint256)": {
								"notice": "Calculates the utilization rate of the market: `borrows / (cash + borrows - reserves)`"
							}
						},
						"notice": "Supports only for V2 cTokens",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol",
					"exportedSymbols": {
						"ContextUpgradeSafe": [
							44
						]
					},
					"id": 45,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
							"file": "../Initializable.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 45,
							"sourceUnit": 120,
							"src": "24:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 3,
										"name": "Initializable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 119,
										"src": "587:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Initializable_$119",
											"typeString": "contract Initializable"
										}
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "587:13:0"
								}
							],
							"contractDependencies": [
								119
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 44,
							"linearizedBaseContracts": [
								44,
								119
							],
							"name": "ContextUpgradeSafe",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "809:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 9,
														"name": "__Context_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "819:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "819:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 11,
												"nodeType": "ExpressionStatement",
												"src": "819:26:0"
											}
										]
									},
									"documentation": null,
									"id": 13,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 7,
											"modifierName": {
												"argumentTypes": null,
												"id": 6,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 92,
												"src": "797:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "797:11:0"
										}
									],
									"name": "__Context_init",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "785:2:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:0:0"
									},
									"scope": 44,
									"src": "762:90:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "915:9:0",
										"statements": []
									},
									"documentation": null,
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 16,
											"modifierName": {
												"argumentTypes": null,
												"id": 15,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 92,
												"src": "903:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "903:11:0"
										}
									],
									"name": "__Context_init_unchained",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "891:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:0:0"
									},
									"scope": 44,
									"src": "858:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "1001:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 24,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "1018:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1018:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 23,
												"id": 26,
												"nodeType": "Return",
												"src": "1011:17:0"
											}
										]
									},
									"documentation": null,
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "950:2:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "984:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "984:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "983:17:0"
									},
									"scope": 44,
									"src": "931:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "1106:165:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 33,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "1116:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ContextUpgradeSafe_$44",
														"typeString": "contract ContextUpgradeSafe"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "1116:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 35,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "1256:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1256:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 32,
												"id": 37,
												"nodeType": "Return",
												"src": "1249:15:0"
											}
										]
									},
									"documentation": null,
									"id": 39,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1058:2:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 39,
												"src": "1092:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 30,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1092:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1091:14:0"
									},
									"scope": 44,
									"src": "1041:230:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 43,
									"mutability": "mutable",
									"name": "__gap",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 44,
									"src": "1277:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 40,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1277:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 42,
										"length": {
											"argumentTypes": null,
											"hexValue": "3530",
											"id": 41,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1285:2:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1277:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"value": null,
									"visibility": "private"
								}
							],
							"scope": 45,
							"src": "556:749:0"
						}
					],
					"src": "0:1306:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							119
						]
					},
					"id": 120,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 46,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".24",
								"<",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:32:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 47,
								"nodeType": "StructuredDocumentation",
								"src": "35:621:1",
								"text": " @title Initializable\n @dev Helper contract to support initializer functions. To use it, replace\n the constructor with a function that has the `initializer` modifier.\n WARNING: Unlike constructors, initializer functions must be manually\n invoked. This applies both to deploying an Initializable contract, as well\n as extending an Initializable contract via inheritance.\n WARNING: When used with inheritance, manual care must be taken to not invoke\n a parent initializer twice, or ensure that all initializers are idempotent,\n because this is not dealt with automatically as with constructors."
							},
							"fullyImplemented": true,
							"id": 119,
							"linearizedBaseContracts": [
								119
							],
							"name": "Initializable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "685:69:1",
										"text": " @dev Indicates that the contract has been initialized."
									},
									"id": 50,
									"mutability": "mutable",
									"name": "initialized",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 119,
									"src": "757:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 49,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "757:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "786:87:1",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 53,
									"mutability": "mutable",
									"name": "initializing",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 119,
									"src": "876:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 52,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "876:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "1010:313:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 57,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "1024:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 58,
																		"name": "isConstructor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 114,
																		"src": "1040:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																			"typeString": "function () view returns (bool)"
																		}
																	},
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1040:15:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1024:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "1059:12:1",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 61,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "1060:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1024:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1073:48:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
																"typeString": "literal_string \"Contract instance has already been initialized\""
															},
															"value": "Contract instance has already been initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
																"typeString": "literal_string \"Contract instance has already been initialized\""
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1016:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1016:106:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1016:106:1"
											},
											{
												"assignments": [
													68
												],
												"declarations": [
													{
														"constant": false,
														"id": 68,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 91,
														"src": "1129:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 67,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1129:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 71,
												"initialValue": {
													"argumentTypes": null,
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1151:13:1",
													"subExpression": {
														"argumentTypes": null,
														"id": 69,
														"name": "initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "1152:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1129:35:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 72,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 68,
													"src": "1174:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1170:80:1",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1190:60:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 73,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "1198:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 74,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1213:4:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1198:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 76,
															"nodeType": "ExpressionStatement",
															"src": "1198:19:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 77,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "1225:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1239:4:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1225:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 80,
															"nodeType": "ExpressionStatement",
															"src": "1225:18:1"
														}
													]
												}
											},
											{
												"id": 83,
												"nodeType": "PlaceholderStatement",
												"src": "1256:1:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 84,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 68,
													"src": "1268:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 90,
												"nodeType": "IfStatement",
												"src": "1264:55:1",
												"trueBody": {
													"id": 89,
													"nodeType": "Block",
													"src": "1284:35:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 85,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "1292:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "66616c7365",
																	"id": 86,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1307:5:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "1292:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 88,
															"nodeType": "ExpressionStatement",
															"src": "1292:20:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "906:78:1",
										"text": " @dev Modifier to use in the initializer function of a contract."
									},
									"id": 92,
									"name": "initializer",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1007:2:1"
									},
									"src": "987:336:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "1462:445:1",
										"statements": [
											{
												"assignments": [
													99
												],
												"declarations": [
													{
														"constant": false,
														"id": 99,
														"mutability": "mutable",
														"name": "self",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 113,
														"src": "1797:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 98,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1797:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 104,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 102,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -28,
															"src": "1820:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Initializable_$119",
																"typeString": "contract Initializable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_Initializable_$119",
																"typeString": "contract Initializable"
															}
														],
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1812:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 100,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1812:7:1",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1812:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1797:28:1"
											},
											{
												"assignments": [
													106
												],
												"declarations": [
													{
														"constant": false,
														"id": 106,
														"mutability": "mutable",
														"name": "cs",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 113,
														"src": "1831:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 105,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1831:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 107,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1831:10:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1856:27:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1858:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "self",
																		"nodeType": "YulIdentifier",
																		"src": "1876:4:1"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1864:11:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:17:1"
															},
															"variableNames": [
																{
																	"name": "cs",
																	"nodeType": "YulIdentifier",
																	"src": "1858:2:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "1858:2:1",
														"valueSize": 1
													},
													{
														"declaration": 99,
														"isOffset": false,
														"isSlot": false,
														"src": "1876:4:1",
														"valueSize": 1
													}
												],
												"id": 108,
												"nodeType": "InlineAssembly",
												"src": "1847:36:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 109,
														"name": "cs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "1895:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1901:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1895:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 97,
												"id": 112,
												"nodeType": "Return",
												"src": "1888:14:1"
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "1327:79:1",
										"text": "@dev Returns true if and only if the function is running in the constructor"
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isConstructor",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1431:2:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 114,
												"src": "1456:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 95,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1456:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1455:6:1"
									},
									"scope": 119,
									"src": "1409:498:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 118,
									"mutability": "mutable",
									"name": "______gap",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 119,
									"src": "1982:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 115,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1982:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 117,
										"length": {
											"argumentTypes": null,
											"hexValue": "3530",
											"id": 116,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1990:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1982:11:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"value": null,
									"visibility": "private"
								}
							],
							"scope": 120,
							"src": "657:1357:1"
						}
					],
					"src": "0:2015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"OwnableUpgradeSafe": [
							249
						]
					},
					"id": 250,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 121,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol",
							"file": "../GSN/Context.sol",
							"id": 122,
							"nodeType": "ImportDirective",
							"scope": 250,
							"sourceUnit": 45,
							"src": "25:28:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
							"file": "../Initializable.sol",
							"id": 123,
							"nodeType": "ImportDirective",
							"scope": 250,
							"sourceUnit": 120,
							"src": "54:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 125,
										"name": "Initializable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 119,
										"src": "611:13:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Initializable_$119",
											"typeString": "contract Initializable"
										}
									},
									"id": 126,
									"nodeType": "InheritanceSpecifier",
									"src": "611:13:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 127,
										"name": "ContextUpgradeSafe",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 44,
										"src": "626:18:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ContextUpgradeSafe_$44",
											"typeString": "contract ContextUpgradeSafe"
										}
									},
									"id": 128,
									"nodeType": "InheritanceSpecifier",
									"src": "626:18:2"
								}
							],
							"contractDependencies": [
								44,
								119
							],
							"contractKind": "contract",
							"documentation": {
								"id": 124,
								"nodeType": "StructuredDocumentation",
								"src": "85:494:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 249,
							"linearizedBaseContracts": [
								249,
								44,
								119
							],
							"name": "OwnableUpgradeSafe",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 130,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 249,
									"src": "651:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 129,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "651:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 136,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 136,
												"src": "707:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 136,
												"src": "738:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "706:57:2"
									},
									"src": "680:84:2"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "914:79:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 142,
														"name": "__Context_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "924:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "924:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "924:26:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 145,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "960:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "960:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "960:26:2"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "770:91:2",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 140,
											"modifierName": {
												"argumentTypes": null,
												"id": 139,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 92,
												"src": "902:11:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "902:11:2"
										}
									],
									"name": "__Ownable_init",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "890:2:2"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "914:0:2"
									},
									"scope": 249,
									"src": "867:126:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "1056:138:2",
										"statements": [
											{
												"assignments": [
													155
												],
												"declarations": [
													{
														"constant": false,
														"id": 155,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 171,
														"src": "1068:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 154,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1068:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 158,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 156,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1088:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1088:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1068:32:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 159,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1110:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 160,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "1119:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1110:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "1110:18:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1172:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1164:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 164,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1164:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1164:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 168,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "1176:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 163,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "1143:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1143:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "EmitStatement",
												"src": "1138:48:2"
											}
										]
									},
									"documentation": null,
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 152,
											"modifierName": {
												"argumentTypes": null,
												"id": 151,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 92,
												"src": "1044:11:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1044:11:2"
										}
									],
									"name": "__Ownable_init_unchained",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1032:2:2"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1056:0:2"
									},
									"scope": 249,
									"src": "999:195:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "1318:30:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 130,
													"src": "1335:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 177,
												"id": 179,
												"nodeType": "Return",
												"src": "1328:13:2"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "1201:65:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1285:2:2"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "1309:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1308:9:2"
									},
									"scope": 249,
									"src": "1271:77:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "1457:95:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 185,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "1475:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 186,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "1485:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1485:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1475:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1499:34:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 184,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1467:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1467:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "1467:67:2"
											},
											{
												"id": 192,
												"nodeType": "PlaceholderStatement",
												"src": "1544:1:2"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "1354:77:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 194,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1454:2:2"
									},
									"src": "1436:116:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "1948:91:2",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 201,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "1984:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2000:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1992:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 202,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1992:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1992:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 200,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "1963:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1963:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "EmitStatement",
												"src": "1958:45:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 208,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2013:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2030:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2022:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 209,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2022:7:2",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2022:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2013:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 214,
												"nodeType": "ExpressionStatement",
												"src": "2013:19:2"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "1558:331:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 198,
											"modifierName": {
												"argumentTypes": null,
												"id": 197,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 194,
												"src": "1938:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1938:9:2"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1920:2:2"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1948:0:2"
									},
									"scope": 249,
									"src": "1894:145:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "2258:170:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 225,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "2276:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2296:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2288:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 226,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2288:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2288:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2276:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2300:40:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 224,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2268:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2268:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "2268:73:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 235,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "2377:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 236,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "2385:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 234,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "2356:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 238,
												"nodeType": "EmitStatement",
												"src": "2351:43:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 239,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2404:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 240,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "2413:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2404:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "2404:17:2"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "2045:138:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 222,
											"modifierName": {
												"argumentTypes": null,
												"id": 221,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 194,
												"src": "2248:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2248:9:2"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 244,
												"src": "2215:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2214:18:2"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2258:0:2"
									},
									"scope": 249,
									"src": "2188:240:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "__gap",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 249,
									"src": "2434:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 245,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2434:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 247,
										"length": {
											"argumentTypes": null,
											"hexValue": "3439",
											"id": 246,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2442:2:2",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "2434:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"value": null,
									"visibility": "private"
								}
							],
							"scope": 250,
							"src": "580:1882:2"
						}
					],
					"src": "0:2463:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							445
						]
					},
					"id": 446,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 251,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 252,
								"nodeType": "StructuredDocumentation",
								"src": "25:563:3",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 445,
							"linearizedBaseContracts": [
								445
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "901:109:3",
										"statements": [
											{
												"assignments": [
													263
												],
												"declarations": [
													{
														"constant": false,
														"id": 263,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 277,
														"src": "911:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 262,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "911:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 267,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 264,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "923:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 265,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "927:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "923:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "911:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 269,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "946:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 270,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "951:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "946:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "954:29:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "938:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "938:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 274,
												"nodeType": "ExpressionStatement",
												"src": "938:46:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 275,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 263,
													"src": "1002:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 261,
												"id": 276,
												"nodeType": "Return",
												"src": "995:8:3"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "612:217:3",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 278,
												"src": "847:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 278,
												"src": "858:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "846:22:3"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 278,
												"src": "892:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "891:9:3"
									},
									"scope": 445,
									"src": "834:176:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "1341:67:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 289,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "1362:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 290,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "1365:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1368:32:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 288,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															295,
															323
														],
														"referencedDeclaration": 323,
														"src": "1358:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1358:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 287,
												"id": 293,
												"nodeType": "Return",
												"src": "1351:50:3"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "1016:253:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 295,
												"src": "1287:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 295,
												"src": "1298:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1286:22:3"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 295,
												"src": "1332:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1331:9:3"
									},
									"scope": 445,
									"src": "1274:134:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "1787:92:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 308,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "1805:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 309,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "1810:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1805:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 311,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "1813:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 307,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1797:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1797:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "1797:29:3"
											},
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 322,
														"src": "1836:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 314,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1836:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 319,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 316,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "1848:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 317,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "1852:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1848:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1836:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 320,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "1871:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 306,
												"id": 321,
												"nodeType": "Return",
												"src": "1864:8:3"
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "1414:273:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 323,
												"src": "1705:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 323,
												"src": "1716:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1716:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 323,
												"src": "1727:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 301,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1727:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1704:50:3"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 323,
												"src": "1778:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1778:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1777:9:3"
									},
									"scope": 445,
									"src": "1692:187:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "2186:392:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 333,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "2418:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2423:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2418:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 339,
												"nodeType": "IfStatement",
												"src": "2414:45:3",
												"trueBody": {
													"id": 338,
													"nodeType": "Block",
													"src": "2426:33:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2447:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 332,
															"id": 337,
															"nodeType": "Return",
															"src": "2440:8:3"
														}
													]
												}
											},
											{
												"assignments": [
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 341,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 357,
														"src": "2469:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 340,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2469:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 345,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 342,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "2481:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 343,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "2485:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2481:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2469:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 347,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "2504:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 348,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "2508:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2504:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 350,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "2513:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2504:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2516:35:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 346,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2496:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2496:56:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "2496:56:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 355,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 341,
													"src": "2570:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 332,
												"id": 356,
												"nodeType": "Return",
												"src": "2563:8:3"
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "1885:229:3",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 358,
												"src": "2132:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2132:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 358,
												"src": "2143:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2131:22:3"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 358,
												"src": "2177:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2177:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2176:9:3"
									},
									"scope": 445,
									"src": "2119:459:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "3100:63:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 369,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "3121:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 370,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "3124:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3127:28:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 368,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															375,
															403
														],
														"referencedDeclaration": 403,
														"src": "3117:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3117:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 367,
												"id": 373,
												"nodeType": "Return",
												"src": "3110:46:3"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "2584:444:3",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 375,
												"src": "3046:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3046:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 375,
												"src": "3057:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3057:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3045:22:3"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 375,
												"src": "3091:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3091:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3090:9:3"
									},
									"scope": 445,
									"src": "3033:130:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "3733:243:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 388,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "3817:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3821:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3817:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 391,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "3824:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 387,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3809:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "3809:28:3"
											},
											{
												"assignments": [
													395
												],
												"declarations": [
													{
														"constant": false,
														"id": 395,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 402,
														"src": "3847:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 394,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3847:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 396,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "3859:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 397,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "3863:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3859:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 400,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 395,
													"src": "3968:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 386,
												"id": 401,
												"nodeType": "Return",
												"src": "3961:8:3"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "3169:464:3",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 403,
												"src": "3651:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3651:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 403,
												"src": "3662:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3662:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 403,
												"src": "3673:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 381,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3673:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3650:50:3"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 403,
												"src": "3724:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3724:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3723:9:3"
									},
									"scope": 445,
									"src": "3638:338:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "4487:61:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 414,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "4508:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 415,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "4511:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4514:26:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 413,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															420,
															444
														],
														"referencedDeclaration": 444,
														"src": "4504:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 412,
												"id": 418,
												"nodeType": "Return",
												"src": "4497:44:3"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "3982:433:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 420,
												"src": "4433:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4433:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 420,
												"src": "4444:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4444:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4432:22:3"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 420,
												"src": "4478:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4477:9:3"
									},
									"scope": 445,
									"src": "4420:128:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "5107:68:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 433,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "5125:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5130:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5125:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 436,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "5133:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 432,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5117:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5117:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "5117:29:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 439,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "5163:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 440,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "5167:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5163:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 431,
												"id": 442,
												"nodeType": "Return",
												"src": "5156:12:3"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "4554:453:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 444,
												"src": "5025:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 444,
												"src": "5036:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5036:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 444,
												"src": "5047:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 426,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5047:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5024:50:3"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 444,
												"src": "5098:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5098:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5097:9:3"
									},
									"scope": 445,
									"src": "5012:163:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 446,
							"src": "589:4588:3"
						}
					],
					"src": "0:5178:3"
				},
				"id": 3
			},
			"rate/BaseJumpRateModel.sol": {
				"ast": {
					"absolutePath": "rate/BaseJumpRateModel.sol",
					"exportedSymbols": {
						"BaseJumpRateModel": [
							759
						]
					},
					"id": 760,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 447,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1619:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
							"file": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
							"id": 448,
							"nodeType": "ImportDirective",
							"scope": 760,
							"sourceUnit": 446,
							"src": "1644:78:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol",
							"id": 449,
							"nodeType": "ImportDirective",
							"scope": 760,
							"sourceUnit": 250,
							"src": "1723:79:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "rate/IInterestRateModel.sol",
							"file": "./IInterestRateModel.sol",
							"id": 450,
							"nodeType": "ImportDirective",
							"scope": 760,
							"sourceUnit": 790,
							"src": "1803:34:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 452,
										"name": "IInterestRateModel",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 789,
										"src": "2081:18:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IInterestRateModel_$789",
											"typeString": "contract IInterestRateModel"
										}
									},
									"id": 453,
									"nodeType": "InheritanceSpecifier",
									"src": "2081:18:4"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 454,
										"name": "OwnableUpgradeSafe",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 249,
										"src": "2101:18:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_OwnableUpgradeSafe_$249",
											"typeString": "contract OwnableUpgradeSafe"
										}
									},
									"id": 455,
									"nodeType": "InheritanceSpecifier",
									"src": "2101:18:4"
								}
							],
							"contractDependencies": [
								44,
								119,
								249,
								789
							],
							"contractKind": "contract",
							"documentation": {
								"id": 451,
								"nodeType": "StructuredDocumentation",
								"src": "1839:211:4",
								"text": " @title Logic for Compound's JumpRateModel Contract V2.\n @author Compound (modified by Dharma Labs, refactored by Arr00)\n @notice Version 2 modifies Version 1 by enabling updateable parameters."
							},
							"fullyImplemented": true,
							"id": 759,
							"linearizedBaseContracts": [
								759,
								249,
								44,
								119,
								789
							],
							"name": "BaseJumpRateModel",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 458,
									"libraryName": {
										"contractScope": null,
										"id": 456,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 445,
										"src": "2132:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$445",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "2126:24:4",
									"typeName": {
										"id": 457,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2145:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 468,
									"name": "NewInterestParams",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"indexed": false,
												"mutability": "mutable",
												"name": "baseRatePerBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 468,
												"src": "2180:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2180:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"indexed": false,
												"mutability": "mutable",
												"name": "multiplierPerBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 468,
												"src": "2203:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2203:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"indexed": false,
												"mutability": "mutable",
												"name": "jumpMultiplierPerBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 468,
												"src": "2228:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2228:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"indexed": false,
												"mutability": "mutable",
												"name": "kink",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 468,
												"src": "2257:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2257:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2179:88:4"
									},
									"src": "2156:112:4"
								},
								{
									"constant": true,
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "2274:111:4",
										"text": " @notice The approximate number of blocks per year that is assumed by the interest rate model"
									},
									"functionSelector": "a385fb96",
									"id": 472,
									"mutability": "constant",
									"name": "blocksPerYear",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 759,
									"src": "2390:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 470,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2390:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3135373638303030",
										"id": 471,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2427:8:4",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15768000_by_1",
											"typeString": "int_const 15768000"
										},
										"value": "15768000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "2442:103:4",
										"text": " @notice The multiplier of utilization rate that gives the slope of the interest rate"
									},
									"functionSelector": "8726bb89",
									"id": 475,
									"mutability": "mutable",
									"name": "multiplierPerBlock",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 759,
									"src": "2550:30:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 474,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2550:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "2587:101:4",
										"text": " @notice The base interest rate which is the y-intercept when utilization rate is 0"
									},
									"functionSelector": "f14039de",
									"id": 478,
									"mutability": "mutable",
									"name": "baseRatePerBlock",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 759,
									"src": "2693:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 477,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2693:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "2728:93:4",
										"text": " @notice The multiplierPerBlock after hitting a specified utilization point"
									},
									"functionSelector": "b9f9850a",
									"id": 481,
									"mutability": "mutable",
									"name": "jumpMultiplierPerBlock",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 759,
									"src": "2826:34:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 480,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2826:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "2867:88:4",
										"text": " @notice The utilization point at which the jump multiplier is applied"
									},
									"functionSelector": "fd2da339",
									"id": 484,
									"mutability": "mutable",
									"name": "kink",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 759,
									"src": "2960:16:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 483,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2960:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "3609:110:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 497,
															"name": "baseRatePerYear",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "3647:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 498,
															"name": "multiplierPerYear",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "3664:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 499,
															"name": "jumpMultiplierPerYear",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "3683:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 500,
															"name": "kink_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "3706:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 496,
														"name": "updateJumpRateModelInternal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "3619:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3619:93:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "3619:93:4"
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "2983:497:4",
										"text": " @notice Update the parameters of the interest rate model (only callable by owner, i.e. Timelock)\n @param baseRatePerYear The approximate target base APR, as a mantissa (scaled by 1e18)\n @param multiplierPerYear The rate of increase in interest rate wrt utilization (scaled by 1e18)\n @param jumpMultiplierPerYear The multiplierPerBlock after hitting a specified utilization point\n @param kink_ The utilization point at which the jump multiplier is applied"
									},
									"functionSelector": "2037f3e7",
									"id": 504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateJumpRateModel",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "baseRatePerYear",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 504,
												"src": "3514:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3514:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "multiplierPerYear",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 504,
												"src": "3536:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3536:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "jumpMultiplierPerYear",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 504,
												"src": "3560:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3560:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "kink_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 504,
												"src": "3588:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3588:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3513:86:4"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3609:0:4"
									},
									"scope": 759,
									"src": "3485:234:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "4192:198:4",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 516,
														"name": "borrows",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "4265:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 517,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4276:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4265:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 522,
												"nodeType": "IfStatement",
												"src": "4261:51:4",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "4279:33:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4300:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 515,
															"id": 520,
															"nodeType": "Return",
															"src": "4293:8:4"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 533,
																	"name": "reserves",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 511,
																	"src": "4373:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 530,
																			"name": "borrows",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 509,
																			"src": "4360:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 528,
																			"name": "cash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 507,
																			"src": "4351:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 278,
																		"src": "4351:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4351:17:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 295,
																"src": "4351:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4351:31:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "31653138",
																	"id": 525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4341:4:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 523,
																	"name": "borrows",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "4329:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 358,
																"src": "4329:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4329:17:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 375,
														"src": "4329:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4329:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 515,
												"id": 536,
												"nodeType": "Return",
												"src": "4322:61:4"
											}
										]
									},
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "3725:370:4",
										"text": " @notice Calculates the utilization rate of the market: `borrows / (cash + borrows - reserves)`\n @param cash The amount of cash in the market\n @param borrows The amount of borrows in the market\n @param reserves The amount of reserves in the market (currently unused)\n @return The utilization rate as a mantissa between [0, 1e18]"
									},
									"functionSelector": "6e71e2d8",
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "utilizationRate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "cash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 538,
												"src": "4125:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4125:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "borrows",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 538,
												"src": "4136:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4136:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "reserves",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 538,
												"src": "4150:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4150:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4124:40:4"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 538,
												"src": "4186:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4186:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4185:6:4"
									},
									"scope": 759,
									"src": "4100:290:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "4869:429:4",
										"statements": [
											{
												"assignments": [
													551
												],
												"declarations": [
													{
														"constant": false,
														"id": 551,
														"mutability": "mutable",
														"name": "util",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 606,
														"src": "4879:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 550,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4879:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 557,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 553,
															"name": "cash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "4907:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 554,
															"name": "borrows",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "4913:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 555,
															"name": "reserves",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "4922:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 552,
														"name": "utilizationRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "4891:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4891:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:52:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 558,
														"name": "util",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "4946:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 559,
														"name": "kink",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "4954:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4946:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 604,
													"nodeType": "Block",
													"src": "5058:234:4",
													"statements": [
														{
															"assignments": [
																574
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 574,
																	"mutability": "mutable",
																	"name": "normalRate",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 604,
																	"src": "5072:15:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 573,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "5072:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 585,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 583,
																		"name": "baseRatePerBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "5133:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "31653138",
																				"id": 580,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5123:4:4",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 577,
																						"name": "multiplierPerBlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 475,
																						"src": "5099:18:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 575,
																						"name": "kink",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 484,
																						"src": "5090:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 576,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 358,
																					"src": "5090:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5090:28:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 375,
																			"src": "5090:32:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5090:38:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 278,
																	"src": "5090:42:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5090:60:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5072:78:4"
														},
														{
															"assignments": [
																587
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 587,
																	"mutability": "mutable",
																	"name": "excessUtil",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 604,
																	"src": "5164:15:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 586,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "5164:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 592,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 590,
																		"name": "kink",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 484,
																		"src": "5191:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 588,
																		"name": "util",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 551,
																		"src": "5182:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 295,
																	"src": "5182:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5182:14:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5164:32:4"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 601,
																		"name": "normalRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "5270:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "31653138",
																				"id": 598,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5260:4:4",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 595,
																						"name": "jumpMultiplierPerBlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 481,
																						"src": "5232:22:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 593,
																						"name": "excessUtil",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 587,
																						"src": "5217:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 594,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 358,
																					"src": "5217:14:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 596,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5217:38:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 375,
																			"src": "5217:42:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5217:48:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 278,
																	"src": "5217:52:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5217:64:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 549,
															"id": 603,
															"nodeType": "Return",
															"src": "5210:71:4"
														}
													]
												},
												"id": 605,
												"nodeType": "IfStatement",
												"src": "4942:350:4",
												"trueBody": {
													"id": 572,
													"nodeType": "Block",
													"src": "4960:92:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 569,
																		"name": "baseRatePerBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "5024:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "31653138",
																				"id": 566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5014:4:4",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 563,
																						"name": "multiplierPerBlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 475,
																						"src": "4990:18:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 561,
																						"name": "util",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 551,
																						"src": "4981:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 562,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 358,
																					"src": "4981:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 564,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4981:28:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 375,
																			"src": "4981:32:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4981:38:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 278,
																	"src": "4981:42:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4981:60:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 549,
															"id": 571,
															"nodeType": "Return",
															"src": "4974:67:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "4396:368:4",
										"text": " @notice Calculates the current borrow rate per block, with the error code expected by the market\n @param cash The amount of cash in the market\n @param borrows The amount of borrows in the market\n @param reserves The amount of reserves in the market\n @return The borrow rate percentage per block as a mantissa (scaled by 1e18)"
									},
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBorrowRateInternal",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "cash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 607,
												"src": "4800:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4800:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "borrows",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 607,
												"src": "4811:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4811:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "reserves",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 607,
												"src": "4825:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4825:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4799:40:4"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 607,
												"src": "4863:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4862:6:4"
									},
									"scope": 759,
									"src": "4769:529:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										774
									],
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "5742:70:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 621,
															"name": "cash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "5781:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 622,
															"name": "borrows",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "5787:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 623,
															"name": "reserves",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "5796:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 620,
														"name": "getBorrowRateInternal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "5759:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5759:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 619,
												"id": 625,
												"nodeType": "Return",
												"src": "5752:53:4"
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "5304:324:4",
										"text": " @notice Calculates the current borrow rate per block\n @param cash The amount of cash in the market\n @param borrows The amount of borrows in the market\n @param reserves The amount of reserves in the market\n @return The borrow rate percentage per block as a mantissa (scaled by 1e18)"
									},
									"functionSelector": "15f24053",
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBorrowRate",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 616,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5713:8:4"
									},
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "cash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 627,
												"src": "5656:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5656:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "borrows",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 627,
												"src": "5667:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5667:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "reserves",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 627,
												"src": "5681:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5681:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5655:40:4"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 627,
												"src": "5736:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5736:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5735:6:4"
									},
									"scope": 759,
									"src": "5633:179:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "5947:315:4",
										"statements": [
											{
												"assignments": [
													641
												],
												"declarations": [
													{
														"constant": false,
														"id": 641,
														"mutability": "mutable",
														"name": "oneMinusReserveFactor",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 680,
														"src": "5957:26:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 640,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5957:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 649,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 647,
															"name": "reserveFactorMantissa",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "6001:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "31653138",
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5991:4:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5986:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 642,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "5986:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5986:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 295,
														"src": "5986:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5986:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5957:66:4"
											},
											{
												"assignments": [
													651
												],
												"declarations": [
													{
														"constant": false,
														"id": 651,
														"mutability": "mutable",
														"name": "borrowRate",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 680,
														"src": "6033:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 650,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6033:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 657,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 653,
															"name": "cash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "6073:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 654,
															"name": "borrows",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "6079:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 655,
															"name": "reserves",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "6088:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 652,
														"name": "getBorrowRateInternal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "6051:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6051:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6033:64:4"
											},
											{
												"assignments": [
													659
												],
												"declarations": [
													{
														"constant": false,
														"id": 659,
														"mutability": "mutable",
														"name": "rateToPool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 680,
														"src": "6107:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 658,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6107:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 667,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "31653138",
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6167:4:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 662,
																	"name": "oneMinusReserveFactor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 641,
																	"src": "6140:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 660,
																	"name": "borrowRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 651,
																	"src": "6125:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 358,
																"src": "6125:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6125:37:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 664,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 375,
														"src": "6125:41:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6125:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6107:65:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "31653138",
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6250:4:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 674,
																	"name": "rateToPool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "6234:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 669,
																			"name": "cash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 629,
																			"src": "6205:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 670,
																			"name": "borrows",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 631,
																			"src": "6211:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 671,
																			"name": "reserves",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 633,
																			"src": "6220:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 668,
																		"name": "utilizationRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 538,
																		"src": "6189:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6189:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 358,
																"src": "6189:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6189:56:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 375,
														"src": "6189:60:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6189:66:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 639,
												"id": 679,
												"nodeType": "Return",
												"src": "6182:73:4"
											}
										]
									},
									"documentation": null,
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSupplyRateInternal",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "cash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 681,
												"src": "5850:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5850:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "borrows",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 681,
												"src": "5861:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5861:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "reserves",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 681,
												"src": "5875:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5875:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "reserveFactorMantissa",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 681,
												"src": "5890:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5890:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5849:68:4"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 681,
												"src": "5941:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5941:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5940:6:4"
									},
									"scope": 759,
									"src": "5819:443:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										788
									],
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "6811:93:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 697,
															"name": "cash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "6850:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 698,
															"name": "borrows",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "6856:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 699,
															"name": "reserves",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "6865:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 700,
															"name": "reserveFactorMantissa",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "6875:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 696,
														"name": "getSupplyRateInternal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "6828:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256,uint256) view returns (uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 695,
												"id": 702,
												"nodeType": "Return",
												"src": "6821:76:4"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "6267:402:4",
										"text": " @notice Calculates the current supply rate per block\n @param cash The amount of cash in the market\n @param borrows The amount of borrows in the market\n @param reserves The amount of reserves in the market\n @param reserveFactorMantissa The current reserve factor for the market\n @return The supply rate percentage per block as a mantissa (scaled by 1e18)"
									},
									"functionSelector": "b8168816",
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSupplyRate",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 692,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6782:8:4"
									},
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "cash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 704,
												"src": "6697:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6697:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "borrows",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 704,
												"src": "6708:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6708:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "reserves",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 704,
												"src": "6722:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6722:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "reserveFactorMantissa",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 704,
												"src": "6737:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6737:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6696:68:4"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 704,
												"src": "6805:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6805:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6804:6:4"
									},
									"scope": 759,
									"src": "6674:230:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "7535:358:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 718,
														"name": "baseRatePerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "7545:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 721,
																"name": "blocksPerYear",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "7584:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 719,
																"name": "baseRatePerYear",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "7564:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 375,
															"src": "7564:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7564:34:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7545:53:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "7545:53:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 725,
														"name": "multiplierPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "7608:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 734,
																		"name": "kink_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 713,
																		"src": "7681:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 732,
																		"name": "blocksPerYear",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 472,
																		"src": "7663:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 358,
																	"src": "7663:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7663:24:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "31653138",
																				"id": 728,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7652:4:4",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 726,
																				"name": "multiplierPerYear",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 709,
																				"src": "7630:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 358,
																			"src": "7630:21:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7630:27:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 730,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7629:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 375,
															"src": "7629:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7629:59:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7608:80:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "7608:80:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 739,
														"name": "jumpMultiplierPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "7698:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 742,
																"name": "blocksPerYear",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "7749:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 740,
																"name": "jumpMultiplierPerYear",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 711,
																"src": "7723:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 375,
															"src": "7723:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7723:40:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7698:65:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "7698:65:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 746,
														"name": "kink",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "7773:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 747,
														"name": "kink_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "7780:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7773:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 749,
												"nodeType": "ExpressionStatement",
												"src": "7773:12:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 751,
															"name": "baseRatePerBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "7819:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 752,
															"name": "multiplierPerBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "7837:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 753,
															"name": "jumpMultiplierPerBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "7857:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 754,
															"name": "kink",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "7881:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 750,
														"name": "NewInterestParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "7801:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7801:85:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 756,
												"nodeType": "EmitStatement",
												"src": "7796:90:4"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "6910:478:4",
										"text": " @notice Internal function to update the parameters of the interest rate model\n @param baseRatePerYear The approximate target base APR, as a mantissa (scaled by 1e18)\n @param multiplierPerYear The rate of increase in interest rate wrt utilization (scaled by 1e18)\n @param jumpMultiplierPerYear The multiplierPerBlock after hitting a specified utilization point\n @param kink_ The utilization point at which the jump multiplier is applied"
									},
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 716,
											"modifierName": {
												"argumentTypes": null,
												"id": 715,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 194,
												"src": "7525:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7525:9:4"
										}
									],
									"name": "updateJumpRateModelInternal",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "baseRatePerYear",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 758,
												"src": "7430:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7430:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "multiplierPerYear",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 758,
												"src": "7452:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7452:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "jumpMultiplierPerYear",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 758,
												"src": "7476:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7476:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "kink_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 758,
												"src": "7504:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7504:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7429:86:4"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7535:0:4"
									},
									"scope": 759,
									"src": "7393:500:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 760,
							"src": "2051:5844:4"
						}
					],
					"src": "1619:6277:4"
				},
				"id": 4
			},
			"rate/IInterestRateModel.sol": {
				"ast": {
					"absolutePath": "rate/IInterestRateModel.sol",
					"exportedSymbols": {
						"IInterestRateModel": [
							789
						]
					},
					"id": 790,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 761,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1605:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 762,
								"nodeType": "StructuredDocumentation",
								"src": "1630:92:5",
								"text": " @title Developer Lend's IInterestRateModel Interface\n @author Developer Lend"
							},
							"fullyImplemented": false,
							"id": 789,
							"linearizedBaseContracts": [
								789
							],
							"name": "IInterestRateModel",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "1758:368:5",
										"text": " @notice Calculates the current borrow interest rate per block\n @param cash The total amount of cash the market has\n @param borrows The total amount of borrows the market has outstanding\n @param reserves The total amount of reserves the market has\n @return The borrow rate per block (as a percentage, and scaled by 1e18)"
									},
									"functionSelector": "15f24053",
									"id": 774,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getBorrowRate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "cash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 774,
												"src": "2154:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "borrows",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 774,
												"src": "2165:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2165:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "reserves",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 774,
												"src": "2179:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2179:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2153:40:5"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 774,
												"src": "2217:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2216:6:5"
									},
									"scope": 789,
									"src": "2131:92:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "2229:447:5",
										"text": " @notice Calculates the current supply interest rate per block\n @param cash The total amount of cash the market has\n @param borrows The total amount of borrows the market has outstanding\n @param reserves The total amount of reserves the market has\n @param reserveFactorMantissa The current reserve factor the market has\n @return The supply rate per block (as a percentage, and scaled by 1e18)"
									},
									"functionSelector": "b8168816",
									"id": 788,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSupplyRate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "cash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 788,
												"src": "2704:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2704:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "borrows",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 788,
												"src": "2715:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2715:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "reserves",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 788,
												"src": "2729:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2729:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "reserveFactorMantissa",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 788,
												"src": "2744:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2744:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2703:68:5"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 788,
												"src": "2795:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2795:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2794:6:5"
									},
									"scope": 789,
									"src": "2681:120:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 790,
							"src": "1723:1081:5"
						}
					],
					"src": "1605:1200:5"
				},
				"id": 5
			},
			"rate/JumpRateModel.sol": {
				"ast": {
					"absolutePath": "rate/JumpRateModel.sol",
					"exportedSymbols": {
						"JumpRateModel": [
							824
						]
					},
					"id": 825,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 791,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"absolutePath": "rate/BaseJumpRateModel.sol",
							"file": "./BaseJumpRateModel.sol",
							"id": 792,
							"nodeType": "ImportDirective",
							"scope": 825,
							"sourceUnit": 760,
							"src": "57:33:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 794,
										"name": "BaseJumpRateModel",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 759,
										"src": "250:17:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BaseJumpRateModel_$759",
											"typeString": "contract BaseJumpRateModel"
										}
									},
									"id": 795,
									"nodeType": "InheritanceSpecifier",
									"src": "250:17:6"
								}
							],
							"contractDependencies": [
								44,
								119,
								249,
								759,
								789
							],
							"contractKind": "contract",
							"documentation": {
								"id": 793,
								"nodeType": "StructuredDocumentation",
								"src": "93:130:6",
								"text": " @title Compound's JumpRateModel Contract V2 for V2 cTokens\n @author Arr00\n @notice Supports only for V2 cTokens"
							},
							"fullyImplemented": true,
							"id": 824,
							"linearizedBaseContracts": [
								824,
								759,
								249,
								44,
								119,
								789
							],
							"name": "JumpRateModel",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "400:148:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 808,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -25,
															"src": "410:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_super$_JumpRateModel_$824",
																"typeString": "contract super JumpRateModel"
															}
														},
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "__Ownable_init",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 149,
														"src": "410:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "410:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "410:22:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 816,
															"name": "baseRatePerYear",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "476:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 817,
															"name": "multiplierPerYear",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "493:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 818,
															"name": "jumpMultiplierPerYear",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "512:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 819,
															"name": "kink_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "535:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 813,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -25,
															"src": "442:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_super$_JumpRateModel_$824",
																"typeString": "contract super JumpRateModel"
															}
														},
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "updateJumpRateModelInternal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 758,
														"src": "442:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "442:99:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "442:99:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "60a2da44",
									"id": 823,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 806,
											"modifierName": {
												"argumentTypes": null,
												"id": 805,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 92,
												"src": "388:11:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "388:11:6"
										}
									],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "baseRatePerYear",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 823,
												"src": "295:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "295:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "multiplierPerYear",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 823,
												"src": "317:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "317:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "jumpMultiplierPerYear",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 823,
												"src": "341:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "341:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "kink_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 823,
												"src": "369:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "369:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "294:86:6"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "400:0:6"
									},
									"scope": 824,
									"src": "275:273:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 825,
							"src": "224:326:6"
						}
					],
					"src": "32:519:6"
				},
				"id": 6
			}
		}
	}
}