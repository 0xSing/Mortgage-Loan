{
	"id": "57e9ed68ccddcc2ea4395f911fda773b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"oracle/DeveloperLendPriceProviderV1.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.12;\npragma experimental ABIEncoderV2;\n\nimport \"./DeveloperLendPriceOracleInterface.sol\";\n//import \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"../openzeppelin/SafeMath.sol\";\nimport \"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\";\n//import \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../openzeppelin/OwnableUpgradeable.sol\";\n\ninterface PTokenInterface {\n    function underlying() external view returns (address);\n\n    function symbol() external view returns (string memory);\n}\n\ninterface UniSwapPriceOracleInterface {\n\n    function getUniSwapPrice(address token) external view returns (uint);\n\n}\n\ninterface CompoundPriceOracleInterface {\n    enum PriceSource {\n        FIXED_ETH, /// implies the fixedPrice is a constant multiple of the ETH price (which varies)\n        FIXED_USD, /// implies the fixedPrice is a constant multiple of the USD price (which is 1)\n        REPORTER   /// implies the price is set by the reporter\n    }\n\n    /// @dev Describe how the USD price should be determined for an asset.\n    ///  There should be 1 TokenConfig object for each supported asset, passed in the constructor.\n    struct CTokenConfig {\n        address cToken;\n        address underlying;\n        bytes32 symbolHash;\n        uint256 baseUnit;\n        PriceSource priceSource;\n        uint256 fixedPrice;\n        address uniswapMarket;\n        bool isUniswapReversed;\n    }\n\n    function getUnderlyingPrice(address cToken) external view returns (uint);\n\n    function getTokenConfigByUnderlying(address underlying) external view returns (CTokenConfig memory);\n\n    function getTokenConfigBySymbol(string memory symbol) external view returns (CTokenConfig memory);\n}\n\ncontract DeveloperLendPriceProviderV1 is OwnableUpgradeable {\n\n    using SafeMath for uint256;\n\n    enum PriceOracleType{\n        ChainLink,\n        UniSwap,\n        Compound,\n        Customer,\n        ChainLinkEthBase\n    }\n\n    struct PriceOracle {\n        address source;\n        PriceOracleType sourceType;\n        bool available;\n    }\n\n    //Config for pToken\n    struct TokenConfig {\n        address pToken;\n        address underlying;\n        string underlyingSymbol; //example: DAI\n        uint256 baseUnit; //example: 1e18\n        bool fixedUsd; //if true,will return 1*e36/baseUnit\n    }\n\n\n    mapping(address => TokenConfig) public tokenConfigs;\n    mapping(address => PriceOracle[]) public oracles;\n    mapping(address => address) public chainLinkTokenEthPriceFeed;\n\n    address public ethUsdPriceFeedAddress;\n\n    event ConfigUpdated(address pToken, address underlying, string underlyingSymbol, uint256 baseUnit, bool fixedUsd);\n    event PriceOracleUpdated(address pToken, PriceOracle[] oracles);\n\n\n    constructor() public {\n    }\n\n\n    function getUnderlyingPrice(address _pToken) external view returns (uint){\n\n        uint256 price = 0;\n        TokenConfig storage tokenConfig = tokenConfigs[_pToken];\n        if (tokenConfig.fixedUsd) {//if true,will return 1*e36/baseUnit\n            price = 1;\n            return price.mul(1e36).div(tokenConfig.baseUnit);\n        }\n\n        PriceOracle[] storage priceOracles = oracles[_pToken];\n        for (uint256 i = 0; i < priceOracles.length; i++) {\n            PriceOracle storage priceOracle = priceOracles[i];\n            if (priceOracle.available == true) {// check the priceOracle is available\n                price = _getUnderlyingPriceInternal(_pToken, tokenConfig, priceOracle);\n                if (price > 0) {\n                    return price;\n                }\n            }\n        }\n\n        // price must bigger than 0\n        require(price > 0, \"price must bigger than zero\");\n\n        return 0;\n    }\n\n    function _getUnderlyingPriceInternal(address _pToken, TokenConfig memory tokenConfig, PriceOracle memory priceOracle) internal view returns (uint){\n\n        address underlying = address(0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE);\n        PTokenInterface pToken = PTokenInterface(_pToken);\n\n        if (!compareStrings(pToken.symbol(), \"pMATIC\")) {\n            underlying = address(PTokenInterface(_pToken).underlying());\n        }\n\n        PriceOracleType sourceType = priceOracle.sourceType;\n        if (sourceType == PriceOracleType.ChainLink) {\n            return _getChainlinkPriceInternal(priceOracle, tokenConfig);\n        }  else if (sourceType == PriceOracleType.UniSwap) {\n            return _getUniSwapPriceInternal(priceOracle, tokenConfig);\n        }else if (sourceType == PriceOracleType.Compound) {\n            return _getCompoundPriceInternal(priceOracle, tokenConfig);\n        } else if (sourceType == PriceOracleType.Customer) {\n            return _getCustomerPriceInternal(priceOracle, tokenConfig);\n        } else if (sourceType == PriceOracleType.ChainLinkEthBase) {\n            return _getChainLinkEthBasePriceInternal(priceOracle, tokenConfig);\n        }\n\n        return 0;\n    }\n\n    function _getUniSwapPriceInternal(PriceOracle memory priceOracle, TokenConfig memory tokenConfig) internal view returns (uint) {\n        address source = priceOracle.source;\n        UniSwapPriceOracleInterface uniSwapPriceOracle = UniSwapPriceOracleInterface(source);\n        uint price = uniSwapPriceOracle.getUniSwapPrice(tokenConfig.underlying);\n        if (price <= 0) {\n            return 0;\n        } else {//return: (price / 1e8) * (1e36 / baseUnit) ==> price * 1e28 / baseUnit\n            return uint(price).mul(1e28).div(tokenConfig.baseUnit);\n        }\n    }\n\n    function _getCustomerPriceInternal(PriceOracle memory priceOracle, TokenConfig memory tokenConfig) internal view returns (uint) {\n        address source = priceOracle.source;\n        DeveloperLendPriceOracleInterface customerPriceOracle = DeveloperLendPriceOracleInterface(source);\n        uint price = customerPriceOracle.getPrice(tokenConfig.underlying);\n        if (price <= 0) {\n            return 0;\n        } else {//return: (price / 1e8) * (1e36 / baseUnit) ==> price * 1e28 / baseUnit\n            return uint(price).mul(1e28).div(tokenConfig.baseUnit);\n        }\n    }\n\n    // Get price from compound oracle\n    function _getCompoundPriceInternal(PriceOracle memory priceOracle, TokenConfig memory tokenConfig) internal view returns (uint) {\n        address source = priceOracle.source;\n        CompoundPriceOracleInterface compoundPriceOracle = CompoundPriceOracleInterface(source);\n        CompoundPriceOracleInterface.CTokenConfig memory ctc = compoundPriceOracle.getTokenConfigBySymbol(tokenConfig.underlyingSymbol);\n        address cTokenAddress = ctc.cToken;\n        return compoundPriceOracle.getUnderlyingPrice(cTokenAddress);\n    }\n\n\n    // Get price from chainlink oracle\n    function _getChainlinkPriceInternal(PriceOracle memory priceOracle, TokenConfig memory tokenConfig) internal view returns (uint){\n\n        require(tokenConfig.baseUnit > 0, \"baseUnit must be greater than zero\");\n\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(priceOracle.source);\n        (,int price,,,) = priceFeed.latestRoundData();\n\n        if (price <= 0) {\n            return 0;\n        } else {//return: (price / 1e8) * (1e36 / baseUnit) ==> price * 1e28 / baseUnit\n            return uint(price).mul(1e28).div(tokenConfig.baseUnit);\n        }\n\n    }\n\n    // base chainlink: token-ETH-USD\n    function _getChainLinkEthBasePriceInternal(PriceOracle memory priceOracle, TokenConfig memory tokenConfig) internal view returns (uint){\n        require(tokenConfig.baseUnit > 0, \"baseUnit must be greater than zero\");\n\n        address token = tokenConfig.underlying;\n        AggregatorV3Interface tokenEthPriceFeed = AggregatorV3Interface(chainLinkTokenEthPriceFeed[token]);\n        (,int tokenEthPrice,,,) = tokenEthPriceFeed.latestRoundData();\n\n        AggregatorV3Interface ethUsdPriceFeed = AggregatorV3Interface(ethUsdPriceFeedAddress);\n        (,int ethUsdPrice,,,) = ethUsdPriceFeed.latestRoundData();\n\n        if (tokenEthPrice <= 0) {\n            return 0;\n        } else {// tokenEthPrice/1e18 * ethUsdPrice/1e8 * 1e36 / baseUnit\n            return uint(tokenEthPrice).mul(uint(ethUsdPrice)).mul(1e10).div(tokenConfig.baseUnit);\n        }\n    }\n\n    function addTokenConfig(address pToken, address underlying, string memory underlyingSymbol, uint256 baseUnit, bool fixedUsd,\n        address[] memory sources, PriceOracleType[] calldata sourceTypes) public onlyOwner {\n\n        require(sources.length == sourceTypes.length, \"sourceTypes.length must equal than sources.length\");\n\n        // add TokenConfig\n        TokenConfig storage tokenConfig = tokenConfigs[pToken];\n        require(tokenConfig.pToken == address(0), \"bad params\");\n        tokenConfig.pToken = pToken;\n        tokenConfig.underlying = underlying;\n        tokenConfig.underlyingSymbol = underlyingSymbol;\n        tokenConfig.baseUnit = baseUnit;\n        tokenConfig.fixedUsd = fixedUsd;\n\n        // add priceOracles\n        require(oracles[pToken].length < 1, \"bad params\");\n        for (uint i = 0; i < sources.length; i++) {\n            PriceOracle[] storage list = oracles[pToken];\n            list.push(PriceOracle({\n            source : sources[i],\n            sourceType : sourceTypes[i],\n            available : true\n            }));\n        }\n\n        emit ConfigUpdated(pToken, underlying, underlyingSymbol, baseUnit, fixedUsd);\n        emit PriceOracleUpdated(pToken, oracles[pToken]);\n\n    }\n\n    function addOrUpdateTokenConfigSource(address pToken, uint256 index, address source, PriceOracleType _sourceType, bool available) public onlyOwner {\n\n        PriceOracle[] storage list = oracles[pToken];\n\n        if (list.length > index) {//will update\n            PriceOracle storage oracle = list[index];\n            oracle.source = source;\n            oracle.sourceType = _sourceType;\n            oracle.available = available;\n        } else {//will add\n            list.push(PriceOracle({\n            source : source,\n            sourceType : _sourceType,\n            available : available\n            }));\n        }\n\n    }\n\n    function updateTokenConfigBaseUnit(address pToken, uint256 baseUnit) public onlyOwner {\n        TokenConfig storage tokenConfig = tokenConfigs[pToken];\n        require(tokenConfig.pToken != address(0), \"bad params\");\n        tokenConfig.baseUnit = baseUnit;\n\n        emit ConfigUpdated(pToken, tokenConfig.underlying, tokenConfig.underlyingSymbol, baseUnit, tokenConfig.fixedUsd);\n    }\n\n    function updateTokenConfigFixedUsd(address pToken, bool fixedUsd) public onlyOwner {\n        TokenConfig storage tokenConfig = tokenConfigs[pToken];\n        require(tokenConfig.pToken != address(0), \"bad params\");\n        tokenConfig.fixedUsd = fixedUsd;\n\n        emit ConfigUpdated(pToken, tokenConfig.underlying, tokenConfig.underlyingSymbol, tokenConfig.baseUnit, fixedUsd);\n    }\n\n    function setEthUsdPriceFeedAddress(address feedAddress) public onlyOwner {\n        ethUsdPriceFeedAddress = feedAddress;\n    }\n\n    function addOrUpdateChainLinkTokenEthPriceFeed(address[] memory tokens, address[] memory chainLinkTokenEthPriceFeeds) public onlyOwner {\n\n        require(tokens.length == chainLinkTokenEthPriceFeeds.length, \"tokens.length must equal than chainLinkTokenEthPriceFeeds.length\");\n\n        for (uint i = 0; i < tokens.length; i++) {\n            address token = tokens[i];\n            chainLinkTokenEthPriceFeed[token] = chainLinkTokenEthPriceFeeds[i];\n        }\n\n    }\n\n\n    function getOracleSourcePrice(address pToken, uint sourceIndex) public view returns (uint){\n\n        TokenConfig storage tokenConfig = tokenConfigs[pToken];\n        PriceOracle[] storage priceOracles = oracles[pToken];\n\n        return _getUnderlyingPriceInternal(pToken, tokenConfig, priceOracles[sourceIndex]);\n    }\n\n    function compareStrings(string memory a, string memory b) internal pure returns (bool) {\n        return (keccak256(abi.encodePacked((a))) == keccak256(abi.encodePacked((b))));\n    }\n\n    function oracleLength(address pToken) public view returns (uint){\n        PriceOracle[] storage priceOracles = oracles[pToken];\n        return priceOracles.length;\n    }\n\n}"
			},
			"openzeppelin/OwnableUpgradeable.sol": {
				"content": "/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.0;\r\nimport \"./Initializable.sol\";\r\nimport \"./ContextUpgradeable.sol\";\r\n\r\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    function __Ownable_init() internal initializer {\r\n        __Context_init_unchained();\r\n        __Ownable_init_unchained();\r\n    }\r\n\r\n    function __Ownable_init_unchained() internal initializer {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n    uint256[49] private __gap;\r\n}"
			},
			"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ninterface AggregatorV3Interface {\n\n  function decimals()\n    external\n    view\n    returns (\n      uint8\n    );\n\n  function description()\n    external\n    view\n    returns (\n      string memory\n    );\n\n  function version()\n    external\n    view\n    returns (\n      uint256\n    );\n\n  // getRoundData and latestRoundData should both raise \"No data present\"\n  // if they do not have data to report, instead of returning unset values\n  // which could be misinterpreted as actual reported values.\n  function getRoundData(\n    uint80 _roundId\n  )\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n}\n"
			},
			"openzeppelin/SafeMath.sol": {
				"content": "/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.0;\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        uint256 c = a + b;\r\n        if (c < a) return (false, 0);\r\n        return (true, c);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        if (b > a) return (false, 0);\r\n        return (true, a - b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) return (true, 0);\r\n        uint256 c = a * b;\r\n        if (c / a != b) return (false, 0);\r\n        return (true, c);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        if (b == 0) return (false, 0);\r\n        return (true, a / b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        if (b == 0) return (false, 0);\r\n        return (true, a % b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) return 0;\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath: modulo by zero\");\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}"
			},
			"oracle/DeveloperLendPriceOracleInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.12;\n\ninterface DeveloperLendPriceOracleInterface {\n\n    function getPrice(address token) external view returns (uint);\n\n    function setPrice(address token, uint price, bool force) external;\n\n}"
			},
			"openzeppelin/ContextUpgradeable.sol": {
				"content": "/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\n\r\n// SPDX-License-Identifier: MIT\r\nimport \"./Initializable.sol\";\r\n\r\nabstract contract ContextUpgradeable is Initializable {\r\n    function __Context_init() internal initializer {\r\n        __Context_init_unchained();\r\n    }\r\n\r\n    function __Context_init_unchained() internal initializer {\r\n    }\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n    uint256[50] private __gap;\r\n}"
			},
			"openzeppelin/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.0;\r\n\r\n/**\r\n * @title Initializable\r\n *\r\n * @dev Helper contract to support initializer functions. To use it, replace\r\n * the constructor with a function that has the `initializer` modifier.\r\n * WARNING: Unlike constructors, initializer functions must be manually\r\n * invoked. This applies both to deploying an Initializable contract, as well\r\n * as extending an Initializable contract via inheritance.\r\n * WARNING: When used with inheritance, manual care must be taken to not invoke\r\n * a parent initializer twice, or ensure that all initializers are idempotent,\r\n * because this is not dealt with automatically as with constructors.\r\n */\r\ncontract Initializable {\r\n\r\n    /**\r\n     * @dev Indicates that the contract has been initialized.\r\n   */\r\n    bool private initialized;\r\n\r\n    /**\r\n     * @dev Indicates that the contract is in the process of being initialized.\r\n   */\r\n    bool private initializing;\r\n\r\n    /**\r\n     * @dev Modifier to use in the initializer function of a contract.\r\n   */\r\n    modifier initializer() {\r\n        require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\");\r\n\r\n        bool isTopLevelCall = !initializing;\r\n        if (isTopLevelCall) {\r\n            initializing = true;\r\n            initialized = true;\r\n        }\r\n\r\n        _;\r\n\r\n        if (isTopLevelCall) {\r\n            initializing = false;\r\n        }\r\n    }\r\n\r\n    /// @dev Returns true if and only if the function is running in the constructor\r\n    function isConstructor() private view returns (bool) {\r\n        // extcodesize checks the size of the code stored in an address, and\r\n        // address returns the current address. Since the code is still not\r\n        // deployed when running a constructor, any checks on its code size will\r\n        // yield zero, making it an effective way to detect if a contract is\r\n        // under construction or not.\r\n        address self = address(this);\r\n        uint256 cs;\r\n        assembly { cs := extcodesize(self) }\r\n        return cs == 0;\r\n    }\r\n\r\n    // Reserved storage space to allow for layout changes in the future.\r\n    uint256[50] private ______gap;\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x8895ce4f46aba18ee3cdb7b1d180f79edb868225781f60993c7b2181e2ee2583\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4472c14df5f311d7a2eff1dfa55d9b4d39a21b0a0ff905fcbbf6913551086a4c\",\"dweb:/ipfs/QmQvwFk1SBaLMm4pmZCz7UEhfaXM8kUWu5VG71VFFuMxjF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin/ContextUpgradeable.sol\":{\"keccak256\":\"0xc29069c2b260183319e21559976a4edd6353a239df21132bf9db532799d22903\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ecc35cbe1827dc94d025e59c1ac18e27689433c444c3047b754a82d592dc6ed\",\"dweb:/ipfs/QmZL53cPxx8wk27PfdZTKYZ7PKKjTuQKnur351JwEPzq5f\"]},\"openzeppelin/Initializable.sol\":{\"keccak256\":\"0x158043e9a2bd106a5ccfd0cc2d87d705a9b2b0bcb7922db4a19ea8e404064956\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4f602e102ea8cf30c7d863c753323da6c63f93d74712f723cf12dc482f43cac\",\"dweb:/ipfs/QmNi7w2v2UvjsKMSjv1jLeyfQTXHBheJjNvRTGHpjfjm9G\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 95,
								"contract": "openzeppelin/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 98,
								"contract": "openzeppelin/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 163,
								"contract": "openzeppelin/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 88,
								"contract": "openzeppelin/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin/Initializable.sol": {
				"Initializable": {
					"abi": [],
					"devdoc": {
						"details": "Helper contract to support initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier. WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"initialized": {
								"details": "Indicates that the contract has been initialized."
							},
							"initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"title": "Initializable",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"openzeppelin/Initializable.sol\":694:2209  contract Initializable {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"openzeppelin/Initializable.sol\":694:2209  contract Initializable {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dc7b03bd0cd870cfb5e5ada7793a57d22202440b322c208fa2b7d2db7bc1d74a64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220dc7b03bd0cd870cfb5e5ada7793a57d22202440b322c208fa2b7d2db7bc1d74a64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC PUSH28 0x3BD0CD870CFB5E5ADA7793A57D22202440B322C208FA2B7D2DB7BC1 0xD7 0x4A PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "694:1515:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220dc7b03bd0cd870cfb5e5ada7793a57d22202440b322c208fa2b7d2db7bc1d74a64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC PUSH28 0x3BD0CD870CFB5E5ADA7793A57D22202440B322C208FA2B7D2DB7BC1 0xD7 0x4A PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "694:1515:2:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"isConstructor()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 694,
									"end": 2209,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 694,
									"end": 2209,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 694,
									"end": 2209,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 694,
									"end": 2209,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 694,
									"end": 2209,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 694,
									"end": 2209,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 694,
									"end": 2209,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 694,
									"end": 2209,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 694,
									"end": 2209,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 694,
									"end": 2209,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 694,
									"end": 2209,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 694,
									"end": 2209,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 694,
									"end": 2209,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 694,
									"end": 2209,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 694,
									"end": 2209,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 694,
									"end": 2209,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 694,
									"end": 2209,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 694,
									"end": 2209,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 694,
									"end": 2209,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 694,
									"end": 2209,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 694,
									"end": 2209,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dc7b03bd0cd870cfb5e5ada7793a57d22202440b322c208fa2b7d2db7bc1d74a64736f6c634300060c0033",
									".code": [
										{
											"begin": 694,
											"end": 2209,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 694,
											"end": 2209,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 694,
											"end": 2209,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 694,
											"end": 2209,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 694,
											"end": 2209,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 694,
											"end": 2209,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper contract to support initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier. WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"initialized\":{\"details\":\"Indicates that the contract has been initialized.\"},\"initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"title\":\"Initializable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin/Initializable.sol\":{\"keccak256\":\"0x158043e9a2bd106a5ccfd0cc2d87d705a9b2b0bcb7922db4a19ea8e404064956\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4f602e102ea8cf30c7d863c753323da6c63f93d74712f723cf12dc482f43cac\",\"dweb:/ipfs/QmNi7w2v2UvjsKMSjv1jLeyfQTXHBheJjNvRTGHpjfjm9G\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 95,
								"contract": "openzeppelin/Initializable.sol:Initializable",
								"label": "initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 98,
								"contract": "openzeppelin/Initializable.sol:Initializable",
								"label": "initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 163,
								"contract": "openzeppelin/Initializable.sol:Initializable",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin/ContextUpgradeable.sol\":{\"keccak256\":\"0xc29069c2b260183319e21559976a4edd6353a239df21132bf9db532799d22903\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ecc35cbe1827dc94d025e59c1ac18e27689433c444c3047b754a82d592dc6ed\",\"dweb:/ipfs/QmZL53cPxx8wk27PfdZTKYZ7PKKjTuQKnur351JwEPzq5f\"]},\"openzeppelin/Initializable.sol\":{\"keccak256\":\"0x158043e9a2bd106a5ccfd0cc2d87d705a9b2b0bcb7922db4a19ea8e404064956\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4f602e102ea8cf30c7d863c753323da6c63f93d74712f723cf12dc482f43cac\",\"dweb:/ipfs/QmNi7w2v2UvjsKMSjv1jLeyfQTXHBheJjNvRTGHpjfjm9G\"]},\"openzeppelin/OwnableUpgradeable.sol\":{\"keccak256\":\"0xce73c27b03716341ac65d1c47f118be94ac41736d381169e1152785f81eac535\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://013d397cf7035aa123b2849bfd1b2a15949e8f7b1e698eb2a0b5e93b8a74fd33\",\"dweb:/ipfs/QmZ4uzR9yhZpMC852qc9NibDsFmUggR8UfCNBTH1eC4iJ5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 95,
								"contract": "openzeppelin/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 98,
								"contract": "openzeppelin/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 163,
								"contract": "openzeppelin/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 88,
								"contract": "openzeppelin/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 174,
								"contract": "openzeppelin/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "101",
								"type": "t_address"
							},
							{
								"astId": 293,
								"contract": "openzeppelin/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"openzeppelin/SafeMath.sol\":639:7429  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"openzeppelin/SafeMath.sol\":639:7429  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122004e42817757dbceaed5b91048e3ed9050edfdc32a7b360a84611820d3a3c339d64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122004e42817757dbceaed5b91048e3ed9050edfdc32a7b360a84611820d3a3c339d64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0xE4 0x28 OR PUSH22 0x7DBCEAED5B91048E3ED9050EDFDC32A7B360A8461182 0xD GASPRICE EXTCODECOPY CALLER SWAP14 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "639:6790:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122004e42817757dbceaed5b91048e3ed9050edfdc32a7b360a84611820d3a3c339d64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0xE4 0x28 OR PUSH22 0x7DBCEAED5B91048E3ED9050EDFDC32A7B360A8461182 0xD GASPRICE EXTCODECOPY CALLER SWAP14 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "639:6790:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 639,
									"end": 7429,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 639,
									"end": 7429,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 639,
									"end": 7429,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 639,
									"end": 7429,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 639,
									"end": 7429,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 639,
									"end": 7429,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 639,
									"end": 7429,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 639,
									"end": 7429,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 639,
									"end": 7429,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 639,
									"end": 7429,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 639,
									"end": 7429,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 639,
									"end": 7429,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 639,
									"end": 7429,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 639,
									"end": 7429,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 639,
									"end": 7429,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 639,
									"end": 7429,
									"name": "INVALID",
									"source": 4
								},
								{
									"begin": 639,
									"end": 7429,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 639,
									"end": 7429,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 639,
									"end": 7429,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 639,
									"end": 7429,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 639,
									"end": 7429,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 639,
									"end": 7429,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 639,
									"end": 7429,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 639,
									"end": 7429,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 639,
									"end": 7429,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 639,
									"end": 7429,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 639,
									"end": 7429,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122004e42817757dbceaed5b91048e3ed9050edfdc32a7b360a84611820d3a3c339d64736f6c634300060c0033",
									".code": [
										{
											"begin": 639,
											"end": 7429,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 639,
											"end": 7429,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 639,
											"end": 7429,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 639,
											"end": 7429,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 639,
											"end": 7429,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 639,
											"end": 7429,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 639,
											"end": 7429,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 7429,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 639,
											"end": 7429,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin/SafeMath.sol\":{\"keccak256\":\"0xa8bdeb6000645c8cd0d040fd429614de694ff281b8a1b78fb1f24ab899b2bec5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://635614feaf4b4a5467abb0231d4d5dd9d39597ea7f8af623dc60074495d1ae61\",\"dweb:/ipfs/QmNfJL51eQP4wjzebecJQxwC5FkqMz8cWQ61Cfx2xsN8yQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"oracle/DeveloperLendPriceOracleInterface.sol": {
				"DeveloperLendPriceOracleInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "force",
									"type": "bool"
								}
							],
							"name": "setPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getPrice(address)": "41976e09",
							"setPrice(address,uint256,bool)": "2caf02d0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"oracle/DeveloperLendPriceOracleInterface.sol\":\"DeveloperLendPriceOracleInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"oracle/DeveloperLendPriceOracleInterface.sol\":{\"keccak256\":\"0x75f26c72d309971e6b75cff5e8d84409495636fd0b35f8cc0393d1d5dc676406\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2946f34e79c5e3fca762c77154c61085ddcc83b4d82f93a4e88315d733ebed95\",\"dweb:/ipfs/QmPdKriPao2ce48wyGrSZB47sk2GmJZghPRx6xrQgb6Urp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"oracle/DeveloperLendPriceProviderV1.sol": {
				"CompoundPriceOracleInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"name": "getTokenConfigBySymbol",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "cToken",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "underlying",
											"type": "address"
										},
										{
											"internalType": "bytes32",
											"name": "symbolHash",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "baseUnit",
											"type": "uint256"
										},
										{
											"internalType": "enum CompoundPriceOracleInterface.PriceSource",
											"name": "priceSource",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "fixedPrice",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "uniswapMarket",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isUniswapReversed",
											"type": "bool"
										}
									],
									"internalType": "struct CompoundPriceOracleInterface.CTokenConfig",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "underlying",
									"type": "address"
								}
							],
							"name": "getTokenConfigByUnderlying",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "cToken",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "underlying",
											"type": "address"
										},
										{
											"internalType": "bytes32",
											"name": "symbolHash",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "baseUnit",
											"type": "uint256"
										},
										{
											"internalType": "enum CompoundPriceOracleInterface.PriceSource",
											"name": "priceSource",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "fixedPrice",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "uniswapMarket",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isUniswapReversed",
											"type": "bool"
										}
									],
									"internalType": "struct CompoundPriceOracleInterface.CTokenConfig",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "cToken",
									"type": "address"
								}
							],
							"name": "getUnderlyingPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getTokenConfigBySymbol(string)": "276c2cba",
							"getTokenConfigByUnderlying(address)": "4da21942",
							"getUnderlyingPrice(address)": "fc57d4df"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getTokenConfigBySymbol\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"symbolHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"baseUnit\",\"type\":\"uint256\"},{\"internalType\":\"enum CompoundPriceOracleInterface.PriceSource\",\"name\":\"priceSource\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"fixedPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"uniswapMarket\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUniswapReversed\",\"type\":\"bool\"}],\"internalType\":\"struct CompoundPriceOracleInterface.CTokenConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"}],\"name\":\"getTokenConfigByUnderlying\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"symbolHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"baseUnit\",\"type\":\"uint256\"},{\"internalType\":\"enum CompoundPriceOracleInterface.PriceSource\",\"name\":\"priceSource\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"fixedPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"uniswapMarket\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUniswapReversed\",\"type\":\"bool\"}],\"internalType\":\"struct CompoundPriceOracleInterface.CTokenConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"}],\"name\":\"getUnderlyingPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"oracle/DeveloperLendPriceProviderV1.sol\":\"CompoundPriceOracleInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x8895ce4f46aba18ee3cdb7b1d180f79edb868225781f60993c7b2181e2ee2583\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4472c14df5f311d7a2eff1dfa55d9b4d39a21b0a0ff905fcbbf6913551086a4c\",\"dweb:/ipfs/QmQvwFk1SBaLMm4pmZCz7UEhfaXM8kUWu5VG71VFFuMxjF\"]},\"openzeppelin/ContextUpgradeable.sol\":{\"keccak256\":\"0xc29069c2b260183319e21559976a4edd6353a239df21132bf9db532799d22903\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ecc35cbe1827dc94d025e59c1ac18e27689433c444c3047b754a82d592dc6ed\",\"dweb:/ipfs/QmZL53cPxx8wk27PfdZTKYZ7PKKjTuQKnur351JwEPzq5f\"]},\"openzeppelin/Initializable.sol\":{\"keccak256\":\"0x158043e9a2bd106a5ccfd0cc2d87d705a9b2b0bcb7922db4a19ea8e404064956\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4f602e102ea8cf30c7d863c753323da6c63f93d74712f723cf12dc482f43cac\",\"dweb:/ipfs/QmNi7w2v2UvjsKMSjv1jLeyfQTXHBheJjNvRTGHpjfjm9G\"]},\"openzeppelin/OwnableUpgradeable.sol\":{\"keccak256\":\"0xce73c27b03716341ac65d1c47f118be94ac41736d381169e1152785f81eac535\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://013d397cf7035aa123b2849bfd1b2a15949e8f7b1e698eb2a0b5e93b8a74fd33\",\"dweb:/ipfs/QmZ4uzR9yhZpMC852qc9NibDsFmUggR8UfCNBTH1eC4iJ5\"]},\"openzeppelin/SafeMath.sol\":{\"keccak256\":\"0xa8bdeb6000645c8cd0d040fd429614de694ff281b8a1b78fb1f24ab899b2bec5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://635614feaf4b4a5467abb0231d4d5dd9d39597ea7f8af623dc60074495d1ae61\",\"dweb:/ipfs/QmNfJL51eQP4wjzebecJQxwC5FkqMz8cWQ61Cfx2xsN8yQ\"]},\"oracle/DeveloperLendPriceOracleInterface.sol\":{\"keccak256\":\"0x75f26c72d309971e6b75cff5e8d84409495636fd0b35f8cc0393d1d5dc676406\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2946f34e79c5e3fca762c77154c61085ddcc83b4d82f93a4e88315d733ebed95\",\"dweb:/ipfs/QmPdKriPao2ce48wyGrSZB47sk2GmJZghPRx6xrQgb6Urp\"]},\"oracle/DeveloperLendPriceProviderV1.sol\":{\"keccak256\":\"0x6e7822e837a2450cc701ac4910cb1f4206b6dee9af988744138c80babd2d5c7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b03ae3cd2d51a52d6cbf3c7d91366586cc7dffa9382a6556371c782e002ebf2\",\"dweb:/ipfs/QmbqvkSstejNDJ5Lf9GuwejorjJGXznMnTcDeuqEf8XDau\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"DeveloperLendPriceProviderV1": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "pToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "underlying",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "underlyingSymbol",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "baseUnit",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "fixedUsd",
									"type": "bool"
								}
							],
							"name": "ConfigUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "pToken",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "source",
											"type": "address"
										},
										{
											"internalType": "enum DeveloperLendPriceProviderV1.PriceOracleType",
											"name": "sourceType",
											"type": "uint8"
										},
										{
											"internalType": "bool",
											"name": "available",
											"type": "bool"
										}
									],
									"indexed": false,
									"internalType": "struct DeveloperLendPriceProviderV1.PriceOracle[]",
									"name": "oracles",
									"type": "tuple[]"
								}
							],
							"name": "PriceOracleUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "tokens",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "chainLinkTokenEthPriceFeeds",
									"type": "address[]"
								}
							],
							"name": "addOrUpdateChainLinkTokenEthPriceFeed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "source",
									"type": "address"
								},
								{
									"internalType": "enum DeveloperLendPriceProviderV1.PriceOracleType",
									"name": "_sourceType",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "available",
									"type": "bool"
								}
							],
							"name": "addOrUpdateTokenConfigSource",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "underlying",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "underlyingSymbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "baseUnit",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "fixedUsd",
									"type": "bool"
								},
								{
									"internalType": "address[]",
									"name": "sources",
									"type": "address[]"
								},
								{
									"internalType": "enum DeveloperLendPriceProviderV1.PriceOracleType[]",
									"name": "sourceTypes",
									"type": "uint8[]"
								}
							],
							"name": "addTokenConfig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "chainLinkTokenEthPriceFeed",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ethUsdPriceFeedAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "sourceIndex",
									"type": "uint256"
								}
							],
							"name": "getOracleSourcePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pToken",
									"type": "address"
								}
							],
							"name": "getUnderlyingPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pToken",
									"type": "address"
								}
							],
							"name": "oracleLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "oracles",
							"outputs": [
								{
									"internalType": "address",
									"name": "source",
									"type": "address"
								},
								{
									"internalType": "enum DeveloperLendPriceProviderV1.PriceOracleType",
									"name": "sourceType",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "available",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "feedAddress",
									"type": "address"
								}
							],
							"name": "setEthUsdPriceFeedAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokenConfigs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "underlying",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "underlyingSymbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "baseUnit",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "fixedUsd",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "baseUnit",
									"type": "uint256"
								}
							],
							"name": "updateTokenConfigBaseUnit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pToken",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "fixedUsd",
									"type": "bool"
								}
							],
							"name": "updateTokenConfigFixedUsd",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"oracle/DeveloperLendPriceProviderV1.sol\":1756:12117  contract DeveloperLendPriceProviderV1 is OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n    /* \"oracle/DeveloperLendPriceProviderV1.sol\":2774:2802  constructor() public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"oracle/DeveloperLendPriceProviderV1.sol\":1756:12117  contract DeveloperLendPriceProviderV1 is OwnableUpgradeable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":1756:12117  contract DeveloperLendPriceProviderV1 is OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x98ee9a13\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xbec69b4f\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xbec69b4f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe316e297\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xfc57d4df\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x98ee9a13\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x9e237b1c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa00a8b2c\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa22e6ee3\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x715018a6\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x71cc09a9\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8341301a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x0e4230a0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1b69dc5f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x43f5ae36\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x49b39fd6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8193:9413  function addTokenConfig(address pToken, address underlying, string memory underlyingSymbol, uint256 baseUnit, bool fixedUsd,... */\n    tag_3:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":2361:2412  mapping(address => TokenConfig) public tokenConfigs */\n    tag_4:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11945:12114  function oracleLength(address pToken) public view returns (uint){... */\n    tag_5:\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10052:10438  function updateTokenConfigBaseUnit(address pToken, uint256 baseUnit) public onlyOwner {... */\n    tag_6:\n      tag_22\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n        /* \"openzeppelin/OwnableUpgradeable.sol\":2004:2152  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_7:\n      tag_22\n      tag_42\n      jump\t// in\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10444:10827  function updateTokenConfigFixedUsd(address pToken, bool fixedUsd) public onlyOwner {... */\n    tag_8:\n      tag_22\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":2472:2533  mapping(address => address) public chainLinkTokenEthPriceFeed */\n    tag_9:\n      tag_47\n      tag_48\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1353:1440  function owner() public view virtual returns (address) {\r... */\n    tag_10:\n      tag_47\n      tag_53\n      jump\t// in\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10965:11428  function addOrUpdateChainLinkTokenEthPriceFeed(address[] memory tokens, address[] memory chainLinkTokenEthPriceFeeds) public onlyOwner {... */\n    tag_11:\n      tag_22\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11435:11752  function getOracleSourcePrice(address pToken, uint sourceIndex) public view returns (uint){... */\n    tag_12:\n      tag_32\n      tag_60\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":2418:2466  mapping(address => PriceOracle[]) public oracles */\n    tag_13:\n      tag_63\n      tag_64\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_30\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":2540:2577  address public ethUsdPriceFeedAddress */\n    tag_14:\n      tag_47\n      tag_69\n      jump\t// in\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10833:10959  function setEthUsdPriceFeedAddress(address feedAddress) public onlyOwner {... */\n    tag_15:\n      tag_22\n      tag_72\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9419:10046  function addOrUpdateTokenConfigSource(address pToken, uint256 index, address source, PriceOracleType _sourceType, bool available) public onlyOwner {... */\n    tag_16:\n      tag_22\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"openzeppelin/OwnableUpgradeable.sol\":2307:2551  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_17:\n      tag_22\n      tag_79\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":2809:3734  function getUnderlyingPrice(address _pToken) external view returns (uint){... */\n    tag_18:\n      tag_32\n      tag_82\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8193:9413  function addTokenConfig(address pToken, address underlying, string memory underlyingSymbol, uint256 baseUnit, bool fixedUsd,... */\n    tag_25:\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1584:1596  _msgSender() */\n      tag_86\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1584:1594  _msgSender */\n      tag_87\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1584:1596  _msgSender() */\n      jump\t// in\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1596  owner() == _msgSender() */\n      and\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1580  owner() */\n      tag_88\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1578  owner */\n      tag_53\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1580  owner() */\n      jump\t// in\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1596  owner() == _msgSender() */\n      and\n      eq\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1565:1633  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_89\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_89:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8428:8442  sources.length */\n      dup3\n      mload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8428:8464  sources.length == sourceTypes.length */\n      dup2\n      eq\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8420:8518  require(sources.length == sourceTypes.length, \"sourceTypes.length must equal than sources.length\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_95\n      jump\t// in\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8590:8610  tokenConfigs[pToken] */\n      dup1\n      dup10\n      and\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8556:8587  TokenConfig storage tokenConfig */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8590:8610  tokenConfigs[pToken] */\n      swap1\n      dup2\n      mstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8590:8602  tokenConfigs */\n      0x97\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8590:8610  tokenConfigs[pToken] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8628:8646  tokenConfig.pToken */\n      dup1\n      sload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8590:8610  tokenConfigs[pToken] */\n      swap1\n      swap2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8628:8646  tokenConfig.pToken */\n      and\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8628:8660  tokenConfig.pToken == address(0) */\n      iszero\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8620:8675  require(tokenConfig.pToken == address(0), \"bad params\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_98\n      jump\t// in\n    tag_96:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8685:8712  tokenConfig.pToken = pToken */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup12\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      dup4\n      sstore\n      0x01\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8722:8744  tokenConfig.underlying */\n      dup4\n      add\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8722:8757  tokenConfig.underlying = underlying */\n      dup1\n      sload\n      swap2\n      dup12\n      and\n      swap2\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8767:8814  tokenConfig.underlyingSymbol = underlyingSymbol */\n      dup7\n      mload\n      tag_99\n      swap1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8767:8795  tokenConfig.underlyingSymbol */\n      0x02\n      dup4\n      add\n      swap1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8767:8814  tokenConfig.underlyingSymbol = underlyingSymbol */\n      0x20\n      dup11\n      add\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8824:8844  tokenConfig.baseUnit */\n      0x03\n      dup2\n      add\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8824:8855  tokenConfig.baseUnit = baseUnit */\n      dup7\n      swap1\n      sstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8865:8885  tokenConfig.fixedUsd */\n      0x04\n      dup2\n      add\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8865:8896  tokenConfig.fixedUsd = fixedUsd */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      or\n      swap1\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8943:8958  oracles[pToken] */\n      dup10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8943:8950  oracles */\n      0x98\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8943:8958  oracles[pToken] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8943:8965  oracles[pToken].length */\n      sload\n      0x01\n      gt\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8935:8984  require(oracles[pToken].length < 1, \"bad params\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_98\n      jump\t// in\n    tag_101:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8999:9005  uint i */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8994:9261  for (uint i = 0; i < sources.length; i++) {... */\n    tag_103:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9015:9022  sources */\n      dup5\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9015:9029  sources.length */\n      mload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9011:9012  i */\n      dup2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9011:9029  i < sources.length */\n      lt\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8994:9261  for (uint i = 0; i < sources.length; i++) {... */\n      iszero\n      tag_104\n      jumpi\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9050:9076  PriceOracle[] storage list */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9079:9086  oracles */\n      0x98\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9079:9094  oracles[pToken] */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9087:9093  pToken */\n      dup13\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9079:9094  oracles[pToken] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9050:9094  PriceOracle[] storage list = oracles[pToken] */\n      swap1\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9108:9112  list */\n      dup1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9118:9249  PriceOracle({... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9153:9160  sources */\n      dup9\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9161:9162  i */\n      dup6\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9153:9163  sources[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_106\n      jumpi\n      invalid\n    tag_106:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9118:9249  PriceOracle({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9190:9201  sourceTypes */\n      dup8\n      dup8\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9202:9203  i */\n      dup7\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9190:9204  sourceTypes[i] */\n      dup2\n      dup2\n      lt\n      tag_107\n      jumpi\n      invalid\n    tag_107:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9118:9249  PriceOracle({... */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_110\n      jumpi\n      invalid\n    tag_110:\n      dup2\n      mstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9230:9234  true */\n      0x01\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9118:9249  PriceOracle({... */\n      0x20\n      swap2\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9108:9250  list.push(PriceOracle({... */\n      dup4\n      sload\n      swap1\n      dup2\n      add\n      dup5\n      sstore\n      0x00\n      swap4\n      dup5\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n      dup3\n      mload\n      swap4\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      dup1\n      dup5\n      sstore\n      swap1\n      dup3\n      add\n      mload\n      swap2\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      dup4\n      0x04\n      dup2\n      gt\n      iszero\n      tag_112\n      jumpi\n      invalid\n    tag_112:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      swap2\n      swap1\n      swap2\n      add\n      mload\n      dup2\n      sload\n      swap1\n      iszero\n      iszero\n      shl(0xa8, 0x01)\n      mul\n      not(shl(0xa8, 0xff))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      pop\n      0x01\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9031:9034  i++ */\n      add\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8994:9261  for (uint i = 0; i < sources.length; i++) {... */\n      jump(tag_103)\n    tag_104:\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9276:9347  ConfigUpdated(pToken, underlying, underlyingSymbol, baseUnit, fixedUsd) */\n      0x7e55bc43e6f0111474264fd86152c4a3e172abc29a15f5474298510ce6ff69ea\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9290:9296  pToken */\n      dup10\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9298:9308  underlying */\n      dup10\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9310:9326  underlyingSymbol */\n      dup10\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9328:9336  baseUnit */\n      dup10\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9338:9346  fixedUsd */\n      dup10\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9276:9347  ConfigUpdated(pToken, underlying, underlyingSymbol, baseUnit, fixedUsd) */\n      mload(0x40)\n      tag_113\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9389:9404  oracles[pToken] */\n      dup10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9389:9396  oracles */\n      0x98\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9389:9404  oracles[pToken] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9362:9405  PriceOracleUpdated(pToken, oracles[pToken]) */\n      swap1\n      mload\n      0x3305406be9630a8e3735461ddfb1c43204cdc73f28649e8038cafb44584d14bc\n      swap2\n      tag_114\n      swap2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9381:9387  pToken */\n      dup13\n      swap2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9389:9404  oracles[pToken] */\n      swap1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9362:9405  PriceOracleUpdated(pToken, oracles[pToken]) */\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1644:1645  _ */\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8193:9413  function addTokenConfig(address pToken, address underlying, string memory underlyingSymbol, uint256 baseUnit, bool fixedUsd,... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":2361:2412  mapping(address => TokenConfig) public tokenConfigs */\n    tag_29:\n      0x97\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup1\n      dup4\n      add\n      sload\n      0x02\n      dup1\n      dup6\n      add\n      dup1\n      sload\n      dup9\n      mload\n      0x0100\n      swap6\n      dup3\n      and\n      iszero\n      swap6\n      swap1\n      swap6\n      mul\n      not(0x00)\n      add\n      and\n      swap2\n      swap1\n      swap2\n      div\n      0x1f\n      dup2\n      add\n      dup8\n      swap1\n      div\n      dup8\n      mul\n      dup5\n      add\n      dup8\n      add\n      swap1\n      swap8\n      mstore\n      dup7\n      dup4\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      swap7\n      swap4\n      swap1\n      swap2\n      and\n      swap5\n      swap2\n      swap3\n      swap1\n      swap2\n      dup4\n      add\n      dup3\n      dup3\n      dup1\n      iszero\n      tag_116\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_117\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_116)\n    tag_117:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_118:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_118\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_116:\n      pop\n      pop\n      pop\n      pop\n      0x03\n      dup4\n      add\n      sload\n      0x04\n      swap1\n      swap4\n      add\n      sload\n      swap2\n      swap3\n      swap2\n      0xff\n      and\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11945:12114  function oracleLength(address pToken) public view returns (uint){... */\n    tag_34:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":12056:12071  oracles[pToken] */\n      dup2\n      and\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":12004:12008  uint */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":12056:12071  oracles[pToken] */\n      swap1\n      dup2\n      mstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":12056:12063  oracles */\n      0x98\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":12056:12071  oracles[pToken] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":12088:12107  priceOracles.length */\n      sload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11945:12114  function oracleLength(address pToken) public view returns (uint){... */\n    tag_119:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10052:10438  function updateTokenConfigBaseUnit(address pToken, uint256 baseUnit) public onlyOwner {... */\n    tag_40:\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1584:1596  _msgSender() */\n      tag_121\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1584:1594  _msgSender */\n      tag_87\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1584:1596  _msgSender() */\n      jump\t// in\n    tag_121:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1596  owner() == _msgSender() */\n      and\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1580  owner() */\n      tag_122\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1578  owner */\n      tag_53\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1580  owner() */\n      jump\t// in\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1596  owner() == _msgSender() */\n      and\n      eq\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1565:1633  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10182:10202  tokenConfigs[pToken] */\n      dup1\n      dup4\n      and\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10148:10179  TokenConfig storage tokenConfig */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10182:10202  tokenConfigs[pToken] */\n      swap1\n      dup2\n      mstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10182:10194  tokenConfigs */\n      0x97\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10182:10202  tokenConfigs[pToken] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10220:10238  tokenConfig.pToken */\n      dup1\n      sload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10182:10202  tokenConfigs[pToken] */\n      swap1\n      swap2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10220:10238  tokenConfig.pToken */\n      and\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10212:10267  require(tokenConfig.pToken != address(0), \"bad params\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_98\n      jump\t// in\n    tag_126:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10277:10297  tokenConfig.baseUnit */\n      0x03\n      dup2\n      add\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10277:10308  tokenConfig.baseUnit = baseUnit */\n      dup3\n      swap1\n      sstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10346:10368  tokenConfig.underlying */\n      0x01\n      dup2\n      add\n      sload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10410:10430  tokenConfig.fixedUsd */\n      0x04\n      dup3\n      add\n      sload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10324:10431  ConfigUpdated(pToken, tokenConfig.underlying, tokenConfig.underlyingSymbol, baseUnit, tokenConfig.fixedUsd) */\n      mload(0x40)\n      0x7e55bc43e6f0111474264fd86152c4a3e172abc29a15f5474298510ce6ff69ea\n      swap3\n      tag_128\n      swap3\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10338:10344  pToken */\n      dup8\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10346:10368  tokenConfig.underlying */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10370:10398  tokenConfig.underlyingSymbol */\n      0x02\n      dup8\n      add\n      swap2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10300:10308  baseUnit */\n      dup9\n      swap2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10410:10430  tokenConfig.fixedUsd */\n      0xff\n      swap1\n      swap2\n      and\n      swap1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10324:10431  ConfigUpdated(pToken, tokenConfig.underlying, tokenConfig.underlyingSymbol, baseUnit, tokenConfig.fixedUsd) */\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1644:1645  _ */\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10052:10438  function updateTokenConfigBaseUnit(address pToken, uint256 baseUnit) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/OwnableUpgradeable.sol\":2004:2152  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_42:\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1584:1596  _msgSender() */\n      tag_131\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1584:1594  _msgSender */\n      tag_87\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1584:1596  _msgSender() */\n      jump\t// in\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1596  owner() == _msgSender() */\n      and\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1580  owner() */\n      tag_132\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1578  owner */\n      tag_53\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1580  owner() */\n      jump\t// in\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1596  owner() == _msgSender() */\n      and\n      eq\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1565:1633  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_133:\n        /* \"openzeppelin/OwnableUpgradeable.sol\":2095:2101  _owner */\n      sload(0x65)\n        /* \"openzeppelin/OwnableUpgradeable.sol\":2074:2114  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n        /* \"openzeppelin/OwnableUpgradeable.sol\":2111:2112  0 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"openzeppelin/OwnableUpgradeable.sol\":2095:2101  _owner */\n      and\n      swap1\n        /* \"openzeppelin/OwnableUpgradeable.sol\":2074:2114  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"openzeppelin/OwnableUpgradeable.sol\":2111:2112  0 */\n      dup4\n      swap1\n        /* \"openzeppelin/OwnableUpgradeable.sol\":2074:2114  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"openzeppelin/OwnableUpgradeable.sol\":2125:2131  _owner */\n      0x65\n        /* \"openzeppelin/OwnableUpgradeable.sol\":2125:2144  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"openzeppelin/OwnableUpgradeable.sol\":2004:2152  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10444:10827  function updateTokenConfigFixedUsd(address pToken, bool fixedUsd) public onlyOwner {... */\n    tag_46:\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1584:1596  _msgSender() */\n      tag_137\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1584:1594  _msgSender */\n      tag_87\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1584:1596  _msgSender() */\n      jump\t// in\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1596  owner() == _msgSender() */\n      and\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1580  owner() */\n      tag_138\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1578  owner */\n      tag_53\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1580  owner() */\n      jump\t// in\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1596  owner() == _msgSender() */\n      and\n      eq\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1565:1633  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_139:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10571:10591  tokenConfigs[pToken] */\n      dup1\n      dup4\n      and\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10537:10568  TokenConfig storage tokenConfig */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10571:10591  tokenConfigs[pToken] */\n      swap1\n      dup2\n      mstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10571:10583  tokenConfigs */\n      0x97\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10571:10591  tokenConfigs[pToken] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10609:10627  tokenConfig.pToken */\n      dup1\n      sload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10571:10591  tokenConfigs[pToken] */\n      swap1\n      swap2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10609:10627  tokenConfig.pToken */\n      and\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10601:10656  require(tokenConfig.pToken != address(0), \"bad params\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_98\n      jump\t// in\n    tag_142:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10666:10686  tokenConfig.fixedUsd */\n      0x04\n      dup2\n      add\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10666:10697  tokenConfig.fixedUsd = fixedUsd */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup4\n      iszero\n      iszero\n      or\n      swap1\n      sstore\n      0x01\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10735:10757  tokenConfig.underlying */\n      dup2\n      add\n      sload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10789:10809  tokenConfig.baseUnit */\n      0x03\n      dup3\n      add\n      sload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10713:10820  ConfigUpdated(pToken, tokenConfig.underlying, tokenConfig.underlyingSymbol, tokenConfig.baseUnit, fixedUsd) */\n      mload(0x40)\n      0x7e55bc43e6f0111474264fd86152c4a3e172abc29a15f5474298510ce6ff69ea\n      swap3\n      tag_128\n      swap3\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10727:10733  pToken */\n      dup8\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10735:10757  tokenConfig.underlying */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10759:10787  tokenConfig.underlyingSymbol */\n      0x02\n      dup8\n      add\n      swap2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10789:10809  tokenConfig.baseUnit */\n      swap1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10666:10697  tokenConfig.fixedUsd = fixedUsd */\n      dup9\n      swap1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10713:10820  ConfigUpdated(pToken, tokenConfig.underlying, tokenConfig.underlyingSymbol, tokenConfig.baseUnit, fixedUsd) */\n      tag_129\n      jump\t// in\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":2472:2533  mapping(address => address) public chainLinkTokenEthPriceFeed */\n    tag_49:\n      mstore(0x20, 0x99)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\t// out\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1353:1440  function owner() public view virtual returns (address) {\r... */\n    tag_53:\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1426:1432  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x65))\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1353:1440  function owner() public view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10965:11428  function addOrUpdateChainLinkTokenEthPriceFeed(address[] memory tokens, address[] memory chainLinkTokenEthPriceFeeds) public onlyOwner {... */\n    tag_58:\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1584:1596  _msgSender() */\n      tag_147\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1584:1594  _msgSender */\n      tag_87\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1584:1596  _msgSender() */\n      jump\t// in\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1596  owner() == _msgSender() */\n      and\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1580  owner() */\n      tag_148\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1578  owner */\n      tag_53\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1580  owner() */\n      jump\t// in\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1596  owner() == _msgSender() */\n      and\n      eq\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1565:1633  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_149:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11136:11163  chainLinkTokenEthPriceFeeds */\n      dup1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11136:11170  chainLinkTokenEthPriceFeeds.length */\n      mload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11119:11125  tokens */\n      dup3\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11119:11132  tokens.length */\n      mload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11119:11170  tokens.length == chainLinkTokenEthPriceFeeds.length */\n      eq\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11111:11239  require(tokens.length == chainLinkTokenEthPriceFeeds.length, \"tokens.length must equal than chainLinkTokenEthPriceFeeds.length\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_154\n      jump\t// in\n    tag_152:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11255:11261  uint i */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11250:11421  for (uint i = 0; i < tokens.length; i++) {... */\n    tag_155:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11271:11277  tokens */\n      dup3\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11271:11284  tokens.length */\n      mload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11267:11268  i */\n      dup2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11267:11284  i < tokens.length */\n      lt\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11250:11421  for (uint i = 0; i < tokens.length; i++) {... */\n      iszero\n      tag_156\n      jumpi\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11305:11318  address token */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11321:11327  tokens */\n      dup4\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11328:11329  i */\n      dup3\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11321:11330  tokens[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_158\n      jumpi\n      invalid\n    tag_158:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11305:11330  address token = tokens[i] */\n      swap1\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11380:11407  chainLinkTokenEthPriceFeeds */\n      dup3\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11408:11409  i */\n      dup3\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11380:11410  chainLinkTokenEthPriceFeeds[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_159\n      jumpi\n      invalid\n    tag_159:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11344:11377  chainLinkTokenEthPriceFeed[token] */\n      swap3\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11344:11370  chainLinkTokenEthPriceFeed */\n      0x99\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11344:11377  chainLinkTokenEthPriceFeed[token] */\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11344:11410  chainLinkTokenEthPriceFeed[token] = chainLinkTokenEthPriceFeeds[i] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap3\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x01\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11286:11289  i++ */\n      add\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11250:11421  for (uint i = 0; i < tokens.length; i++) {... */\n      jump(tag_155)\n    tag_156:\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10965:11428  function addOrUpdateChainLinkTokenEthPriceFeed(address[] memory tokens, address[] memory chainLinkTokenEthPriceFeeds) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11435:11752  function getOracleSourcePrice(address pToken, uint sourceIndex) public view returns (uint){... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11570:11590  tokenConfigs[pToken] */\n      dup3\n      dup2\n      and\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11520:11524  uint */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11570:11590  tokenConfigs[pToken] */\n      swap1\n      dup2\n      mstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11570:11582  tokenConfigs */\n      0x97\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11570:11590  tokenConfigs[pToken] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11637:11644  oracles */\n      0x98\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11637:11652  oracles[pToken] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11670:11745  _getUnderlyingPriceInternal(pToken, tokenConfig, priceOracles[sourceIndex]) */\n      dup3\n      mload\n      0xa0\n      dup2\n      add\n      dup5\n      mstore\n      dup3\n      sload\n      dup8\n      and\n      dup2\n      mstore\n      0x01\n      dup1\n      dup5\n      add\n      sload\n      swap1\n      swap8\n      and\n      dup2\n      dup7\n      add\n      mstore\n      0x02\n      dup1\n      dup5\n      add\n      dup1\n      sload\n      dup7\n      mload\n      0x0100\n      swap11\n      dup3\n      and\n      iszero\n      swap11\n      swap1\n      swap11\n      mul\n      not(0x00)\n      add\n      and\n      swap2\n      swap1\n      swap2\n      div\n      0x1f\n      dup2\n      add\n      dup8\n      swap1\n      div\n      dup8\n      mul\n      dup10\n      add\n      dup8\n      add\n      dup7\n      mstore\n      dup1\n      dup10\n      mstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11520:11524  uint */\n      swap7\n      swap8\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11570:11590  tokenConfigs[pToken] */\n      swap4\n      swap7\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11637:11652  oracles[pToken] */\n      swap3\n      swap6\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11670:11745  _getUnderlyingPriceInternal(pToken, tokenConfig, priceOracles[sourceIndex]) */\n      tag_161\n      swap6\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11570:11590  tokenConfigs[pToken] */\n      dup12\n      swap6\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11670:11745  _getUnderlyingPriceInternal(pToken, tokenConfig, priceOracles[sourceIndex]) */\n      swap4\n      swap5\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11570:11590  tokenConfigs[pToken] */\n      dup10\n      swap5\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11670:11745  _getUnderlyingPriceInternal(pToken, tokenConfig, priceOracles[sourceIndex]) */\n      swap2\n      dup7\n      add\n      swap4\n      swap2\n      swap3\n      dup4\n      add\n      dup3\n      dup3\n      dup1\n      iszero\n      tag_162\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_163\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_162)\n    tag_163:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_164:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_164\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_162:\n      pop\n      pop\n      pop\n      swap2\n      dup4\n      mstore\n      pop\n      pop\n      0x03\n      dup3\n      add\n      sload\n      0x20\n      dup3\n      add\n      mstore\n      0x04\n      swap1\n      swap2\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0x40\n      swap1\n      swap2\n      add\n      mstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11719:11744  priceOracles[sourceIndex] */\n      dup4\n      sload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11719:11731  priceOracles */\n      dup5\n      swap1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11732:11743  sourceIndex */\n      dup9\n      swap1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11719:11744  priceOracles[sourceIndex] */\n      dup2\n      lt\n      tag_165\n      jumpi\n      invalid\n    tag_165:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11670:11745  _getUnderlyingPriceInternal(pToken, tokenConfig, priceOracles[sourceIndex]) */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11719:11744  priceOracles[sourceIndex] */\n      swap2\n      add\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11670:11745  _getUnderlyingPriceInternal(pToken, tokenConfig, priceOracles[sourceIndex]) */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup4\n      mstore\n      swap2\n      swap3\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11719:11744  priceOracles[sourceIndex] */\n      swap1\n      swap2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11670:11745  _getUnderlyingPriceInternal(pToken, tokenConfig, priceOracles[sourceIndex]) */\n      swap1\n      dup4\n      add\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      0x04\n      dup2\n      gt\n      iszero\n      tag_167\n      jumpi\n      invalid\n    tag_167:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_168\n      jumpi\n      invalid\n    tag_168:\n      dup2\n      mstore\n      swap1\n      sload\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      0x20\n      swap1\n      swap2\n      add\n      mstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11670:11697  _getUnderlyingPriceInternal */\n      tag_169\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11670:11745  _getUnderlyingPriceInternal(pToken, tokenConfig, priceOracles[sourceIndex]) */\n      jump\t// in\n    tag_161:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11663:11745  return _getUnderlyingPriceInternal(pToken, tokenConfig, priceOracles[sourceIndex]) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11435:11752  function getOracleSourcePrice(address pToken, uint sourceIndex) public view returns (uint){... */\n    tag_160:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":2418:2466  mapping(address => PriceOracle[]) public oracles */\n    tag_65:\n      mstore(0x20, 0x98)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_170\n      jumpi\n      invalid\n    tag_170:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap3\n      pop\n      0xff\n      shl(0xa0, 0x01)\n      dup3\n      div\n      dup2\n      and\n      swap3\n      pop\n      shl(0xa8, 0x01)\n      swap1\n      swap2\n      div\n      and\n      dup4\n      jump\t// out\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":2540:2577  address public ethUsdPriceFeedAddress */\n    tag_69:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x9a))\n      dup2\n      jump\t// out\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10833:10959  function setEthUsdPriceFeedAddress(address feedAddress) public onlyOwner {... */\n    tag_73:\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1584:1596  _msgSender() */\n      tag_173\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1584:1594  _msgSender */\n      tag_87\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1584:1596  _msgSender() */\n      jump\t// in\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1596  owner() == _msgSender() */\n      and\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1580  owner() */\n      tag_174\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1578  owner */\n      tag_53\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1580  owner() */\n      jump\t// in\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1596  owner() == _msgSender() */\n      and\n      eq\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1565:1633  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_175:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10916:10938  ethUsdPriceFeedAddress */\n      0x9a\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10916:10952  ethUsdPriceFeedAddress = feedAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":10833:10959  function setEthUsdPriceFeedAddress(address feedAddress) public onlyOwner {... */\n      jump\t// out\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9419:10046  function addOrUpdateTokenConfigSource(address pToken, uint256 index, address source, PriceOracleType _sourceType, bool available) public onlyOwner {... */\n    tag_77:\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1584:1596  _msgSender() */\n      tag_179\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1584:1594  _msgSender */\n      tag_87\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1584:1596  _msgSender() */\n      jump\t// in\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1596  owner() == _msgSender() */\n      and\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1580  owner() */\n      tag_180\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1578  owner */\n      tag_53\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1580  owner() */\n      jump\t// in\n    tag_180:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1596  owner() == _msgSender() */\n      and\n      eq\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1565:1633  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_181:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9606:9621  oracles[pToken] */\n      dup6\n      and\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9577:9603  PriceOracle[] storage list */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9606:9621  oracles[pToken] */\n      swap1\n      dup2\n      mstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9606:9613  oracles */\n      0x98\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9606:9621  oracles[pToken] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9636:9647  list.length */\n      dup1\n      sload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9636:9655  list.length > index */\n      dup6\n      lt\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9632:10039  if (list.length > index) {//will update... */\n      iszero\n      tag_184\n      jumpi\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9684:9710  PriceOracle storage oracle */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9713:9717  list */\n      dup2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9718:9723  index */\n      dup7\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9713:9724  list[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_185\n      jumpi\n      invalid\n    tag_185:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9738:9760  oracle.source = source */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      and\n      or\n      dup1\n      dup3\n      sstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9713:9724  list[index] */\n      swap1\n      swap2\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9794:9805  _sourceType */\n      dup5\n      swap1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9713:9724  list[index] */\n      dup3\n      swap1\n      not(shl(0xa0, 0xff))\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9774:9805  oracle.sourceType = _sourceType */\n      and\n      shl(0xa0, 0x01)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9794:9805  _sourceType */\n      dup4\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9774:9805  oracle.sourceType = _sourceType */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_187\n      jumpi\n      invalid\n    tag_187:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9819:9847  oracle.available = available */\n      dup1\n      sload\n      not(shl(0xa8, 0xff))\n      and\n      shl(0xa8, 0x01)\n      dup5\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9632:10039  if (list.length > index) {//will update... */\n      jump(tag_188)\n    tag_184:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9888:9892  list */\n      dup1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9898:10027  PriceOracle({... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9933:9939  source */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9898:10027  PriceOracle({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9966:9977  _sourceType */\n      dup6\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9898:10027  PriceOracle({... */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_189\n      jumpi\n      invalid\n    tag_189:\n      dup2\n      mstore\n      dup5\n      iszero\n      iszero\n      0x20\n      swap2\n      dup3\n      add\n      mstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9888:10028  list.push(PriceOracle({... */\n      dup3\n      sload\n      0x01\n      dup2\n      add\n      dup5\n      sstore\n      0x00\n      swap4\n      dup5\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n      dup3\n      mload\n      swap4\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      dup1\n      dup5\n      sstore\n      swap1\n      dup3\n      add\n      mload\n      swap2\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      dup4\n      0x04\n      dup2\n      gt\n      iszero\n      tag_191\n      jumpi\n      invalid\n    tag_191:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      swap2\n      swap1\n      swap2\n      add\n      mload\n      dup2\n      sload\n      swap1\n      iszero\n      iszero\n      shl(0xa8, 0x01)\n      mul\n      not(shl(0xa8, 0xff))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9632:10039  if (list.length > index) {//will update... */\n    tag_188:\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1644:1645  _ */\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":9419:10046  function addOrUpdateTokenConfigSource(address pToken, uint256 index, address source, PriceOracleType _sourceType, bool available) public onlyOwner {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/OwnableUpgradeable.sol\":2307:2551  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_80:\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1584:1596  _msgSender() */\n      tag_193\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1584:1594  _msgSender */\n      tag_87\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1584:1596  _msgSender() */\n      jump\t// in\n    tag_193:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1596  owner() == _msgSender() */\n      and\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1580  owner() */\n      tag_194\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1578  owner */\n      tag_53\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1580  owner() */\n      jump\t// in\n    tag_194:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1573:1596  owner() == _msgSender() */\n      and\n      eq\n        /* \"openzeppelin/OwnableUpgradeable.sol\":1565:1633  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"openzeppelin/OwnableUpgradeable.sol\":2396:2418  newOwner != address(0) */\n      dup2\n      and\n        /* \"openzeppelin/OwnableUpgradeable.sol\":2388:2461  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_200\n      jump\t// in\n    tag_198:\n        /* \"openzeppelin/OwnableUpgradeable.sol\":2498:2504  _owner */\n      sload(0x65)\n        /* \"openzeppelin/OwnableUpgradeable.sol\":2477:2515  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup5\n      and\n      swap3\n        /* \"openzeppelin/OwnableUpgradeable.sol\":2498:2504  _owner */\n      and\n      swap1\n        /* \"openzeppelin/OwnableUpgradeable.sol\":2477:2515  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"openzeppelin/OwnableUpgradeable.sol\":2498:2504  _owner */\n      0x00\n      swap1\n        /* \"openzeppelin/OwnableUpgradeable.sol\":2477:2515  OwnershipTransferred(_owner, newOwner) */\n      log3\n        /* \"openzeppelin/OwnableUpgradeable.sol\":2526:2532  _owner */\n      0x65\n        /* \"openzeppelin/OwnableUpgradeable.sol\":2526:2543  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"openzeppelin/OwnableUpgradeable.sol\":2307:2551  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":2809:3734  function getUnderlyingPrice(address _pToken) external view returns (uint){... */\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":2954:2975  tokenConfigs[_pToken] */\n      dup2\n      and\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":2877:2881  uint */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":2954:2975  tokenConfigs[_pToken] */\n      swap1\n      dup2\n      mstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":2954:2966  tokenConfigs */\n      0x97\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":2954:2975  tokenConfigs[_pToken] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":2989:3009  tokenConfig.fixedUsd */\n      0x04\n      dup2\n      add\n      sload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":2877:2881  uint */\n      dup3\n      swap2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":2954:2975  tokenConfigs[_pToken] */\n      swap1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":2989:3009  tokenConfig.fixedUsd */\n      0xff\n      and\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":2985:3143  if (tokenConfig.fixedUsd) {//if true,will return 1*e36/baseUnit... */\n      iszero\n      tag_202\n      jumpi\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3111:3131  tokenConfig.baseUnit */\n      0x03\n      dup2\n      add\n      sload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3069:3070  1 */\n      0x01\n      swap3\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3091:3132  price.mul(1e36).div(tokenConfig.baseUnit) */\n      tag_203\n      swap1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3091:3106  price.mul(1e36) */\n      tag_204\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3069:3070  1 */\n      dup5\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3101:3105  1e36 */\n      0xc097ce7bc90715b34b9f1000000000\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3091:3100  price.mul */\n      tag_205\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3091:3106  price.mul(1e36) */\n      jump\t// in\n    tag_204:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3091:3110  price.mul(1e36).div */\n      swap1\n      tag_206\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3091:3132  price.mul(1e36).div(tokenConfig.baseUnit) */\n      jump\t// in\n    tag_203:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3084:3132  return price.mul(1e36).div(tokenConfig.baseUnit) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_119)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":2985:3143  if (tokenConfig.fixedUsd) {//if true,will return 1*e36/baseUnit... */\n    tag_202:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3190:3206  oracles[_pToken] */\n      dup5\n      and\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3153:3187  PriceOracle[] storage priceOracles */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3190:3206  oracles[_pToken] */\n      swap1\n      dup2\n      mstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3190:3197  oracles */\n      0x98\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3190:3206  oracles[_pToken] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3216:3613  for (uint256 i = 0; i < priceOracles.length; i++) {... */\n    tag_207:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3240:3259  priceOracles.length */\n      dup2\n      sload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3236:3259  i < priceOracles.length */\n      dup2\n      lt\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3216:3613  for (uint256 i = 0; i < priceOracles.length; i++) {... */\n      iszero\n      tag_208\n      jumpi\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3280:3311  PriceOracle storage priceOracle */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3314:3326  priceOracles */\n      dup3\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3327:3328  i */\n      dup3\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3314:3329  priceOracles[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_210\n      jumpi\n      invalid\n    tag_210:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3347:3368  priceOracle.available */\n      dup1\n      sload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3314:3329  priceOracles[i] */\n      swap1\n      swap2\n      pop\n      shl(0xa8, 0x01)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3347:3368  priceOracle.available */\n      swap1\n      div\n      0xff\n      and\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3347:3376  priceOracle.available == true */\n      iszero\n      iszero\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3372:3376  true */\n      0x01\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3347:3376  priceOracle.available == true */\n      eq\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3343:3603  if (priceOracle.available == true) {// check the priceOracle is available... */\n      iszero\n      tag_219\n      jumpi\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3441:3503  _getUnderlyingPriceInternal(_pToken, tokenConfig, priceOracle) */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n      dup6\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x01\n      dup1\n      dup9\n      add\n      sload\n      swap1\n      swap2\n      and\n      0x20\n      dup1\n      dup5\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x02\n      dup1\n      dup10\n      add\n      dup1\n      sload\n      dup7\n      mload\n      0x0100\n      swap6\n      dup3\n      and\n      iszero\n      swap6\n      swap1\n      swap6\n      mul\n      not(0x00)\n      add\n      and\n      swap2\n      swap1\n      swap2\n      div\n      0x1f\n      dup2\n      add\n      dup4\n      swap1\n      div\n      dup4\n      mul\n      dup5\n      add\n      dup4\n      add\n      dup7\n      mstore\n      dup1\n      dup5\n      mstore\n      tag_213\n      swap6\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3469:3476  _pToken */\n      dup14\n      swap6\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3441:3503  _getUnderlyingPriceInternal(_pToken, tokenConfig, priceOracle) */\n      swap5\n      dup12\n      swap5\n      swap2\n      dup7\n      add\n      swap4\n      swap1\n      swap3\n      swap1\n      swap2\n      dup4\n      add\n      dup3\n      dup3\n      dup1\n      iszero\n      tag_214\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_215\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_214)\n    tag_215:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_216:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_216\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_214:\n      pop\n      pop\n      pop\n      swap2\n      dup4\n      mstore\n      pop\n      pop\n      0x03\n      dup3\n      add\n      sload\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x04\n      swap3\n      dup4\n      add\n      sload\n      0xff\n      swap1\n      dup2\n      and\n      iszero\n      iszero\n      0x40\n      swap4\n      dup5\n      add\n      mstore\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      swap1\n      swap4\n      mstore\n      dup8\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup5\n      mstore\n      swap3\n      swap4\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3491:3502  priceOracle */\n      dup9\n      swap4\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3441:3503  _getUnderlyingPriceInternal(_pToken, tokenConfig, priceOracle) */\n      swap3\n      dup6\n      add\n      swap3\n      shl(0xa0, 0x01)\n      swap1\n      div\n      swap1\n      swap2\n      and\n      swap1\n      dup2\n      gt\n      iszero\n      tag_167\n      jumpi\n      invalid\n    tag_213:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3433:3503  price = _getUnderlyingPriceInternal(_pToken, tokenConfig, priceOracle) */\n      swap5\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3525:3534  price > 0 */\n      dup5\n      iszero\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3521:3589  if (price > 0) {... */\n      tag_219\n      jumpi\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3565:3570  price */\n      dup5\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3558:3570  return price */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_119)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3521:3589  if (price > 0) {... */\n    tag_219:\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3261:3264  i++ */\n      0x01\n      add\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3216:3613  for (uint256 i = 0; i < priceOracles.length; i++) {... */\n      jump(tag_207)\n    tag_208:\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3675:3676  0 */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3667:3672  price */\n      dup4\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3667:3676  price > 0 */\n      gt\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3659:3708  require(price > 0, \"price must bigger than zero\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_222\n      jump\t// in\n    tag_220:\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3726:3727  0 */\n      0x00\n      swap5\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":2809:3734  function getUnderlyingPrice(address _pToken) external view returns (uint){... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/ContextUpgradeable.sol\":810:916  function _msgSender() internal view virtual returns (address payable) {\r... */\n    tag_87:\n        /* \"openzeppelin/ContextUpgradeable.sol\":898:908  msg.sender */\n      caller\n        /* \"openzeppelin/ContextUpgradeable.sol\":810:916  function _msgSender() internal view virtual returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3740:4942  function _getUnderlyingPriceInternal(address _pToken, TokenConfig memory tokenConfig, PriceOracle memory priceOracle) internal view returns (uint){... */\n    tag_169:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3881:3885  uint */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3897:3915  address underlying */\n      dup1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3926:3968  0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3897:3969  address underlying = address(0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE) */\n      swap1\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3979:4001  PTokenInterface pToken */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4020:4027  _pToken */\n      dup6\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3979:4028  PTokenInterface pToken = PTokenInterface(_pToken) */\n      swap1\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4044:4085  compareStrings(pToken.symbol(), \"pMATIC\") */\n      tag_225\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4059:4065  pToken */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4059:4072  pToken.symbol */\n      and\n      0x95d89b41\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4059:4074  pToken.symbol() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_226\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_226:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_228\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_228:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_229\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4044:4085  compareStrings(pToken.symbol(), \"pMATIC\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd0, 0x704d41544943)\n      dup2\n      mstore\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4044:4058  compareStrings */\n      tag_231\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4044:4085  compareStrings(pToken.symbol(), \"pMATIC\") */\n      jump\t// in\n    tag_225:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4039:4171  if (!compareStrings(pToken.symbol(), \"pMATIC\")) {... */\n      tag_232\n      jumpi\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4138:4145  _pToken */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4122:4157  PTokenInterface(_pToken).underlying */\n      and\n      0x6f307dc3\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4122:4159  PTokenInterface(_pToken).underlying() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_233\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_233:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_235\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_235:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_236\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4101:4160  underlying = address(PTokenInterface(_pToken).underlying()) */\n      swap2\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4039:4171  if (!compareStrings(pToken.symbol(), \"pMATIC\")) {... */\n    tag_232:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4210:4232  priceOracle.sourceType */\n      0x20\n      dup5\n      add\n      mload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4181:4207  PriceOracleType sourceType */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4246:4256  sourceType */\n      dup2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4246:4285  sourceType == PriceOracleType.ChainLink */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_239\n      jumpi\n      invalid\n    tag_239:\n      eq\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4242:4917  if (sourceType == PriceOracleType.ChainLink) {... */\n      iszero\n      tag_240\n      jumpi\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4308:4360  _getChainlinkPriceInternal(priceOracle, tokenConfig) */\n      tag_241\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4335:4346  priceOracle */\n      dup6\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4348:4359  tokenConfig */\n      dup8\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4308:4334  _getChainlinkPriceInternal */\n      tag_242\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4308:4360  _getChainlinkPriceInternal(priceOracle, tokenConfig) */\n      jump\t// in\n    tag_241:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4301:4360  return _getChainlinkPriceInternal(priceOracle, tokenConfig) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_224)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4242:4917  if (sourceType == PriceOracleType.ChainLink) {... */\n    tag_240:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4396:4419  PriceOracleType.UniSwap */\n      0x01\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4382:4392  sourceType */\n      dup2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4382:4419  sourceType == PriceOracleType.UniSwap */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_245\n      jumpi\n      invalid\n    tag_245:\n      eq\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4378:4917  if (sourceType == PriceOracleType.UniSwap) {... */\n      iszero\n      tag_246\n      jumpi\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4442:4492  _getUniSwapPriceInternal(priceOracle, tokenConfig) */\n      tag_241\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4467:4478  priceOracle */\n      dup6\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4480:4491  tokenConfig */\n      dup8\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4442:4466  _getUniSwapPriceInternal */\n      tag_248\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4442:4492  _getUniSwapPriceInternal(priceOracle, tokenConfig) */\n      jump\t// in\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4378:4917  if (sourceType == PriceOracleType.UniSwap) {... */\n    tag_246:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4526:4550  PriceOracleType.Compound */\n      0x02\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4512:4522  sourceType */\n      dup2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4512:4550  sourceType == PriceOracleType.Compound */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_251\n      jumpi\n      invalid\n    tag_251:\n      eq\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4508:4917  if (sourceType == PriceOracleType.Compound) {... */\n      iszero\n      tag_252\n      jumpi\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4573:4624  _getCompoundPriceInternal(priceOracle, tokenConfig) */\n      tag_241\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4599:4610  priceOracle */\n      dup6\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4612:4623  tokenConfig */\n      dup8\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4573:4598  _getCompoundPriceInternal */\n      tag_254\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4573:4624  _getCompoundPriceInternal(priceOracle, tokenConfig) */\n      jump\t// in\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4508:4917  if (sourceType == PriceOracleType.Compound) {... */\n    tag_252:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4659:4683  PriceOracleType.Customer */\n      0x03\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4645:4655  sourceType */\n      dup2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4645:4683  sourceType == PriceOracleType.Customer */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_257\n      jumpi\n      invalid\n    tag_257:\n      eq\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4641:4917  if (sourceType == PriceOracleType.Customer) {... */\n      iszero\n      tag_258\n      jumpi\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4706:4757  _getCustomerPriceInternal(priceOracle, tokenConfig) */\n      tag_241\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4732:4743  priceOracle */\n      dup6\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4745:4756  tokenConfig */\n      dup8\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4706:4731  _getCustomerPriceInternal */\n      tag_260\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4706:4757  _getCustomerPriceInternal(priceOracle, tokenConfig) */\n      jump\t// in\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4641:4917  if (sourceType == PriceOracleType.Customer) {... */\n    tag_258:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4792:4824  PriceOracleType.ChainLinkEthBase */\n      0x04\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4778:4788  sourceType */\n      dup2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4778:4824  sourceType == PriceOracleType.ChainLinkEthBase */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_263\n      jumpi\n      invalid\n    tag_263:\n      eq\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4774:4917  if (sourceType == PriceOracleType.ChainLinkEthBase) {... */\n      iszero\n      tag_264\n      jumpi\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4847:4906  _getChainLinkEthBasePriceInternal(priceOracle, tokenConfig) */\n      tag_241\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4881:4892  priceOracle */\n      dup6\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4894:4905  tokenConfig */\n      dup8\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4847:4880  _getChainLinkEthBasePriceInternal */\n      tag_266\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4847:4906  _getChainLinkEthBasePriceInternal(priceOracle, tokenConfig) */\n      jump\t// in\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4774:4917  if (sourceType == PriceOracleType.ChainLinkEthBase) {... */\n    tag_264:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4934:4935  0 */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4927:4935  return 0 */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":3740:4942  function _getUnderlyingPriceInternal(address _pToken, TokenConfig memory tokenConfig, PriceOracle memory priceOracle) internal view returns (uint){... */\n    tag_224:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/SafeMath.sol\":3645:3865  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_205:\n        /* \"openzeppelin/SafeMath.sol\":3703:3710  uint256 */\n      0x00\n        /* \"openzeppelin/SafeMath.sol\":3727:3733  a == 0 */\n      dup3\n        /* \"openzeppelin/SafeMath.sol\":3723:3743  if (a == 0) return 0 */\n      tag_268\n      jumpi\n      pop\n        /* \"openzeppelin/SafeMath.sol\":3742:3743  0 */\n      0x00\n        /* \"openzeppelin/SafeMath.sol\":3735:3743  return 0 */\n      jump(tag_160)\n        /* \"openzeppelin/SafeMath.sol\":3723:3743  if (a == 0) return 0 */\n    tag_268:\n        /* \"openzeppelin/SafeMath.sol\":3766:3771  a * b */\n      dup3\n      dup3\n      mul\n        /* \"openzeppelin/SafeMath.sol\":3770:3771  b */\n      dup3\n        /* \"openzeppelin/SafeMath.sol\":3766:3767  a */\n      dup5\n        /* \"openzeppelin/SafeMath.sol\":3766:3771  a * b */\n      dup3\n        /* \"openzeppelin/SafeMath.sol\":3766:3767  a */\n      dup2\n        /* \"openzeppelin/SafeMath.sol\":3790:3795  c / a */\n      tag_269\n      jumpi\n      invalid\n    tag_269:\n      div\n        /* \"openzeppelin/SafeMath.sol\":3790:3800  c / a == b */\n      eq\n        /* \"openzeppelin/SafeMath.sol\":3782:3838  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_272\n      jump\t// in\n        /* \"openzeppelin/SafeMath.sol\":4343:4496  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_206:\n        /* \"openzeppelin/SafeMath.sol\":4401:4408  uint256 */\n      0x00\n        /* \"openzeppelin/SafeMath.sol\":4433:4434  0 */\n      dup1\n        /* \"openzeppelin/SafeMath.sol\":4429:4430  b */\n      dup3\n        /* \"openzeppelin/SafeMath.sol\":4429:4434  b > 0 */\n      gt\n        /* \"openzeppelin/SafeMath.sol\":4421:4465  require(b > 0, \"SafeMath: division by zero\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_276\n      jump\t// in\n    tag_274:\n        /* \"openzeppelin/SafeMath.sol\":4487:4488  b */\n      dup2\n        /* \"openzeppelin/SafeMath.sol\":4483:4484  a */\n      dup4\n        /* \"openzeppelin/SafeMath.sol\":4483:4488  a / b */\n      dup2\n      tag_277\n      jumpi\n      invalid\n    tag_277:\n      div\n      swap4\n        /* \"openzeppelin/SafeMath.sol\":4343:4496  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11758:11939  function compareStrings(string memory a, string memory b) internal pure returns (bool) {... */\n    tag_231:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11839:11843  bool */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11927:11928  b */\n      dup2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11909:11930  abi.encodePacked((b)) */\n      add(0x20, mload(0x40))\n      tag_279\n      swap2\n      swap1\n      tag_280\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11899:11931  keccak256(abi.encodePacked((b))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11891:11892  a */\n      dup4\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11873:11894  abi.encodePacked((a)) */\n      add(0x20, mload(0x40))\n      tag_281\n      swap2\n      swap1\n      tag_280\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11863:11895  keccak256(abi.encodePacked((a))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11863:11931  keccak256(abi.encodePacked((a))) == keccak256(abi.encodePacked((b))) */\n      eq\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11855:11932  return (keccak256(abi.encodePacked((a))) == keccak256(abi.encodePacked((b)))) */\n      swap1\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":11758:11939  function compareStrings(string memory a, string memory b) internal pure returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6716:7290  function _getChainlinkPriceInternal(PriceOracle memory priceOracle, TokenConfig memory tokenConfig) internal view returns (uint){... */\n    tag_242:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6839:6843  uint */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6886:6887  0 */\n      dup1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6863:6874  tokenConfig */\n      dup3\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6863:6883  tokenConfig.baseUnit */\n      0x60\n      add\n      mload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6863:6887  tokenConfig.baseUnit > 0 */\n      gt\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6855:6926  require(tokenConfig.baseUnit > 0, \"baseUnit must be greater than zero\") */\n      tag_283\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_285\n      jump\t// in\n    tag_283:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6937:6968  AggregatorV3Interface priceFeed */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6993:7004  priceOracle */\n      dup4\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6993:7011  priceOracle.source */\n      0x00\n      add\n      mload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6937:7012  AggregatorV3Interface priceFeed = AggregatorV3Interface(priceOracle.source) */\n      swap1\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7024:7033  int price */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7040:7049  priceFeed */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7040:7065  priceFeed.latestRoundData */\n      and\n      0xfeaf968c\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7040:7067  priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_286\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_286:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_288\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_288:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_289\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_289:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7022:7067  (,int price,,,) = priceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7091:7092  0 */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7082:7087  price */\n      dup2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7082:7092  price <= 0 */\n      sgt\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7078:7283  if (price <= 0) {... */\n      tag_291\n      jumpi\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7115:7116  0 */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7108:7116  return 0 */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_160)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7078:7283  if (price <= 0) {... */\n    tag_291:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7251:7271  tokenConfig.baseUnit */\n      0x60\n      dup5\n      add\n      mload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7225:7272  uint(price).mul(1e28).div(tokenConfig.baseUnit) */\n      tag_293\n      swap1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7225:7246  uint(price).mul(1e28) */\n      tag_204\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7230:7235  price */\n      dup4\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7241:7245  1e28 */\n      0x204fce5e3e25026110000000\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7225:7240  uint(price).mul */\n      tag_205\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7225:7246  uint(price).mul(1e28) */\n      jump\t// in\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7225:7272  uint(price).mul(1e28).div(tokenConfig.baseUnit) */\n    tag_293:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7218:7272  return uint(price).mul(1e28).div(tokenConfig.baseUnit) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_160)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":4948:5516  function _getUniSwapPriceInternal(PriceOracle memory priceOracle, TokenConfig memory tokenConfig) internal view returns (uint) {... */\n    tag_248:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5102:5120  priceOracle.source */\n      dup2\n      mload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5272:5294  tokenConfig.underlying */\n      0x20\n      dup3\n      add\n      mload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5237:5295  uniSwapPriceOracle.getUniSwapPrice(tokenConfig.underlying) */\n      mload(0x40)\n      shl(0xe5, 0x0141c631)\n      dup2\n      mstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5069:5073  uint */\n      0x00\n      swap3\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5102:5120  priceOracle.source */\n      swap2\n      dup3\n      swap2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5069:5073  uint */\n      dup5\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5237:5271  uniSwapPriceOracle.getUniSwapPrice */\n      dup5\n      and\n      swap2\n      0x2838c620\n      swap2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5237:5295  uniSwapPriceOracle.getUniSwapPrice(tokenConfig.underlying) */\n      tag_296\n      swap2\n      0x04\n      add\n      tag_51\n      jump\t// in\n    tag_296:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_297\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_297:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_299\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_299:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_300\n      swap2\n      swap1\n      tag_301\n      jump\t// in\n    tag_300:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5224:5295  uint price = uniSwapPriceOracle.getUniSwapPrice(tokenConfig.underlying) */\n      swap1\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5318:5319  0 */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5309:5314  price */\n      dup2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5309:5319  price <= 0 */\n      gt\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5305:5510  if (price <= 0) {... */\n      tag_302\n      jumpi\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5342:5343  0 */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5335:5343  return 0 */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_160)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5305:5510  if (price <= 0) {... */\n    tag_302:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5478:5498  tokenConfig.baseUnit */\n      0x60\n      dup6\n      add\n      mload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5452:5499  uint(price).mul(1e28).div(tokenConfig.baseUnit) */\n      tag_304\n      swap1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5452:5473  uint(price).mul(1e28) */\n      tag_204\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5457:5462  price */\n      dup4\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5468:5472  1e28 */\n      0x204fce5e3e25026110000000\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5452:5467  uint(price).mul */\n      tag_205\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5452:5473  uint(price).mul(1e28) */\n      jump\t// in\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5452:5499  uint(price).mul(1e28).div(tokenConfig.baseUnit) */\n    tag_304:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5445:5499  return uint(price).mul(1e28).div(tokenConfig.baseUnit) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_160)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6142:6670  function _getCompoundPriceInternal(PriceOracle memory priceOracle, TokenConfig memory tokenConfig) internal view returns (uint) {... */\n    tag_254:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6297:6315  priceOracle.source */\n      dup2\n      mload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6264:6268  uint */\n      0x00\n      swap1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6297:6315  priceOracle.source */\n      dup1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6422:6474  CompoundPriceOracleInterface.CTokenConfig memory ctc */\n      tag_307\n      tag_308\n      jump\t// in\n    tag_307:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6520:6548  tokenConfig.underlyingSymbol */\n      0x40\n      dup1\n      dup7\n      add\n      mload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6477:6549  compoundPriceOracle.getTokenConfigBySymbol(tokenConfig.underlyingSymbol) */\n      swap1\n      mload\n      shl(0xe1, 0x13b6165d)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6477:6519  compoundPriceOracle.getTokenConfigBySymbol */\n      dup5\n      and\n      swap2\n      0x276c2cba\n      swap2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6477:6549  compoundPriceOracle.getTokenConfigBySymbol(tokenConfig.underlyingSymbol) */\n      tag_309\n      swap2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6520:6548  tokenConfig.underlyingSymbol */\n      swap1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6477:6549  compoundPriceOracle.getTokenConfigBySymbol(tokenConfig.underlyingSymbol) */\n      0x04\n      add\n      tag_310\n      jump\t// in\n    tag_309:\n      0x0100\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_311\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_311:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_313\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_313:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_314\n      swap2\n      swap1\n      tag_315\n      jump\t// in\n    tag_314:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6583:6593  ctc.cToken */\n      dup1\n      mload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6610:6663  compoundPriceOracle.getUnderlyingPrice(cTokenAddress) */\n      mload(0x40)\n      shl(0xe0, 0xfc57d4df)\n      dup2\n      mstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6422:6549  CompoundPriceOracleInterface.CTokenConfig memory ctc = compoundPriceOracle.getTokenConfigBySymbol(tokenConfig.underlyingSymbol) */\n      swap2\n      swap3\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6583:6593  ctc.cToken */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6610:6648  compoundPriceOracle.getUnderlyingPrice */\n      dup5\n      and\n      swap1\n      0xfc57d4df\n      swap1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6610:6663  compoundPriceOracle.getUnderlyingPrice(cTokenAddress) */\n      tag_316\n      swap1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6583:6593  ctc.cToken */\n      dup5\n      swap1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6610:6663  compoundPriceOracle.getUnderlyingPrice(cTokenAddress) */\n      0x04\n      add\n      tag_51\n      jump\t// in\n    tag_316:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_317\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_317:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_319\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_319:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_320\n      swap2\n      swap1\n      tag_301\n      jump\t// in\n    tag_320:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6603:6663  return compoundPriceOracle.getUnderlyingPrice(cTokenAddress) */\n      swap8\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":6142:6670  function _getCompoundPriceInternal(PriceOracle memory priceOracle, TokenConfig memory tokenConfig) internal view returns (uint) {... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5522:6098  function _getCustomerPriceInternal(PriceOracle memory priceOracle, TokenConfig memory tokenConfig) internal view returns (uint) {... */\n    tag_260:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5677:5695  priceOracle.source */\n      dup2\n      mload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5854:5876  tokenConfig.underlying */\n      0x20\n      dup3\n      add\n      mload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5825:5877  customerPriceOracle.getPrice(tokenConfig.underlying) */\n      mload(0x40)\n      shl(0xe0, 0x41976e09)\n      dup2\n      mstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5644:5648  uint */\n      0x00\n      swap3\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5677:5695  priceOracle.source */\n      swap2\n      dup3\n      swap2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5644:5648  uint */\n      dup5\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5825:5853  customerPriceOracle.getPrice */\n      dup5\n      and\n      swap2\n      0x41976e09\n      swap2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":5825:5877  customerPriceOracle.getPrice(tokenConfig.underlying) */\n      tag_296\n      swap2\n      0x04\n      add\n      tag_51\n      jump\t// in\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7333:8187  function _getChainLinkEthBasePriceInternal(PriceOracle memory priceOracle, TokenConfig memory tokenConfig) internal view returns (uint){... */\n    tag_266:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7463:7467  uint */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7509:7510  0 */\n      dup1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7486:7497  tokenConfig */\n      dup3\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7486:7506  tokenConfig.baseUnit */\n      0x60\n      add\n      mload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7486:7510  tokenConfig.baseUnit > 0 */\n      gt\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7478:7549  require(tokenConfig.baseUnit > 0, \"baseUnit must be greater than zero\") */\n      tag_332\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_285\n      jump\t// in\n    tag_332:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7576:7598  tokenConfig.underlying */\n      0x20\n      dup1\n      dup4\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7672:7705  chainLinkTokenEthPriceFeed[token] */\n      dup1\n      dup3\n      and\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7560:7573  address token */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7672:7705  chainLinkTokenEthPriceFeed[token] */\n      swap1\n      dup2\n      mstore\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7672:7698  chainLinkTokenEthPriceFeed */\n      0x99\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7672:7705  chainLinkTokenEthPriceFeed[token] */\n      swap1\n      swap4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7742:7777  tokenEthPriceFeed.latestRoundData() */\n      dup2\n      mload\n      shl(0xe2, 0x3fabe5a3)\n      dup2\n      mstore\n      swap2\n      mload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7576:7598  tokenConfig.underlying */\n      swap4\n      swap5\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7672:7705  chainLinkTokenEthPriceFeed[token] */\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7742:7775  tokenEthPriceFeed.latestRoundData */\n      0xfeaf968c\n      swap2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7742:7777  tokenEthPriceFeed.latestRoundData() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0xa0\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7672:7705  chainLinkTokenEthPriceFeed[token] */\n      dup7\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7742:7777  tokenEthPriceFeed.latestRoundData() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_334\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_334:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_336\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_336:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_337\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_337:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7716:7777  (,int tokenEthPrice,,,) = tokenEthPriceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7788:7825  AggregatorV3Interface ethUsdPriceFeed */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7850:7872  ethUsdPriceFeedAddress */\n      0x9a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7788:7873  AggregatorV3Interface ethUsdPriceFeed = AggregatorV3Interface(ethUsdPriceFeedAddress) */\n      swap1\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7885:7900  int ethUsdPrice */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7907:7922  ethUsdPriceFeed */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7907:7938  ethUsdPriceFeed.latestRoundData */\n      and\n      0xfeaf968c\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7907:7940  ethUsdPriceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_338\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_338:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_340\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_340:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_341\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_341:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7883:7940  (,int ethUsdPrice,,,) = ethUsdPriceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7972:7973  0 */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7955:7968  tokenEthPrice */\n      dup4\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7955:7973  tokenEthPrice <= 0 */\n      sgt\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7951:8181  if (tokenEthPrice <= 0) {... */\n      tag_342\n      jumpi\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7996:7997  0 */\n      0x00\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7989:7997  return 0 */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_160)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7951:8181  if (tokenEthPrice <= 0) {... */\n    tag_342:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8149:8169  tokenConfig.baseUnit */\n      0x60\n      dup8\n      add\n      mload\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8092:8170  uint(tokenEthPrice).mul(uint(ethUsdPrice)).mul(1e10).div(tokenConfig.baseUnit) */\n      tag_344\n      swap1\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8092:8144  uint(tokenEthPrice).mul(uint(ethUsdPrice)).mul(1e10) */\n      tag_204\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8139:8143  1e10 */\n      0x02540be400\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8092:8134  uint(tokenEthPrice).mul(uint(ethUsdPrice)) */\n      tag_346\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8097:8110  tokenEthPrice */\n      dup8\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8121:8132  ethUsdPrice */\n      dup7\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8092:8115  uint(tokenEthPrice).mul */\n      tag_205\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8092:8134  uint(tokenEthPrice).mul(uint(ethUsdPrice)) */\n      jump\t// in\n    tag_346:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8092:8138  uint(tokenEthPrice).mul(uint(ethUsdPrice)).mul */\n      swap1\n      tag_205\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8092:8144  uint(tokenEthPrice).mul(uint(ethUsdPrice)).mul(1e10) */\n      jump\t// in\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8092:8170  uint(tokenEthPrice).mul(uint(ethUsdPrice)).mul(1e10).div(tokenConfig.baseUnit) */\n    tag_344:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":8085:8170  return uint(tokenEthPrice).mul(uint(ethUsdPrice)).mul(1e10).div(tokenConfig.baseUnit) */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_160)\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7951:8181  if (tokenEthPrice <= 0) {... */\n    tag_343:\n        /* \"oracle/DeveloperLendPriceProviderV1.sol\":7333:8187  function _getChainLinkEthBasePriceInternal(PriceOracle memory priceOracle, TokenConfig memory tokenConfig) internal view returns (uint){... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_100:\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      0x1f\n      lt\n      tag_348\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_350)\n    tag_348:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_350\n      jumpi\n      swap2\n      dup3\n      add\n    tag_349:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_350\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_349)\n    tag_350:\n      pop\n      tag_351\n      swap3\n      swap2\n      pop\n      tag_352\n      jump\t// in\n    tag_351:\n      pop\n      swap1\n      jump\t// out\n    tag_308:\n      0x40\n      dup1\n      mload\n      0x0100\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x60\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      swap1\n      0x80\n      dup3\n      add\n      swap1\n      dup2\n      mstore\n      0x00\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x60\n      swap1\n      swap2\n      add\n      mstore\n      swap1\n      jump\t// out\n    tag_352:\n    tag_354:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_351\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_354)\n        /* \"--CODEGEN--\":142:276   */\n    tag_357:\n        /* \"--CODEGEN--\":220:233   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":238:271   */\n      tag_160\n        /* \"--CODEGEN--\":220:233   */\n      dup2\n        /* \"--CODEGEN--\":238:271   */\n      tag_360\n      jump\t// in\n        /* \"--CODEGEN--\":301:1008   */\n    tag_361:\n      0x00\n        /* \"--CODEGEN--\":418:421   */\n      dup3\n        /* \"--CODEGEN--\":411:415   */\n      0x1f\n        /* \"--CODEGEN--\":403:409   */\n      dup4\n        /* \"--CODEGEN--\":399:416   */\n      add\n        /* \"--CODEGEN--\":395:422   */\n      slt\n        /* \"--CODEGEN--\":385:387   */\n      tag_363\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":426:438   */\n      revert\n        /* \"--CODEGEN--\":385:387   */\n    tag_363:\n        /* \"--CODEGEN--\":473:479   */\n      dup2\n        /* \"--CODEGEN--\":460:480   */\n      calldataload\n        /* \"--CODEGEN--\":27217:27235   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":27209:27215   */\n      dup2\n        /* \"--CODEGEN--\":27206:27236   */\n      gt\n        /* \"--CODEGEN--\":27203:27205   */\n      iszero\n      tag_364\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":27239:27251   */\n      revert\n        /* \"--CODEGEN--\":27203:27205   */\n    tag_364:\n        /* \"--CODEGEN--\":27284:27288   */\n      0x20\n      dup1\n        /* \"--CODEGEN--\":27276:27282   */\n      dup3\n        /* \"--CODEGEN--\":27272:27289   */\n      mul\n        /* \"--CODEGEN--\":495:575   */\n      tag_365\n        /* \"--CODEGEN--\":27284:27288   */\n      dup3\n        /* \"--CODEGEN--\":27272:27289   */\n      dup3\n        /* \"--CODEGEN--\":27337:27352   */\n      add\n        /* \"--CODEGEN--\":495:575   */\n      tag_366\n      jump\t// in\n    tag_365:\n        /* \"--CODEGEN--\":603:624   */\n      dup4\n      dup2\n      mstore\n        /* \"--CODEGEN--\":486:575   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":660:674   */\n      dup2\n      dup5\n      add\n        /* \"--CODEGEN--\":635:652   */\n      dup6\n      dup4\n      add\n        /* \"--CODEGEN--\":740:767   */\n      dup3\n      dup8\n      add\n      dup5\n      add\n        /* \"--CODEGEN--\":737:773   */\n      dup9\n      lt\n        /* \"--CODEGEN--\":734:736   */\n      iszero\n      tag_367\n      jumpi\n        /* \"--CODEGEN--\":786:787   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":776:788   */\n      revert\n        /* \"--CODEGEN--\":734:736   */\n    tag_367:\n        /* \"--CODEGEN--\":811:812   */\n      0x00\n        /* \"--CODEGEN--\":802:812   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":796:1002   */\n    tag_368:\n        /* \"--CODEGEN--\":821:827   */\n      dup5\n        /* \"--CODEGEN--\":818:819   */\n      dup4\n        /* \"--CODEGEN--\":815:828   */\n      lt\n        /* \"--CODEGEN--\":796:1002   */\n      iszero\n      tag_343\n      jumpi\n        /* \"--CODEGEN--\":85:91   */\n      dup1\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_371\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_360\n      jump\t// in\n    tag_371:\n        /* \"--CODEGEN--\":889:939   */\n      dup3\n      mstore\n        /* \"--CODEGEN--\":843:844   */\n      0x01\n        /* \"--CODEGEN--\":836:845   */\n      swap3\n      swap1\n      swap3\n      add\n      swap2\n        /* \"--CODEGEN--\":953:967   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"--CODEGEN--\":981:995   */\n      dup4\n      add\n        /* \"--CODEGEN--\":796:1002   */\n      jump(tag_368)\n        /* \"--CODEGEN--\":1076:1447   */\n    tag_372:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":1225:1228   */\n      dup4\n        /* \"--CODEGEN--\":1218:1222   */\n      0x1f\n        /* \"--CODEGEN--\":1210:1216   */\n      dup5\n        /* \"--CODEGEN--\":1206:1223   */\n      add\n        /* \"--CODEGEN--\":1202:1229   */\n      slt\n        /* \"--CODEGEN--\":1192:1194   */\n      tag_374\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":1233:1245   */\n      revert\n        /* \"--CODEGEN--\":1192:1194   */\n    tag_374:\n      pop\n        /* \"--CODEGEN--\":1263:1283   */\n      dup2\n      calldataload\n        /* \"--CODEGEN--\":1303:1321   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":1292:1322   */\n      dup2\n      gt\n        /* \"--CODEGEN--\":1289:1291   */\n      iszero\n      tag_375\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":1325:1337   */\n      revert\n        /* \"--CODEGEN--\":1289:1291   */\n    tag_375:\n        /* \"--CODEGEN--\":1369:1373   */\n      0x20\n        /* \"--CODEGEN--\":1361:1367   */\n      dup4\n        /* \"--CODEGEN--\":1357:1374   */\n      add\n        /* \"--CODEGEN--\":1345:1374   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":1420:1423   */\n      dup4\n        /* \"--CODEGEN--\":1369:1373   */\n      0x20\n      dup1\n        /* \"--CODEGEN--\":1404:1410   */\n      dup4\n        /* \"--CODEGEN--\":1400:1417   */\n      mul\n        /* \"--CODEGEN--\":1361:1367   */\n      dup6\n        /* \"--CODEGEN--\":1386:1418   */\n      add\n      add\n        /* \"--CODEGEN--\":1383:1424   */\n      gt\n        /* \"--CODEGEN--\":1380:1382   */\n      iszero\n      tag_376\n      jumpi\n        /* \"--CODEGEN--\":1437:1438   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":1427:1439   */\n      revert\n        /* \"--CODEGEN--\":1380:1382   */\n    tag_376:\n        /* \"--CODEGEN--\":1185:1447   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":1455:1579   */\n    tag_377:\n        /* \"--CODEGEN--\":1519:1539   */\n      dup1\n      calldataload\n        /* \"--CODEGEN--\":1544:1574   */\n      tag_160\n        /* \"--CODEGEN--\":1519:1539   */\n      dup2\n        /* \"--CODEGEN--\":1544:1574   */\n      tag_380\n      jump\t// in\n        /* \"--CODEGEN--\":1586:1714   */\n    tag_381:\n        /* \"--CODEGEN--\":1661:1674   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":1679:1709   */\n      tag_160\n        /* \"--CODEGEN--\":1661:1674   */\n      dup2\n        /* \"--CODEGEN--\":1679:1709   */\n      tag_380\n      jump\t// in\n        /* \"--CODEGEN--\":1862:2030   */\n    tag_384:\n        /* \"--CODEGEN--\":1948:1968   */\n      dup1\n      calldataload\n        /* \"--CODEGEN--\":32361:32362   */\n      0x05\n        /* \"--CODEGEN--\":32351:32363   */\n      dup2\n      lt\n        /* \"--CODEGEN--\":32341:32343   */\n      tag_160\n      jumpi\n        /* \"--CODEGEN--\":32377:32378   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":32367:32379   */\n      revert\n        /* \"--CODEGEN--\":2037:2201   */\n    tag_387:\n        /* \"--CODEGEN--\":2130:2143   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":32477:32478   */\n      0x03\n        /* \"--CODEGEN--\":32467:32479   */\n      dup2\n      lt\n        /* \"--CODEGEN--\":32457:32459   */\n      tag_160\n      jumpi\n        /* \"--CODEGEN--\":32493:32494   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":32483:32495   */\n      revert\n        /* \"--CODEGEN--\":2348:2790   */\n    tag_390:\n      0x00\n        /* \"--CODEGEN--\":2450:2453   */\n      dup3\n        /* \"--CODEGEN--\":2443:2447   */\n      0x1f\n        /* \"--CODEGEN--\":2435:2441   */\n      dup4\n        /* \"--CODEGEN--\":2431:2448   */\n      add\n        /* \"--CODEGEN--\":2427:2454   */\n      slt\n        /* \"--CODEGEN--\":2417:2419   */\n      tag_392\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":2458:2470   */\n      revert\n        /* \"--CODEGEN--\":2417:2419   */\n    tag_392:\n        /* \"--CODEGEN--\":2505:2511   */\n      dup2\n        /* \"--CODEGEN--\":2492:2512   */\n      calldataload\n        /* \"--CODEGEN--\":2527:2592   */\n      tag_393\n        /* \"--CODEGEN--\":2542:2591   */\n      tag_394\n        /* \"--CODEGEN--\":2584:2590   */\n      dup3\n        /* \"--CODEGEN--\":2542:2591   */\n      tag_395\n      jump\t// in\n    tag_394:\n        /* \"--CODEGEN--\":2527:2592   */\n      tag_366\n      jump\t// in\n    tag_393:\n        /* \"--CODEGEN--\":2518:2592   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":2612:2618   */\n      dup1\n        /* \"--CODEGEN--\":2605:2610   */\n      dup3\n        /* \"--CODEGEN--\":2598:2619   */\n      mstore\n        /* \"--CODEGEN--\":2716:2719   */\n      dup4\n        /* \"--CODEGEN--\":2648:2652   */\n      0x20\n        /* \"--CODEGEN--\":2707:2713   */\n      dup3\n        /* \"--CODEGEN--\":2640:2646   */\n      dup6\n        /* \"--CODEGEN--\":2698:2714   */\n      add\n      add\n        /* \"--CODEGEN--\":2695:2720   */\n      gt\n        /* \"--CODEGEN--\":2692:2694   */\n      iszero\n      tag_396\n      jumpi\n        /* \"--CODEGEN--\":2733:2734   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":2723:2735   */\n      revert\n        /* \"--CODEGEN--\":2692:2694   */\n    tag_396:\n        /* \"--CODEGEN--\":30456:30462   */\n      dup1\n        /* \"--CODEGEN--\":2648:2652   */\n      0x20\n        /* \"--CODEGEN--\":2640:2646   */\n      dup5\n        /* \"--CODEGEN--\":2636:2653   */\n      add\n        /* \"--CODEGEN--\":2648:2652   */\n      0x20\n        /* \"--CODEGEN--\":2674:2679   */\n      dup5\n        /* \"--CODEGEN--\":2670:2686   */\n      add\n        /* \"--CODEGEN--\":30433:30463   */\n      calldatacopy\n        /* \"--CODEGEN--\":30512:30513   */\n      0x00\n        /* \"--CODEGEN--\":30494:30510   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":2648:2652   */\n      0x20\n        /* \"--CODEGEN--\":30494:30510   */\n      add\n        /* \"--CODEGEN--\":30487:30514   */\n      mstore\n        /* \"--CODEGEN--\":2674:2679   */\n      swap3\n        /* \"--CODEGEN--\":2410:2790   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":5098:5230   */\n    tag_397:\n        /* \"--CODEGEN--\":5175:5188   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":30188:30210   */\n      0xffffffffffffffffffff\n        /* \"--CODEGEN--\":30177:30211   */\n      dup2\n      and\n        /* \"--CODEGEN--\":32813:32847   */\n      dup2\n      eq\n        /* \"--CODEGEN--\":32803:32805   */\n      tag_160\n      jumpi\n        /* \"--CODEGEN--\":32861:32862   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":32851:32863   */\n      revert\n        /* \"--CODEGEN--\":5237:5478   */\n    tag_28:\n      0x00\n        /* \"--CODEGEN--\":5341:5343   */\n      0x20\n        /* \"--CODEGEN--\":5329:5338   */\n      dup3\n        /* \"--CODEGEN--\":5320:5327   */\n      dup5\n        /* \"--CODEGEN--\":5316:5339   */\n      sub\n        /* \"--CODEGEN--\":5312:5344   */\n      slt\n        /* \"--CODEGEN--\":5309:5311   */\n      iszero\n      tag_401\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":5347:5359   */\n      revert\n        /* \"--CODEGEN--\":5309:5311   */\n    tag_401:\n        /* \"--CODEGEN--\":85:91   */\n      dup2\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_224\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_360\n      jump\t// in\n        /* \"--CODEGEN--\":5485:5748   */\n    tag_237:\n      0x00\n        /* \"--CODEGEN--\":5600:5602   */\n      0x20\n        /* \"--CODEGEN--\":5588:5597   */\n      dup3\n        /* \"--CODEGEN--\":5579:5586   */\n      dup5\n        /* \"--CODEGEN--\":5575:5598   */\n      sub\n        /* \"--CODEGEN--\":5571:5603   */\n      slt\n        /* \"--CODEGEN--\":5568:5570   */\n      iszero\n      tag_404\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":5606:5618   */\n      revert\n        /* \"--CODEGEN--\":5568:5570   */\n    tag_404:\n        /* \"--CODEGEN--\":226:232   */\n      dup2\n        /* \"--CODEGEN--\":220:233   */\n      mload\n        /* \"--CODEGEN--\":238:271   */\n      tag_224\n        /* \"--CODEGEN--\":265:270   */\n      dup2\n        /* \"--CODEGEN--\":238:271   */\n      tag_360\n      jump\t// in\n        /* \"--CODEGEN--\":5755:7180   */\n    tag_24:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"--CODEGEN--\":6047:6050   */\n      0xe0\n        /* \"--CODEGEN--\":6035:6044   */\n      dup10\n        /* \"--CODEGEN--\":6026:6033   */\n      dup12\n        /* \"--CODEGEN--\":6022:6045   */\n      sub\n        /* \"--CODEGEN--\":6018:6051   */\n      slt\n        /* \"--CODEGEN--\":6015:6017   */\n      iszero\n      tag_407\n      jumpi\n      dup4\n      dup5\n        /* \"--CODEGEN--\":6054:6066   */\n      revert\n        /* \"--CODEGEN--\":6015:6017   */\n    tag_407:\n        /* \"--CODEGEN--\":85:91   */\n      dup9\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_408\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_360\n      jump\t// in\n    tag_408:\n        /* \"--CODEGEN--\":6106:6169   */\n      swap8\n      pop\n        /* \"--CODEGEN--\":6206:6208   */\n      0x20\n        /* \"--CODEGEN--\":6245:6267   */\n      dup10\n      add\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_409\n        /* \"--CODEGEN--\":72:92   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_360\n      jump\t// in\n    tag_409:\n        /* \"--CODEGEN--\":6214:6277   */\n      swap7\n      pop\n        /* \"--CODEGEN--\":6342:6344   */\n      0x40\n        /* \"--CODEGEN--\":6327:6345   */\n      dup10\n      add\n        /* \"--CODEGEN--\":6314:6346   */\n      calldataload\n        /* \"--CODEGEN--\":6366:6384   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":6355:6385   */\n      dup1\n      dup3\n      gt\n        /* \"--CODEGEN--\":6352:6354   */\n      iszero\n      tag_410\n      jumpi\n      dup6\n      dup7\n        /* \"--CODEGEN--\":6388:6400   */\n      revert\n        /* \"--CODEGEN--\":6352:6354   */\n    tag_410:\n        /* \"--CODEGEN--\":6418:6481   */\n      tag_411\n        /* \"--CODEGEN--\":6473:6480   */\n      dup13\n        /* \"--CODEGEN--\":6464:6470   */\n      dup4\n        /* \"--CODEGEN--\":6453:6462   */\n      dup14\n        /* \"--CODEGEN--\":6449:6471   */\n      add\n        /* \"--CODEGEN--\":6418:6481   */\n      tag_390\n      jump\t// in\n    tag_411:\n        /* \"--CODEGEN--\":6408:6481   */\n      swap8\n      pop\n        /* \"--CODEGEN--\":6518:6520   */\n      0x60\n        /* \"--CODEGEN--\":6561:6570   */\n      dup12\n        /* \"--CODEGEN--\":6557:6579   */\n      add\n        /* \"--CODEGEN--\":4887:4907   */\n      calldataload\n        /* \"--CODEGEN--\":6526:6589   */\n      swap7\n      pop\n        /* \"--CODEGEN--\":6645:6695   */\n      tag_412\n        /* \"--CODEGEN--\":6687:6694   */\n      dup13\n        /* \"--CODEGEN--\":6626:6629   */\n      0x80\n        /* \"--CODEGEN--\":6667:6676   */\n      dup14\n        /* \"--CODEGEN--\":6663:6685   */\n      add\n        /* \"--CODEGEN--\":6645:6695   */\n      tag_377\n      jump\t// in\n    tag_412:\n        /* \"--CODEGEN--\":6635:6695   */\n      swap6\n      pop\n        /* \"--CODEGEN--\":6760:6763   */\n      0xa0\n        /* \"--CODEGEN--\":6749:6758   */\n      dup12\n        /* \"--CODEGEN--\":6745:6764   */\n      add\n        /* \"--CODEGEN--\":6732:6765   */\n      calldataload\n        /* \"--CODEGEN--\":6718:6765   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":6366:6384   */\n      dup1\n        /* \"--CODEGEN--\":6777:6783   */\n      dup3\n        /* \"--CODEGEN--\":6774:6804   */\n      gt\n        /* \"--CODEGEN--\":6771:6773   */\n      iszero\n      tag_413\n      jumpi\n      dup5\n      dup6\n        /* \"--CODEGEN--\":6807:6819   */\n      revert\n        /* \"--CODEGEN--\":6771:6773   */\n    tag_413:\n        /* \"--CODEGEN--\":6837:6915   */\n      tag_414\n        /* \"--CODEGEN--\":6907:6914   */\n      dup13\n        /* \"--CODEGEN--\":6898:6904   */\n      dup4\n        /* \"--CODEGEN--\":6887:6896   */\n      dup14\n        /* \"--CODEGEN--\":6883:6905   */\n      add\n        /* \"--CODEGEN--\":6837:6915   */\n      tag_361\n      jump\t// in\n    tag_414:\n        /* \"--CODEGEN--\":6827:6915   */\n      swap5\n      pop\n        /* \"--CODEGEN--\":6980:6983   */\n      0xc0\n        /* \"--CODEGEN--\":6969:6978   */\n      dup12\n        /* \"--CODEGEN--\":6965:6984   */\n      add\n        /* \"--CODEGEN--\":6952:6985   */\n      calldataload\n        /* \"--CODEGEN--\":6938:6985   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":6366:6384   */\n      dup1\n        /* \"--CODEGEN--\":6997:7003   */\n      dup3\n        /* \"--CODEGEN--\":6994:7024   */\n      gt\n        /* \"--CODEGEN--\":6991:6993   */\n      iszero\n      tag_415\n      jumpi\n      dup4\n      dup5\n        /* \"--CODEGEN--\":7027:7039   */\n      revert\n        /* \"--CODEGEN--\":6991:6993   */\n    tag_415:\n      pop\n        /* \"--CODEGEN--\":7065:7164   */\n      tag_416\n        /* \"--CODEGEN--\":7156:7163   */\n      dup12\n        /* \"--CODEGEN--\":7147:7153   */\n      dup3\n        /* \"--CODEGEN--\":7136:7145   */\n      dup13\n        /* \"--CODEGEN--\":7132:7154   */\n      add\n        /* \"--CODEGEN--\":7065:7164   */\n      tag_372\n      jump\t// in\n    tag_416:\n        /* \"--CODEGEN--\":6009:7180   */\n      swap10\n      swap13\n      swap9\n      swap12\n      pop\n      swap7\n      swap10\n      pop\n      swap5\n      swap8\n      swap4\n      swap7\n      swap3\n      swap6\n        /* \"--CODEGEN--\":7047:7164   */\n      swap5\n      pop\n      pop\n      pop\n        /* \"--CODEGEN--\":6009:7180   */\n      jump\t// out\n        /* \"--CODEGEN--\":7187:7547   */\n    tag_45:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":7305:7307   */\n      0x40\n        /* \"--CODEGEN--\":7293:7302   */\n      dup4\n        /* \"--CODEGEN--\":7284:7291   */\n      dup6\n        /* \"--CODEGEN--\":7280:7303   */\n      sub\n        /* \"--CODEGEN--\":7276:7308   */\n      slt\n        /* \"--CODEGEN--\":7273:7275   */\n      iszero\n      tag_418\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":7311:7323   */\n      revert\n        /* \"--CODEGEN--\":7273:7275   */\n    tag_418:\n        /* \"--CODEGEN--\":85:91   */\n      dup3\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_419\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_360\n      jump\t// in\n    tag_419:\n        /* \"--CODEGEN--\":7363:7426   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7463:7465   */\n      0x20\n        /* \"--CODEGEN--\":7499:7521   */\n      dup4\n      add\n        /* \"--CODEGEN--\":1519:1539   */\n      calldataload\n        /* \"--CODEGEN--\":1544:1574   */\n      tag_420\n        /* \"--CODEGEN--\":1519:1539   */\n      dup2\n        /* \"--CODEGEN--\":1544:1574   */\n      tag_380\n      jump\t// in\n    tag_420:\n        /* \"--CODEGEN--\":7471:7531   */\n      dup1\n      swap2\n      pop\n      pop\n        /* \"--CODEGEN--\":7267:7547   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":7554:7920   */\n    tag_39:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":7675:7677   */\n      0x40\n        /* \"--CODEGEN--\":7663:7672   */\n      dup4\n        /* \"--CODEGEN--\":7654:7661   */\n      dup6\n        /* \"--CODEGEN--\":7650:7673   */\n      sub\n        /* \"--CODEGEN--\":7646:7678   */\n      slt\n        /* \"--CODEGEN--\":7643:7645   */\n      iszero\n      tag_422\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":7681:7693   */\n      revert\n        /* \"--CODEGEN--\":7643:7645   */\n    tag_422:\n        /* \"--CODEGEN--\":85:91   */\n      dup3\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_423\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_360\n      jump\t// in\n    tag_423:\n        /* \"--CODEGEN--\":7733:7796   */\n      swap5\n        /* \"--CODEGEN--\":7833:7835   */\n      0x20\n        /* \"--CODEGEN--\":7872:7894   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"--CODEGEN--\":4887:4907   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"--CODEGEN--\":7637:7920   */\n      jump\t// out\n        /* \"--CODEGEN--\":7927:8702   */\n    tag_76:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"--CODEGEN--\":8115:8118   */\n      0xa0\n        /* \"--CODEGEN--\":8103:8112   */\n      dup7\n        /* \"--CODEGEN--\":8094:8101   */\n      dup9\n        /* \"--CODEGEN--\":8090:8113   */\n      sub\n        /* \"--CODEGEN--\":8086:8119   */\n      slt\n        /* \"--CODEGEN--\":8083:8085   */\n      iszero\n      tag_425\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":8122:8134   */\n      revert\n        /* \"--CODEGEN--\":8083:8085   */\n    tag_425:\n        /* \"--CODEGEN--\":85:91   */\n      dup6\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_426\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_360\n      jump\t// in\n    tag_426:\n        /* \"--CODEGEN--\":8174:8237   */\n      swap5\n      pop\n        /* \"--CODEGEN--\":8274:8276   */\n      0x20\n        /* \"--CODEGEN--\":8313:8335   */\n      dup7\n      add\n        /* \"--CODEGEN--\":4887:4907   */\n      calldataload\n      swap4\n      pop\n        /* \"--CODEGEN--\":8382:8384   */\n      0x40\n        /* \"--CODEGEN--\":8421:8443   */\n      dup7\n      add\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_427\n        /* \"--CODEGEN--\":72:92   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_360\n      jump\t// in\n    tag_427:\n        /* \"--CODEGEN--\":8390:8453   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":8508:8580   */\n      tag_428\n        /* \"--CODEGEN--\":8572:8579   */\n      dup8\n        /* \"--CODEGEN--\":8490:8492   */\n      0x60\n        /* \"--CODEGEN--\":8548:8570   */\n      dup9\n      add\n        /* \"--CODEGEN--\":8508:8580   */\n      tag_384\n      jump\t// in\n    tag_428:\n        /* \"--CODEGEN--\":8498:8580   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":8617:8620   */\n      0x80\n        /* \"--CODEGEN--\":8658:8667   */\n      dup7\n        /* \"--CODEGEN--\":8654:8676   */\n      add\n        /* \"--CODEGEN--\":1519:1539   */\n      calldataload\n        /* \"--CODEGEN--\":1544:1574   */\n      tag_429\n        /* \"--CODEGEN--\":1568:1573   */\n      dup2\n        /* \"--CODEGEN--\":1544:1574   */\n      tag_380\n      jump\t// in\n    tag_429:\n        /* \"--CODEGEN--\":8626:8686   */\n      dup1\n      swap2\n      pop\n      pop\n        /* \"--CODEGEN--\":8077:8702   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":8709:9347   */\n    tag_57:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":8880:8882   */\n      0x40\n        /* \"--CODEGEN--\":8868:8877   */\n      dup4\n        /* \"--CODEGEN--\":8859:8866   */\n      dup6\n        /* \"--CODEGEN--\":8855:8878   */\n      sub\n        /* \"--CODEGEN--\":8851:8883   */\n      slt\n        /* \"--CODEGEN--\":8848:8850   */\n      iszero\n      tag_431\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":8886:8898   */\n      revert\n        /* \"--CODEGEN--\":8848:8850   */\n    tag_431:\n        /* \"--CODEGEN--\":8944:8961   */\n      dup3\n        /* \"--CODEGEN--\":8931:8962   */\n      calldataload\n        /* \"--CODEGEN--\":8982:9000   */\n      0xffffffffffffffff\n      dup1\n        /* \"--CODEGEN--\":8974:8980   */\n      dup3\n        /* \"--CODEGEN--\":8971:9001   */\n      gt\n        /* \"--CODEGEN--\":8968:8970   */\n      iszero\n      tag_432\n      jumpi\n      dup4\n      dup5\n        /* \"--CODEGEN--\":9004:9016   */\n      revert\n        /* \"--CODEGEN--\":8968:8970   */\n    tag_432:\n        /* \"--CODEGEN--\":9034:9112   */\n      tag_433\n        /* \"--CODEGEN--\":9104:9111   */\n      dup7\n        /* \"--CODEGEN--\":9095:9101   */\n      dup4\n        /* \"--CODEGEN--\":9084:9093   */\n      dup8\n        /* \"--CODEGEN--\":9080:9102   */\n      add\n        /* \"--CODEGEN--\":9034:9112   */\n      tag_361\n      jump\t// in\n    tag_433:\n        /* \"--CODEGEN--\":9024:9112   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":9177:9179   */\n      0x20\n        /* \"--CODEGEN--\":9166:9175   */\n      dup6\n        /* \"--CODEGEN--\":9162:9180   */\n      add\n        /* \"--CODEGEN--\":9149:9181   */\n      calldataload\n        /* \"--CODEGEN--\":9135:9181   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":8982:9000   */\n      dup1\n        /* \"--CODEGEN--\":9193:9199   */\n      dup3\n        /* \"--CODEGEN--\":9190:9220   */\n      gt\n        /* \"--CODEGEN--\":9187:9189   */\n      iszero\n      tag_434\n      jumpi\n      dup3\n      dup4\n        /* \"--CODEGEN--\":9223:9235   */\n      revert\n        /* \"--CODEGEN--\":9187:9189   */\n    tag_434:\n      pop\n        /* \"--CODEGEN--\":9253:9331   */\n      tag_435\n        /* \"--CODEGEN--\":9323:9330   */\n      dup6\n        /* \"--CODEGEN--\":9314:9320   */\n      dup3\n        /* \"--CODEGEN--\":9303:9312   */\n      dup7\n        /* \"--CODEGEN--\":9299:9321   */\n      add\n        /* \"--CODEGEN--\":9253:9331   */\n      tag_361\n      jump\t// in\n    tag_435:\n        /* \"--CODEGEN--\":9243:9331   */\n      swap2\n      pop\n      pop\n        /* \"--CODEGEN--\":8842:9347   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":9354:9633   */\n    tag_109:\n      0x00\n        /* \"--CODEGEN--\":9477:9479   */\n      0x20\n        /* \"--CODEGEN--\":9465:9474   */\n      dup3\n        /* \"--CODEGEN--\":9456:9463   */\n      dup5\n        /* \"--CODEGEN--\":9452:9475   */\n      sub\n        /* \"--CODEGEN--\":9448:9480   */\n      slt\n        /* \"--CODEGEN--\":9445:9447   */\n      iszero\n      tag_437\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":9483:9495   */\n      revert\n        /* \"--CODEGEN--\":9445:9447   */\n    tag_437:\n        /* \"--CODEGEN--\":9545:9617   */\n      tag_224\n        /* \"--CODEGEN--\":9609:9616   */\n      dup4\n        /* \"--CODEGEN--\":9585:9607   */\n      dup4\n        /* \"--CODEGEN--\":9545:9617   */\n      tag_384\n      jump\t// in\n        /* \"--CODEGEN--\":9640:10002   */\n    tag_230:\n      0x00\n        /* \"--CODEGEN--\":9765:9767   */\n      0x20\n        /* \"--CODEGEN--\":9753:9762   */\n      dup3\n        /* \"--CODEGEN--\":9744:9751   */\n      dup5\n        /* \"--CODEGEN--\":9740:9763   */\n      sub\n        /* \"--CODEGEN--\":9736:9768   */\n      slt\n        /* \"--CODEGEN--\":9733:9735   */\n      iszero\n      tag_440\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":9771:9783   */\n      revert\n        /* \"--CODEGEN--\":9733:9735   */\n    tag_440:\n        /* \"--CODEGEN--\":9822:9839   */\n      dup2\n        /* \"--CODEGEN--\":9816:9840   */\n      mload\n        /* \"--CODEGEN--\":9860:9878   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":9852:9858   */\n      dup2\n        /* \"--CODEGEN--\":9849:9879   */\n      gt\n        /* \"--CODEGEN--\":9846:9848   */\n      iszero\n      tag_441\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":9882:9894   */\n      revert\n        /* \"--CODEGEN--\":9846:9848   */\n    tag_441:\n        /* \"--CODEGEN--\":9954:9976   */\n      dup3\n      add\n        /* \"--CODEGEN--\":2905:2909   */\n      0x1f\n        /* \"--CODEGEN--\":2893:2910   */\n      dup2\n      add\n        /* \"--CODEGEN--\":2889:2916   */\n      dup5\n      sgt\n        /* \"--CODEGEN--\":2879:2881   */\n      tag_442\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":2920:2932   */\n      revert\n        /* \"--CODEGEN--\":2879:2881   */\n    tag_442:\n        /* \"--CODEGEN--\":2960:2966   */\n      dup1\n        /* \"--CODEGEN--\":2954:2967   */\n      mload\n        /* \"--CODEGEN--\":2982:3047   */\n      tag_443\n        /* \"--CODEGEN--\":2997:3046   */\n      tag_394\n        /* \"--CODEGEN--\":3039:3045   */\n      dup3\n        /* \"--CODEGEN--\":2997:3046   */\n      tag_395\n      jump\t// in\n        /* \"--CODEGEN--\":2982:3047   */\n    tag_443:\n        /* \"--CODEGEN--\":3067:3073   */\n      dup2\n        /* \"--CODEGEN--\":3060:3065   */\n      dup2\n        /* \"--CODEGEN--\":3053:3074   */\n      mstore\n        /* \"--CODEGEN--\":3171:3174   */\n      dup6\n        /* \"--CODEGEN--\":9765:9767   */\n      0x20\n        /* \"--CODEGEN--\":3162:3168   */\n      dup4\n        /* \"--CODEGEN--\":3095:3101   */\n      dup6\n        /* \"--CODEGEN--\":3153:3169   */\n      add\n      add\n        /* \"--CODEGEN--\":3150:3175   */\n      gt\n        /* \"--CODEGEN--\":3147:3149   */\n      iszero\n      tag_445\n      jumpi\n      dup4\n      dup5\n        /* \"--CODEGEN--\":3178:3190   */\n      revert\n        /* \"--CODEGEN--\":3147:3149   */\n    tag_445:\n        /* \"--CODEGEN--\":3198:3237   */\n      tag_446\n        /* \"--CODEGEN--\":3230:3236   */\n      dup3\n        /* \"--CODEGEN--\":9765:9767   */\n      0x20\n        /* \"--CODEGEN--\":3129:3134   */\n      dup4\n        /* \"--CODEGEN--\":3125:3141   */\n      add\n        /* \"--CODEGEN--\":9765:9767   */\n      0x20\n        /* \"--CODEGEN--\":3095:3101   */\n      dup7\n        /* \"--CODEGEN--\":3091:3108   */\n      add\n        /* \"--CODEGEN--\":3198:3237   */\n      tag_447\n      jump\t// in\n    tag_446:\n        /* \"--CODEGEN--\":9902:9986   */\n      swap6\n        /* \"--CODEGEN--\":9727:10002   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":10009:10331   */\n    tag_315:\n      0x00\n        /* \"--CODEGEN--\":10153:10156   */\n      0x0100\n      dup1\n        /* \"--CODEGEN--\":10141:10150   */\n      dup4\n        /* \"--CODEGEN--\":10132:10139   */\n      dup6\n        /* \"--CODEGEN--\":10128:10151   */\n      sub\n        /* \"--CODEGEN--\":10124:10157   */\n      slt\n        /* \"--CODEGEN--\":10121:10123   */\n      iszero\n      tag_449\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":10160:10172   */\n      revert\n        /* \"--CODEGEN--\":10121:10123   */\n    tag_449:\n        /* \"--CODEGEN--\":3473:3495   */\n      tag_450\n        /* \"--CODEGEN--\":10153:10156   */\n      dup2\n        /* \"--CODEGEN--\":3473:3495   */\n      tag_366\n      jump\t// in\n    tag_450:\n        /* \"--CODEGEN--\":3464:3495   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":226:232   */\n      dup3\n        /* \"--CODEGEN--\":220:233   */\n      mload\n        /* \"--CODEGEN--\":238:271   */\n      tag_451\n        /* \"--CODEGEN--\":265:270   */\n      dup2\n        /* \"--CODEGEN--\":238:271   */\n      tag_360\n      jump\t// in\n    tag_451:\n        /* \"--CODEGEN--\":3554:3640   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":3707:3709   */\n      0x20\n        /* \"--CODEGEN--\":3772:3794   */\n      dup4\n      add\n        /* \"--CODEGEN--\":220:233   */\n      mload\n        /* \"--CODEGEN--\":238:271   */\n      tag_452\n        /* \"--CODEGEN--\":220:233   */\n      dup2\n        /* \"--CODEGEN--\":238:271   */\n      tag_360\n      jump\t// in\n    tag_452:\n        /* \"--CODEGEN--\":3740:3800   */\n      dup1\n        /* \"--CODEGEN--\":3707:3709   */\n      0x20\n        /* \"--CODEGEN--\":3726:3731   */\n      dup4\n        /* \"--CODEGEN--\":3722:3738   */\n      add\n        /* \"--CODEGEN--\":3715:3801   */\n      mstore\n      pop\n        /* \"--CODEGEN--\":3868:3870   */\n      0x40\n        /* \"--CODEGEN--\":3937:3946   */\n      dup4\n        /* \"--CODEGEN--\":3933:3955   */\n      add\n        /* \"--CODEGEN--\":1799:1812   */\n      mload\n        /* \"--CODEGEN--\":3868:3870   */\n      0x40\n        /* \"--CODEGEN--\":3887:3892   */\n      dup3\n        /* \"--CODEGEN--\":3883:3899   */\n      add\n        /* \"--CODEGEN--\":3876:3962   */\n      mstore\n        /* \"--CODEGEN--\":4027:4029   */\n      0x60\n        /* \"--CODEGEN--\":4096:4105   */\n      dup4\n        /* \"--CODEGEN--\":4092:4114   */\n      add\n        /* \"--CODEGEN--\":5035:5048   */\n      mload\n        /* \"--CODEGEN--\":4027:4029   */\n      0x60\n        /* \"--CODEGEN--\":4046:4051   */\n      dup3\n        /* \"--CODEGEN--\":4042:4058   */\n      add\n        /* \"--CODEGEN--\":4035:4121   */\n      mstore\n        /* \"--CODEGEN--\":4223:4298   */\n      tag_453\n        /* \"--CODEGEN--\":4294:4297   */\n      dup5\n        /* \"--CODEGEN--\":4189:4192   */\n      0x80\n        /* \"--CODEGEN--\":4274:4283   */\n      dup6\n        /* \"--CODEGEN--\":4270:4292   */\n      add\n        /* \"--CODEGEN--\":4223:4298   */\n      tag_387\n      jump\t// in\n    tag_453:\n        /* \"--CODEGEN--\":4189:4192   */\n      0x80\n        /* \"--CODEGEN--\":4209:4214   */\n      dup3\n        /* \"--CODEGEN--\":4205:4221   */\n      add\n        /* \"--CODEGEN--\":4198:4299   */\n      mstore\n        /* \"--CODEGEN--\":4366:4369   */\n      0xa0\n        /* \"--CODEGEN--\":4436:4445   */\n      dup4\n        /* \"--CODEGEN--\":4432:4454   */\n      add\n        /* \"--CODEGEN--\":5035:5048   */\n      mload\n        /* \"--CODEGEN--\":4366:4369   */\n      0xa0\n        /* \"--CODEGEN--\":4386:4391   */\n      dup3\n        /* \"--CODEGEN--\":4382:4398   */\n      add\n        /* \"--CODEGEN--\":4375:4461   */\n      mstore\n        /* \"--CODEGEN--\":4565:4625   */\n      tag_454\n        /* \"--CODEGEN--\":4621:4624   */\n      dup5\n        /* \"--CODEGEN--\":4531:4534   */\n      0xc0\n        /* \"--CODEGEN--\":4601:4610   */\n      dup6\n        /* \"--CODEGEN--\":4597:4619   */\n      add\n        /* \"--CODEGEN--\":4565:4625   */\n      tag_357\n      jump\t// in\n    tag_454:\n        /* \"--CODEGEN--\":4531:4534   */\n      0xc0\n        /* \"--CODEGEN--\":4551:4556   */\n      dup3\n        /* \"--CODEGEN--\":4547:4563   */\n      add\n        /* \"--CODEGEN--\":4540:4626   */\n      mstore\n        /* \"--CODEGEN--\":4734:4791   */\n      tag_455\n        /* \"--CODEGEN--\":4787:4790   */\n      dup5\n        /* \"--CODEGEN--\":4700:4703   */\n      0xe0\n        /* \"--CODEGEN--\":4767:4776   */\n      dup6\n        /* \"--CODEGEN--\":4763:4785   */\n      add\n        /* \"--CODEGEN--\":4734:4791   */\n      tag_381\n      jump\t// in\n    tag_455:\n        /* \"--CODEGEN--\":4700:4703   */\n      0xe0\n        /* \"--CODEGEN--\":4716:4732   */\n      dup3\n      add\n        /* \"--CODEGEN--\":4709:4792   */\n      mstore\n        /* \"--CODEGEN--\":4720:4725   */\n      swap4\n        /* \"--CODEGEN--\":10115:10331   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":10338:10601   */\n    tag_301:\n      0x00\n        /* \"--CODEGEN--\":10453:10455   */\n      0x20\n        /* \"--CODEGEN--\":10441:10450   */\n      dup3\n        /* \"--CODEGEN--\":10432:10439   */\n      dup5\n        /* \"--CODEGEN--\":10428:10451   */\n      sub\n        /* \"--CODEGEN--\":10424:10456   */\n      slt\n        /* \"--CODEGEN--\":10421:10423   */\n      iszero\n      tag_457\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":10459:10471   */\n      revert\n        /* \"--CODEGEN--\":10421:10423   */\n    tag_457:\n      pop\n        /* \"--CODEGEN--\":5035:5048   */\n      mload\n      swap2\n        /* \"--CODEGEN--\":10415:10601   */\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":10608:11411   */\n    tag_290:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"--CODEGEN--\":10788:10791   */\n      0xa0\n        /* \"--CODEGEN--\":10776:10785   */\n      dup7\n        /* \"--CODEGEN--\":10767:10774   */\n      dup9\n        /* \"--CODEGEN--\":10763:10786   */\n      sub\n        /* \"--CODEGEN--\":10759:10792   */\n      slt\n        /* \"--CODEGEN--\":10756:10758   */\n      iszero\n      tag_459\n      jumpi\n      dup3\n      dup4\n        /* \"--CODEGEN--\":10795:10807   */\n      revert\n        /* \"--CODEGEN--\":10756:10758   */\n    tag_459:\n        /* \"--CODEGEN--\":10857:10920   */\n      tag_460\n        /* \"--CODEGEN--\":10912:10919   */\n      dup8\n        /* \"--CODEGEN--\":10888:10910   */\n      dup8\n        /* \"--CODEGEN--\":10857:10920   */\n      tag_397\n      jump\t// in\n    tag_460:\n        /* \"--CODEGEN--\":10847:10920   */\n      swap5\n      pop\n        /* \"--CODEGEN--\":10957:10959   */\n      0x20\n        /* \"--CODEGEN--\":11010:11019   */\n      dup7\n        /* \"--CODEGEN--\":11006:11028   */\n      add\n        /* \"--CODEGEN--\":2285:2298   */\n      mload\n        /* \"--CODEGEN--\":10965:11038   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":11075:11077   */\n      0x40\n        /* \"--CODEGEN--\":11129:11138   */\n      dup7\n        /* \"--CODEGEN--\":11125:11147   */\n      add\n        /* \"--CODEGEN--\":5035:5048   */\n      mload\n        /* \"--CODEGEN--\":11083:11157   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":11194:11196   */\n      0x60\n        /* \"--CODEGEN--\":11248:11257   */\n      dup7\n        /* \"--CODEGEN--\":11244:11266   */\n      add\n        /* \"--CODEGEN--\":5035:5048   */\n      mload\n        /* \"--CODEGEN--\":11202:11276   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":11332:11395   */\n      tag_461\n        /* \"--CODEGEN--\":11387:11394   */\n      dup8\n        /* \"--CODEGEN--\":11313:11316   */\n      0x80\n        /* \"--CODEGEN--\":11367:11376   */\n      dup9\n        /* \"--CODEGEN--\":11363:11385   */\n      add\n        /* \"--CODEGEN--\":11332:11395   */\n      tag_397\n      jump\t// in\n    tag_461:\n        /* \"--CODEGEN--\":11322:11395   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":10750:11411   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":12935:13029   */\n    tag_462:\n        /* \"--CODEGEN--\":29575:29588   */\n      iszero\n        /* \"--CODEGEN--\":29568:29589   */\n      iszero\n        /* \"--CODEGEN--\":12990:13024   */\n      swap1\n      mstore\n        /* \"--CODEGEN--\":12984:13029   */\n      jump\t// out\n        /* \"--CODEGEN--\":13471:13818   */\n    tag_464:\n      0x00\n        /* \"--CODEGEN--\":13616:13621   */\n      dup2\n        /* \"--CODEGEN--\":28329:28341   */\n      mload\n        /* \"--CODEGEN--\":28666:28672   */\n      dup1\n        /* \"--CODEGEN--\":28661:28664   */\n      dup5\n        /* \"--CODEGEN--\":28654:28673   */\n      mstore\n        /* \"--CODEGEN--\":13710:13762   */\n      tag_466\n        /* \"--CODEGEN--\":13755:13761   */\n      dup2\n        /* \"--CODEGEN--\":28703:28707   */\n      0x20\n        /* \"--CODEGEN--\":28698:28701   */\n      dup7\n        /* \"--CODEGEN--\":28694:28708   */\n      add\n        /* \"--CODEGEN--\":28703:28707   */\n      0x20\n        /* \"--CODEGEN--\":13736:13741   */\n      dup7\n        /* \"--CODEGEN--\":13732:13748   */\n      add\n        /* \"--CODEGEN--\":13710:13762   */\n      tag_447\n      jump\t// in\n    tag_466:\n        /* \"--CODEGEN--\":31431:31438   */\n      0x1f\n        /* \"--CODEGEN--\":31415:31429   */\n      add\n      not(0x1f)\n        /* \"--CODEGEN--\":31411:31439   */\n      and\n        /* \"--CODEGEN--\":13774:13813   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"--CODEGEN--\":28703:28707   */\n      0x20\n        /* \"--CODEGEN--\":13774:13813   */\n      add\n      swap3\n        /* \"--CODEGEN--\":13563:13818   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":19374:19649   */\n    tag_280:\n      0x00\n        /* \"--CODEGEN--\":13988:13993   */\n      dup3\n        /* \"--CODEGEN--\":28329:28341   */\n      mload\n        /* \"--CODEGEN--\":14100:14152   */\n      tag_468\n        /* \"--CODEGEN--\":14145:14151   */\n      dup2\n        /* \"--CODEGEN--\":14140:14143   */\n      dup5\n        /* \"--CODEGEN--\":14133:14137   */\n      0x20\n        /* \"--CODEGEN--\":14126:14131   */\n      dup8\n        /* \"--CODEGEN--\":14122:14138   */\n      add\n        /* \"--CODEGEN--\":14100:14152   */\n      tag_447\n      jump\t// in\n    tag_468:\n        /* \"--CODEGEN--\":14164:14180   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"--CODEGEN--\":19510:19649   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":19656:19878   */\n    tag_51:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":29123:29177   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"--CODEGEN--\":11767:11804   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":19783:19785   */\n      0x20\n        /* \"--CODEGEN--\":19768:19786   */\n      add\n      swap1\n        /* \"--CODEGEN--\":19754:19878   */\n      jump\t// out\n        /* \"--CODEGEN--\":19885:20629   */\n    tag_31:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":29123:29177   */\n      dup7\n      dup2\n      and\n        /* \"--CODEGEN--\":11767:11804   */\n      dup3\n      mstore\n        /* \"--CODEGEN--\":29123:29177   */\n      dup6\n      and\n        /* \"--CODEGEN--\":20303:20305   */\n      0x20\n        /* \"--CODEGEN--\":20288:20306   */\n      dup3\n      add\n        /* \"--CODEGEN--\":11767:11804   */\n      mstore\n        /* \"--CODEGEN--\":29134:29176   */\n      0xa0\n        /* \"--CODEGEN--\":20340:20342   */\n      0x40\n        /* \"--CODEGEN--\":20325:20343   */\n      dup3\n      add\n        /* \"--CODEGEN--\":20318:20366   */\n      dup2\n      swap1\n      mstore\n        /* \"--CODEGEN--\":19885:20629   */\n      0x00\n      swap1\n        /* \"--CODEGEN--\":20380:20458   */\n      tag_471\n      swap1\n        /* \"--CODEGEN--\":20123:20142   */\n      dup4\n      add\n        /* \"--CODEGEN--\":20444:20450   */\n      dup7\n        /* \"--CODEGEN--\":20380:20458   */\n      tag_464\n      jump\t// in\n    tag_471:\n        /* \"--CODEGEN--\":20537:20539   */\n      0x60\n        /* \"--CODEGEN--\":20522:20540   */\n      dup4\n      add\n        /* \"--CODEGEN--\":19325:19362   */\n      swap5\n      swap1\n      swap5\n      mstore\n      pop\n        /* \"--CODEGEN--\":29575:29588   */\n      swap1\n      iszero\n        /* \"--CODEGEN--\":29568:29589   */\n      iszero\n        /* \"--CODEGEN--\":20614:20617   */\n      0x80\n        /* \"--CODEGEN--\":20599:20618   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":12990:13024   */\n      mstore\n        /* \"--CODEGEN--\":20372:20458   */\n      swap4\n        /* \"--CODEGEN--\":20109:20629   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":20636:21374   */\n    tag_129:\n      0x00\n        /* \"--CODEGEN--\":20886:20889   */\n      0xa0\n        /* \"--CODEGEN--\":20875:20884   */\n      dup3\n        /* \"--CODEGEN--\":20871:20890   */\n      add\n        /* \"--CODEGEN--\":27217:27235   */\n      0x01\n      dup1\n        /* \"--CODEGEN--\":29134:29176   */\n      0xa0\n      shl\n      sub\n      dup1\n        /* \"--CODEGEN--\":11797:11802   */\n      dup10\n        /* \"--CODEGEN--\":29123:29177   */\n      and\n        /* \"--CODEGEN--\":11774:11777   */\n      dup5\n        /* \"--CODEGEN--\":11767:11804   */\n      mstore\n        /* \"--CODEGEN--\":21051:21053   */\n      0x20\n        /* \"--CODEGEN--\":29134:29176   */\n      dup2\n        /* \"--CODEGEN--\":11797:11802   */\n      dup10\n        /* \"--CODEGEN--\":29123:29177   */\n      and\n        /* \"--CODEGEN--\":21051:21053   */\n      dup2\n        /* \"--CODEGEN--\":21040:21049   */\n      dup7\n        /* \"--CODEGEN--\":21036:21054   */\n      add\n        /* \"--CODEGEN--\":11767:11804   */\n      mstore\n        /* \"--CODEGEN--\":20886:20889   */\n      0xa0\n        /* \"--CODEGEN--\":21088:21090   */\n      0x40\n        /* \"--CODEGEN--\":21077:21086   */\n      dup7\n        /* \"--CODEGEN--\":21073:21091   */\n      add\n        /* \"--CODEGEN--\":21066:21114   */\n      mstore\n      dup4\n        /* \"--CODEGEN--\":21128:21203   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":14336:14341   */\n      dup8\n        /* \"--CODEGEN--\":14330:14342   */\n      sload\n        /* \"--CODEGEN--\":14370:14371   */\n      0x01\n      dup1\n        /* \"--CODEGEN--\":14359:14368   */\n      dup3\n        /* \"--CODEGEN--\":14355:14372   */\n      and\n        /* \"--CODEGEN--\":14383:14384   */\n      0x00\n        /* \"--CODEGEN--\":14378:14626   */\n      dup2\n      eq\n      tag_474\n      jumpi\n        /* \"--CODEGEN--\":14637:14638   */\n      0x01\n        /* \"--CODEGEN--\":14632:15034   */\n      dup2\n      eq\n      tag_475\n      jumpi\n        /* \"--CODEGEN--\":14348:15034   */\n      jump(tag_473)\n        /* \"--CODEGEN--\":14378:14626   */\n    tag_474:\n        /* \"--CODEGEN--\":14475:14546   */\n      tag_476\n        /* \"--CODEGEN--\":14456:14460   */\n      0x7f\n        /* \"--CODEGEN--\":14452:14453   */\n      0x02\n        /* \"--CODEGEN--\":14441:14450   */\n      dup6\n        /* \"--CODEGEN--\":14437:14454   */\n      div\n        /* \"--CODEGEN--\":14433:14461   */\n      and\n        /* \"--CODEGEN--\":14534:14537   */\n      dup8\n        /* \"--CODEGEN--\":14475:14546   */\n      tag_36\n      jump\t// in\n    tag_476:\n      not(0xff)\n        /* \"--CODEGEN--\":14565:14590   */\n      dup5\n      and\n        /* \"--CODEGEN--\":14553:14591   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":14605:14619   */\n      dup5\n      add\n      swap5\n      pop\n        /* \"--CODEGEN--\":14378:14626   */\n      jump(tag_473)\n        /* \"--CODEGEN--\":14632:15034   */\n    tag_475:\n        /* \"--CODEGEN--\":14701:14702   */\n      0x02\n        /* \"--CODEGEN--\":14690:14699   */\n      dup4\n        /* \"--CODEGEN--\":14686:14703   */\n      div\n        /* \"--CODEGEN--\":14717:14788   */\n      tag_478\n        /* \"--CODEGEN--\":14781:14787   */\n      dup2\n        /* \"--CODEGEN--\":14776:14779   */\n      dup9\n        /* \"--CODEGEN--\":14717:14788   */\n      tag_36\n      jump\t// in\n    tag_478:\n        /* \"--CODEGEN--\":14810:14848   */\n      tag_479\n        /* \"--CODEGEN--\":14842:14847   */\n      dup14\n        /* \"--CODEGEN--\":14810:14848   */\n      tag_480\n      jump\t// in\n    tag_479:\n      dup10\n        /* \"--CODEGEN--\":14872:15002   */\n    tag_481:\n        /* \"--CODEGEN--\":14886:14892   */\n      dup4\n        /* \"--CODEGEN--\":14883:14884   */\n      dup2\n        /* \"--CODEGEN--\":14880:14893   */\n      lt\n        /* \"--CODEGEN--\":14872:15002   */\n      iszero\n      tag_483\n      jumpi\n        /* \"--CODEGEN--\":14945:14959   */\n      dup2\n      sload\n        /* \"--CODEGEN--\":14932:14943   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":14925:14960   */\n      mstore\n        /* \"--CODEGEN--\":14979:14994   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"--CODEGEN--\":14901:14913   */\n      dup8\n      add\n        /* \"--CODEGEN--\":14872:15002   */\n      jump(tag_481)\n    tag_483:\n        /* \"--CODEGEN--\":15016:15027   */\n      swap2\n      swap1\n      swap2\n      add\n      swap7\n      pop\n      pop\n      pop\n        /* \"--CODEGEN--\":14348:15034   */\n    tag_473:\n      pop\n      pop\n      pop\n      pop\n        /* \"--CODEGEN--\":21120:21203   */\n      dup1\n      swap3\n      pop\n      pop\n      pop\n        /* \"--CODEGEN--\":19355:19360   */\n      dup4\n        /* \"--CODEGEN--\":21282:21284   */\n      0x60\n        /* \"--CODEGEN--\":21271:21280   */\n      dup4\n        /* \"--CODEGEN--\":21267:21285   */\n      add\n        /* \"--CODEGEN--\":19325:19362   */\n      mstore\n        /* \"--CODEGEN--\":21297:21364   */\n      tag_484\n        /* \"--CODEGEN--\":21359:21362   */\n      0x80\n        /* \"--CODEGEN--\":21348:21357   */\n      dup4\n        /* \"--CODEGEN--\":21344:21363   */\n      add\n        /* \"--CODEGEN--\":21335:21341   */\n      dup5\n        /* \"--CODEGEN--\":21297:21364   */\n      tag_462\n      jump\t// in\n    tag_484:\n        /* \"--CODEGEN--\":20857:21374   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":21381:21962   */\n    tag_115:\n      0x00\n        /* \"--CODEGEN--\":21636:21638   */\n      0x40\n      dup1\n        /* \"--CODEGEN--\":21625:21634   */\n      dup4\n        /* \"--CODEGEN--\":21621:21639   */\n      add\n        /* \"--CODEGEN--\":27217:27235   */\n      0x01\n      dup1\n        /* \"--CODEGEN--\":29134:29176   */\n      0xa0\n      shl\n      sub\n      dup1\n        /* \"--CODEGEN--\":11797:11802   */\n      dup8\n        /* \"--CODEGEN--\":29123:29177   */\n      and\n        /* \"--CODEGEN--\":11774:11777   */\n      dup6\n        /* \"--CODEGEN--\":11767:11804   */\n      mstore\n        /* \"--CODEGEN--\":21754:21756   */\n      0x20\n        /* \"--CODEGEN--\":21636:21638   */\n      dup4\n        /* \"--CODEGEN--\":21754:21756   */\n      dup2\n        /* \"--CODEGEN--\":21743:21752   */\n      dup8\n        /* \"--CODEGEN--\":21739:21757   */\n      add\n        /* \"--CODEGEN--\":21732:21780   */\n      mstore\n        /* \"--CODEGEN--\":21794:21952   */\n      dup3\n        /* \"--CODEGEN--\":12312:12317   */\n      dup8\n        /* \"--CODEGEN--\":28199:28211   */\n      sload\n        /* \"--CODEGEN--\":28666:28672   */\n      dup1\n        /* \"--CODEGEN--\":28661:28664   */\n      dup6\n        /* \"--CODEGEN--\":28654:28673   */\n      mstore\n        /* \"--CODEGEN--\":28694:28708   */\n      0x60\n      swap5\n      pop\n      dup5\n        /* \"--CODEGEN--\":21625:21634   */\n      dup9\n        /* \"--CODEGEN--\":28694:28708   */\n      add\n        /* \"--CODEGEN--\":12324:12445   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":27843:27846   */\n      dup9\n      dup8\n        /* \"--CODEGEN--\":27833:27847   */\n      mstore\n        /* \"--CODEGEN--\":21754:21756   */\n      dup3\n      dup8\n        /* \"--CODEGEN--\":27862:27880   */\n      keccak256\n      dup8\n        /* \"--CODEGEN--\":12577:12905   */\n    tag_486:\n        /* \"--CODEGEN--\":12602:12608   */\n      dup3\n        /* \"--CODEGEN--\":12599:12600   */\n      dup2\n        /* \"--CODEGEN--\":12596:12609   */\n      lt\n        /* \"--CODEGEN--\":12577:12905   */\n      iszero\n      tag_488\n      jumpi\n        /* \"--CODEGEN--\":18647:18663   */\n      dup2\n        /* \"--CODEGEN--\":18641:18664   */\n      sload\n        /* \"--CODEGEN--\":29134:29176   */\n      dup7\n        /* \"--CODEGEN--\":18735:18744   */\n      dup2\n        /* \"--CODEGEN--\":29123:29177   */\n      and\n        /* \"--CODEGEN--\":11774:11777   */\n      dup6\n        /* \"--CODEGEN--\":11767:11804   */\n      mstore\n        /* \"--CODEGEN--\":29272:29276   */\n      0xff\n      dup1\n        /* \"--CODEGEN--\":18947:18956   */\n      dup3\n        /* \"--CODEGEN--\":31647:31650   */\n      0xa0\n        /* \"--CODEGEN--\":31643:31658   */\n      shr\n        /* \"--CODEGEN--\":29261:29277   */\n      and\n        /* \"--CODEGEN--\":29767:29819   */\n      tag_489\n        /* \"--CODEGEN--\":29813:29818   */\n      dup2\n        /* \"--CODEGEN--\":29767:29819   */\n      tag_490\n      jump\t// in\n    tag_489:\n        /* \"--CODEGEN--\":19028:19042   */\n      dup7\n      dup9\n      add\n        /* \"--CODEGEN--\":13225:13292   */\n      mstore\n        /* \"--CODEGEN--\":31761:31764   */\n      0xa8\n        /* \"--CODEGEN--\":31757:31772   */\n      swap2\n      swap1\n      swap2\n      shr\n        /* \"--CODEGEN--\":29261:29277   */\n      and\n        /* \"--CODEGEN--\":29575:29588   */\n      iszero\n        /* \"--CODEGEN--\":29568:29589   */\n      iszero\n        /* \"--CODEGEN--\":19211:19225   */\n      dup9\n      dup6\n      add\n        /* \"--CODEGEN--\":12990:13024   */\n      mstore\n        /* \"--CODEGEN--\":11678:11692   */\n      swap3\n      dup7\n      add\n      swap3\n        /* \"--CODEGEN--\":12624:12625   */\n      0x01\n        /* \"--CODEGEN--\":28481:28495   */\n      swap2\n      dup3\n      add\n      swap2\n        /* \"--CODEGEN--\":12617:12626   */\n      add\n        /* \"--CODEGEN--\":12577:12905   */\n      jump(tag_486)\n    tag_488:\n      pop\n        /* \"--CODEGEN--\":21786:21952   */\n      swap2\n      swap11\n        /* \"--CODEGEN--\":21607:21962   */\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":21969:22435   */\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":29123:29177   */\n      dup5\n      and\n        /* \"--CODEGEN--\":11767:11804   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":22163:22165   */\n      0x60\n        /* \"--CODEGEN--\":22148:22166   */\n      dup2\n      add\n        /* \"--CODEGEN--\":29767:29819   */\n      tag_492\n        /* \"--CODEGEN--\":29813:29818   */\n      dup5\n        /* \"--CODEGEN--\":29767:29819   */\n      tag_490\n      jump\t// in\n    tag_492:\n        /* \"--CODEGEN--\":30319:30362   */\n      dup4\n        /* \"--CODEGEN--\":22344:22346   */\n      0x20\n        /* \"--CODEGEN--\":22333:22342   */\n      dup4\n        /* \"--CODEGEN--\":22329:22347   */\n      add\n        /* \"--CODEGEN--\":13225:13292   */\n      mstore\n        /* \"--CODEGEN--\":13017:13022   */\n      dup3\n        /* \"--CODEGEN--\":29575:29588   */\n      iszero\n        /* \"--CODEGEN--\":29568:29589   */\n      iszero\n        /* \"--CODEGEN--\":22421:22423   */\n      0x40\n        /* \"--CODEGEN--\":22410:22419   */\n      dup4\n        /* \"--CODEGEN--\":22406:22424   */\n      add\n        /* \"--CODEGEN--\":12990:13024   */\n      mstore\n        /* \"--CODEGEN--\":22134:22435   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":22442:22752   */\n    tag_310:\n      0x00\n        /* \"--CODEGEN--\":22589:22591   */\n      0x20\n        /* \"--CODEGEN--\":22610:22627   */\n      dup3\n        /* \"--CODEGEN--\":22603:22650   */\n      mstore\n        /* \"--CODEGEN--\":22664:22742   */\n      tag_224\n        /* \"--CODEGEN--\":22589:22591   */\n      0x20\n        /* \"--CODEGEN--\":22578:22587   */\n      dup4\n        /* \"--CODEGEN--\":22574:22592   */\n      add\n        /* \"--CODEGEN--\":22728:22734   */\n      dup5\n        /* \"--CODEGEN--\":22664:22742   */\n      tag_464\n      jump\t// in\n        /* \"--CODEGEN--\":22759:23175   */\n    tag_200:\n        /* \"--CODEGEN--\":22959:22961   */\n      0x20\n        /* \"--CODEGEN--\":22973:23020   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":15273:15275   */\n      0x26\n        /* \"--CODEGEN--\":22944:22962   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":28654:28673   */\n      mstore\n        /* \"--CODEGEN--\":15309:15343   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"--CODEGEN--\":28694:28708   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":15289:15344   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"--CODEGEN--\":15364:15376   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":15357:15387   */\n      mstore\n        /* \"--CODEGEN--\":15406:15418   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":22930:23175   */\n      jump\t// out\n        /* \"--CODEGEN--\":23182:23598   */\n    tag_285:\n        /* \"--CODEGEN--\":23382:23384   */\n      0x20\n        /* \"--CODEGEN--\":23396:23443   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":15657:15659   */\n      0x22\n        /* \"--CODEGEN--\":23367:23385   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":28654:28673   */\n      mstore\n        /* \"--CODEGEN--\":15693:15727   */\n      0x62617365556e6974206d7573742062652067726561746572207468616e207a65\n        /* \"--CODEGEN--\":28694:28708   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":15673:15728   */\n      mstore\n      shl(0xf0, 0x726f)\n        /* \"--CODEGEN--\":15748:15760   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":15741:15767   */\n      mstore\n        /* \"--CODEGEN--\":15786:15798   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":23353:23598   */\n      jump\t// out\n        /* \"--CODEGEN--\":23605:24021   */\n    tag_98:\n        /* \"--CODEGEN--\":23805:23807   */\n      0x20\n        /* \"--CODEGEN--\":23819:23866   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":16037:16039   */\n      0x0a\n        /* \"--CODEGEN--\":23790:23808   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":28654:28673   */\n      mstore\n      shl(0xb0, 0x62616420706172616d73)\n        /* \"--CODEGEN--\":28694:28708   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":16053:16086   */\n      mstore\n        /* \"--CODEGEN--\":16105:16117   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":23776:24021   */\n      jump\t// out\n        /* \"--CODEGEN--\":24028:24444   */\n    tag_276:\n        /* \"--CODEGEN--\":24228:24230   */\n      0x20\n        /* \"--CODEGEN--\":24242:24289   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":16356:16358   */\n      0x1a\n        /* \"--CODEGEN--\":24213:24231   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":28654:28673   */\n      mstore\n        /* \"--CODEGEN--\":16392:16420   */\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n        /* \"--CODEGEN--\":28694:28708   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":16372:16421   */\n      mstore\n        /* \"--CODEGEN--\":16440:16452   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":24199:24444   */\n      jump\t// out\n        /* \"--CODEGEN--\":24451:24867   */\n    tag_222:\n        /* \"--CODEGEN--\":24651:24653   */\n      0x20\n        /* \"--CODEGEN--\":24665:24712   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":16691:16693   */\n      0x1b\n        /* \"--CODEGEN--\":24636:24654   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":28654:28673   */\n      mstore\n        /* \"--CODEGEN--\":16727:16756   */\n      0x7072696365206d75737420626967676572207468616e207a65726f0000000000\n        /* \"--CODEGEN--\":28694:28708   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":16707:16757   */\n      mstore\n        /* \"--CODEGEN--\":16776:16788   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":24622:24867   */\n      jump\t// out\n        /* \"--CODEGEN--\":24874:25290   */\n    tag_95:\n        /* \"--CODEGEN--\":25074:25076   */\n      0x20\n        /* \"--CODEGEN--\":25088:25135   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":17027:17029   */\n      0x31\n        /* \"--CODEGEN--\":25059:25077   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":28654:28673   */\n      mstore\n        /* \"--CODEGEN--\":17063:17097   */\n      0x736f7572636554797065732e6c656e677468206d75737420657175616c207468\n        /* \"--CODEGEN--\":28694:28708   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":17043:17098   */\n      mstore\n      shl(0x7b, 0x0c2dc40e6deeae4c6cae65cd8cadccee8d)\n        /* \"--CODEGEN--\":17118:17130   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":17111:17152   */\n      mstore\n        /* \"--CODEGEN--\":17171:17183   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":25045:25290   */\n      jump\t// out\n        /* \"--CODEGEN--\":25297:25713   */\n    tag_272:\n        /* \"--CODEGEN--\":25497:25499   */\n      0x20\n        /* \"--CODEGEN--\":25511:25558   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":17422:17424   */\n      0x21\n        /* \"--CODEGEN--\":25482:25500   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":28654:28673   */\n      mstore\n        /* \"--CODEGEN--\":17458:17492   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"--CODEGEN--\":28694:28708   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":17438:17493   */\n      mstore\n      shl(0xf8, 0x77)\n        /* \"--CODEGEN--\":17513:17525   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":17506:17531   */\n      mstore\n        /* \"--CODEGEN--\":17550:17562   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":25468:25713   */\n      jump\t// out\n        /* \"--CODEGEN--\":25720:26136   */\n    tag_91:\n        /* \"--CODEGEN--\":25920:25922   */\n      0x20\n        /* \"--CODEGEN--\":25934:25981   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":25905:25923   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":28654:28673   */\n      mstore\n        /* \"--CODEGEN--\":17837:17871   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"--CODEGEN--\":28694:28708   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":17817:17872   */\n      mstore\n        /* \"--CODEGEN--\":17891:17903   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":25891:26136   */\n      jump\t// out\n        /* \"--CODEGEN--\":26143:26559   */\n    tag_154:\n        /* \"--CODEGEN--\":26343:26345   */\n      0x20\n        /* \"--CODEGEN--\":26357:26404   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":18142:18144   */\n      0x40\n        /* \"--CODEGEN--\":26328:26346   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":28654:28673   */\n      dup2\n      swap1\n      mstore\n        /* \"--CODEGEN--\":18178:18212   */\n      0x746f6b656e732e6c656e677468206d75737420657175616c207468616e206368\n        /* \"--CODEGEN--\":28694:28708   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":18158:18213   */\n      mstore\n        /* \"--CODEGEN--\":18247:18281   */\n      0x61696e4c696e6b546f6b656e457468507269636546656564732e6c656e677468\n        /* \"--CODEGEN--\":18233:18245   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":18226:18282   */\n      mstore\n        /* \"--CODEGEN--\":18301:18313   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":26314:26559   */\n      jump\t// out\n        /* \"--CODEGEN--\":26566:26788   */\n    tag_36:\n        /* \"--CODEGEN--\":19325:19362   */\n      swap1\n      dup2\n      mstore\n        /* \"--CODEGEN--\":26693:26695   */\n      0x20\n        /* \"--CODEGEN--\":26678:26696   */\n      add\n      swap1\n        /* \"--CODEGEN--\":26664:26788   */\n      jump\t// out\n        /* \"--CODEGEN--\":26795:27051   */\n    tag_366:\n        /* \"--CODEGEN--\":26857:26859   */\n      0x40\n        /* \"--CODEGEN--\":26851:26860   */\n      mload\n        /* \"--CODEGEN--\":26883:26900   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":26958:26976   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":26943:26977   */\n      dup2\n      gt\n        /* \"--CODEGEN--\":26979:27001   */\n      dup3\n      dup3\n      lt\n        /* \"--CODEGEN--\":26940:27002   */\n      or\n        /* \"--CODEGEN--\":26937:26939   */\n      iszero\n      tag_506\n      jumpi\n        /* \"--CODEGEN--\":27015:27016   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":27005:27017   */\n      revert\n        /* \"--CODEGEN--\":26937:26939   */\n    tag_506:\n        /* \"--CODEGEN--\":26857:26859   */\n      0x40\n        /* \"--CODEGEN--\":27024:27046   */\n      mstore\n        /* \"--CODEGEN--\":26835:27051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":27369:27691   */\n    tag_395:\n      0x00\n        /* \"--CODEGEN--\":27513:27531   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":27505:27511   */\n      dup3\n        /* \"--CODEGEN--\":27502:27532   */\n      gt\n        /* \"--CODEGEN--\":27499:27501   */\n      iszero\n      tag_508\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":27535:27547   */\n      revert\n        /* \"--CODEGEN--\":27499:27501   */\n    tag_508:\n      pop\n        /* \"--CODEGEN--\":31431:31438   */\n      0x1f\n        /* \"--CODEGEN--\":27589:27606   */\n      add\n      not(0x1f)\n        /* \"--CODEGEN--\":27585:27618   */\n      and\n        /* \"--CODEGEN--\":27676:27680   */\n      0x20\n        /* \"--CODEGEN--\":27666:27681   */\n      add\n      swap1\n        /* \"--CODEGEN--\":27436:27691   */\n      jump\t// out\n        /* \"--CODEGEN--\":27698:27896   */\n    tag_480:\n      0x00\n        /* \"--CODEGEN--\":27833:27847   */\n      swap1\n      dup2\n      mstore\n        /* \"--CODEGEN--\":27875:27879   */\n      0x20\n        /* \"--CODEGEN--\":27862:27880   */\n      swap1\n      keccak256\n      swap1\n        /* \"--CODEGEN--\":27792:27896   */\n      jump\t// out\n        /* \"--CODEGEN--\":30529:30797   */\n    tag_447:\n        /* \"--CODEGEN--\":30594:30595   */\n      0x00\n        /* \"--CODEGEN--\":30601:30702   */\n    tag_512:\n        /* \"--CODEGEN--\":30615:30621   */\n      dup4\n        /* \"--CODEGEN--\":30612:30613   */\n      dup2\n        /* \"--CODEGEN--\":30609:30622   */\n      lt\n        /* \"--CODEGEN--\":30601:30702   */\n      iszero\n      tag_514\n      jumpi\n        /* \"--CODEGEN--\":30682:30693   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":30676:30694   */\n      mload\n        /* \"--CODEGEN--\":30663:30674   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":30656:30695   */\n      mstore\n        /* \"--CODEGEN--\":30637:30639   */\n      0x20\n        /* \"--CODEGEN--\":30630:30640   */\n      add\n        /* \"--CODEGEN--\":30601:30702   */\n      jump(tag_512)\n    tag_514:\n        /* \"--CODEGEN--\":30717:30723   */\n      dup4\n        /* \"--CODEGEN--\":30714:30715   */\n      dup2\n        /* \"--CODEGEN--\":30711:30724   */\n      gt\n        /* \"--CODEGEN--\":30708:30710   */\n      iszero\n      tag_515\n      jumpi\n        /* \"--CODEGEN--\":30594:30595   */\n      0x00\n        /* \"--CODEGEN--\":30773:30779   */\n      dup5\n        /* \"--CODEGEN--\":30768:30771   */\n      dup5\n        /* \"--CODEGEN--\":30764:30780   */\n      add\n        /* \"--CODEGEN--\":30757:30784   */\n      mstore\n        /* \"--CODEGEN--\":30708:30710   */\n    tag_515:\n      pop\n        /* \"--CODEGEN--\":30578:30797   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":31790:31900   */\n    tag_490:\n        /* \"--CODEGEN--\":31878:31879   */\n      0x05\n        /* \"--CODEGEN--\":31871:31876   */\n      dup2\n        /* \"--CODEGEN--\":31868:31880   */\n      lt\n        /* \"--CODEGEN--\":31858:31860   */\n      tag_517\n      jumpi\n        /* \"--CODEGEN--\":31884:31893   */\n      invalid\n        /* \"--CODEGEN--\":31858:31860   */\n    tag_517:\n        /* \"--CODEGEN--\":31852:31900   */\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":31907:32024   */\n    tag_360:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":29123:29177   */\n      dup2\n      and\n        /* \"--CODEGEN--\":31966:32001   */\n      dup2\n      eq\n        /* \"--CODEGEN--\":31956:31958   */\n      tag_517\n      jumpi\n        /* \"--CODEGEN--\":32015:32016   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":32005:32017   */\n      revert\n        /* \"--CODEGEN--\":32031:32142   */\n    tag_380:\n        /* \"--CODEGEN--\":32112:32117   */\n      dup1\n        /* \"--CODEGEN--\":29575:29588   */\n      iszero\n        /* \"--CODEGEN--\":29568:29589   */\n      iszero\n        /* \"--CODEGEN--\":32090:32095   */\n      dup2\n        /* \"--CODEGEN--\":32087:32119   */\n      eq\n        /* \"--CODEGEN--\":32077:32079   */\n      tag_517\n      jumpi\n        /* \"--CODEGEN--\":32133:32134   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":32123:32135   */\n      revert\n\n    auxdata: 0xa26469706673582212201635b1f874a724e85bbb1d43084d7c921f6e5200139cb04174148fb03d462ac864736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506122b8806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806398ee9a1311610097578063bec69b4f11610066578063bec69b4f1461020d578063e316e29714610220578063f2fde38b14610233578063fc57d4df1461024657610100565b806398ee9a13146101bd5780639e237b1c146101d0578063a00a8b2c146101e3578063a22e6ee31461020557610100565b8063715018a6116100d3578063715018a61461017a57806371cc09a9146101825780638341301a146101955780638da5cb5b146101b557610100565b80630e4230a0146101055780631b69dc5f1461011a57806343f5ae361461014757806349b39fd614610167575b600080fd5b6101186101133660046119cf565b610259565b005b61012d610128366004611997565b610545565b60405161013e959493929190611db8565b60405180910390f35b61015a610155366004611997565b61060f565b60405161013e91906121c2565b610118610175366004611ad2565b61062e565b61011861070e565b610118610190366004611a9a565b610797565b6101a86101a3366004611997565b61086e565b60405161013e9190611da4565b6101a8610889565b6101186101cb366004611b63565b610898565b61015a6101de366004611ad2565b610971565b6101f66101f1366004611ad2565b610aea565b60405161013e93929190611f41565b6101a8610b34565b61011861021b366004611997565b610b43565b61011861022e366004611afd565b610ba4565b610118610241366004611997565b610d28565b61015a610254366004611997565b610de9565b610261610ffd565b6001600160a01b0316610272610889565b6001600160a01b0316146102a15760405162461bcd60e51b81526004016102989061212f565b60405180910390fd5b825181146102c15760405162461bcd60e51b81526004016102989061209d565b6001600160a01b0380891660009081526097602052604090208054909116156102fc5760405162461bcd60e51b81526004016102989061200b565b80546001600160a01b03808b166001600160a01b0319928316178355600183018054918b1691909216179055865161033d90600283019060208a019061174c565b506003810186905560048101805460ff19168615151790556001600160a01b03891660009081526098602052604090205460011161038d5760405162461bcd60e51b81526004016102989061200b565b60005b84518110156104a8576000609860008c6001600160a01b03166001600160a01b0316815260200190815260200160002090508060405180606001604052808885815181106103da57fe5b60200260200101516001600160a01b031681526020018787868181106103fc57fe5b90506020020160208101906104119190611bc4565b600481111561041c57fe5b815260016020918201819052835490810184556000938452928190208251930180546001600160a01b0319166001600160a01b03909416939093178084559082015191929190829060ff60a01b1916600160a01b83600481111561047c57fe5b0217905550604091909101518154901515600160a81b0260ff60a81b1990911617905550600101610390565b507f7e55bc43e6f0111474264fd86152c4a3e172abc29a15f5474298510ce6ff69ea89898989896040516104e0959493929190611db8565b60405180910390a16001600160a01b0389166000908152609860205260409081902090517f3305406be9630a8e3735461ddfb1c43204cdc73f28649e8038cafb44584d14bc91610532918c9190611ebf565b60405180910390a1505050505050505050565b60976020908152600091825260409182902080546001808301546002808501805488516101009582161595909502600019011691909104601f81018790048702840187019097528683526001600160a01b03938416969390911694919290918301828280156105f55780601f106105ca576101008083540402835291602001916105f5565b820191906000526020600020905b8154815290600101906020018083116105d857829003601f168201915b50505050600383015460049093015491929160ff16905085565b6001600160a01b0381166000908152609860205260409020545b919050565b610636610ffd565b6001600160a01b0316610647610889565b6001600160a01b03161461066d5760405162461bcd60e51b81526004016102989061212f565b6001600160a01b03808316600090815260976020526040902080549091166106a75760405162461bcd60e51b81526004016102989061200b565b60038101829055600181015460048201546040517f7e55bc43e6f0111474264fd86152c4a3e172abc29a15f5474298510ce6ff69ea926107019287926001600160a01b03909216916002870191889160ff90911690611dfd565b60405180910390a1505050565b610716610ffd565b6001600160a01b0316610727610889565b6001600160a01b03161461074d5760405162461bcd60e51b81526004016102989061212f565b6065546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3606580546001600160a01b0319169055565b61079f610ffd565b6001600160a01b03166107b0610889565b6001600160a01b0316146107d65760405162461bcd60e51b81526004016102989061212f565b6001600160a01b03808316600090815260976020526040902080549091166108105760405162461bcd60e51b81526004016102989061200b565b60048101805460ff1916831515179055600181015460038201546040517f7e55bc43e6f0111474264fd86152c4a3e172abc29a15f5474298510ce6ff69ea926107019287926001600160a01b03909216916002870191908890611dfd565b6099602052600090815260409020546001600160a01b031681565b6065546001600160a01b031690565b6108a0610ffd565b6001600160a01b03166108b1610889565b6001600160a01b0316146108d75760405162461bcd60e51b81526004016102989061212f565b80518251146108f85760405162461bcd60e51b815260040161029890612164565b60005b825181101561096c57600083828151811061091257fe5b6020026020010151905082828151811061092857fe5b6020908102919091018101516001600160a01b0392831660009081526099909252604090912080546001600160a01b031916929091169190911790556001016108fb565b505050565b6001600160a01b03828116600090815260976020908152604080832060988352818420825160a081018452825487168152600180840154909716818601526002808401805486516101009a8216159a909a02600019011691909104601f81018790048702890187018652808952969793969295610adf958b9593948994918601939192830182828015610a455780601f10610a1a57610100808354040283529160200191610a45565b820191906000526020600020905b815481529060010190602001808311610a2857829003601f168201915b50505091835250506003820154602082015260049091015460ff1615156040909101528354849088908110610a7657fe5b60009182526020918290206040805160608101909152910180546001600160a01b03811683529192909190830190600160a01b900460ff166004811115610ab957fe5b6004811115610ac457fe5b81529054600160a81b900460ff161515602090910152611001565b925050505b92915050565b60986020528160005260406000208181548110610b0357fe5b6000918252602090912001546001600160a01b038116925060ff600160a01b820481169250600160a81b9091041683565b609a546001600160a01b031681565b610b4b610ffd565b6001600160a01b0316610b5c610889565b6001600160a01b031614610b825760405162461bcd60e51b81526004016102989061212f565b609a80546001600160a01b0319166001600160a01b0392909216919091179055565b610bac610ffd565b6001600160a01b0316610bbd610889565b6001600160a01b031614610be35760405162461bcd60e51b81526004016102989061212f565b6001600160a01b03851660009081526098602052604090208054851015610c75576000818681548110610c1257fe5b600091825260209091200180546001600160a01b0319166001600160a01b038716178082559091508490829060ff60a01b1916600160a01b836004811115610c5657fe5b0217905550805460ff60a81b1916600160a81b84151502179055610d20565b806040518060600160405280866001600160a01b03168152602001856004811115610c9c57fe5b815284151560209182015282546001810184556000938452928190208251930180546001600160a01b0319166001600160a01b03909416939093178084559082015191929190829060ff60a01b1916600160a01b836004811115610cfc57fe5b0217905550604091909101518154901515600160a81b0260ff60a81b199091161790555b505050505050565b610d30610ffd565b6001600160a01b0316610d41610889565b6001600160a01b031614610d675760405162461bcd60e51b81526004016102989061212f565b6001600160a01b038116610d8d5760405162461bcd60e51b815260040161029890611f83565b6065546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3606580546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152609760205260408120600481015482919060ff1615610e4657600381015460019250610e3d90610e37846ec097ce7bc90715b34b9f10000000006111e8565b90611222565b92505050610629565b6001600160a01b0384166000908152609860205260408120905b8154811015610fd1576000828281548110610e7757fe5b60009182526020909120018054909150600160a81b900460ff16151560011415610fc8576040805160a08101825285546001600160a01b0390811682526001808801549091166020808401919091526002808901805486516101009582161595909502600019011691909104601f81018390048302840183018652808452610fb3958d95948b949186019390929091830182828015610f575780601f10610f2c57610100808354040283529160200191610f57565b820191906000526020600020905b815481529060010190602001808311610f3a57829003601f168201915b5050509183525050600382015460208083019190915260049283015460ff908116151560409384015282516060810190935287546001600160a01b03811684529293889392850192600160a01b900490911690811115610ab957fe5b94508415610fc8578495505050505050610629565b50600101610e60565b5060008311610ff25760405162461bcd60e51b815260040161029890612066565b506000949350505050565b3390565b60008073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee905060008590506110bc816001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561105c57600080fd5b505afa158015611070573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110989190810190611bdf565b60405180604001604052806006815260200165704d4154494360d01b815250611254565b61113457856001600160a01b0316636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b1580156110f957600080fd5b505afa15801561110d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113191906119b3565b91505b6020840151600081600481111561114757fe5b14156111615761115785876112ad565b93505050506111e1565b600181600481111561116f57fe5b141561117f57611157858761138f565b600281600481111561118d57fe5b141561119d576111578587611457565b60038160048111156111ab57fe5b14156111bb576111578587611573565b60048160048111156111c957fe5b14156111d95761115785876115ac565b600093505050505b9392505050565b6000826111f757506000610ae4565b8282028284828161120457fe5b04146111e15760405162461bcd60e51b8152600401610298906120ee565b60008082116112435760405162461bcd60e51b81526004016102989061202f565b81838161124c57fe5b049392505050565b6000816040516020016112679190611d88565b604051602081830303815290604052805190602001208360405160200161128e9190611d88565b6040516020818303038152906040528051906020012014905092915050565b6000808260600151116112d25760405162461bcd60e51b815260040161029890611fc9565b6000836000015190506000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561131657600080fd5b505afa15801561132a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134e9190611d05565b5050509150506000811361136757600092505050610ae4565b606084015161138690610e37836b204fce5e3e250261100000006111e8565b92505050610ae4565b81516020820151604051630141c63160e51b815260009291829184916001600160a01b03841691632838c620916113c891600401611da4565b60206040518083038186803b1580156113e057600080fd5b505afa1580156113f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114189190611ced565b90506000811161142e5760009350505050610ae4565b606085015161144d90610e37836b204fce5e3e250261100000006111e8565b9350505050610ae4565b8151600090806114656117ca565b60408086015190516313b6165d60e11b81526001600160a01b0384169163276c2cba916114959190600401611f70565b6101006040518083038186803b1580156114ae57600080fd5b505afa1580156114c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e69190611c52565b805160405163fc57d4df60e01b8152919250906001600160a01b0384169063fc57d4df90611518908490600401611da4565b60206040518083038186803b15801561153057600080fd5b505afa158015611544573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115689190611ced565b979650505050505050565b815160208201516040516341976e0960e01b815260009291829184916001600160a01b038416916341976e09916113c891600401611da4565b6000808260600151116115d15760405162461bcd60e51b815260040161029890611fc9565b6020808301516001600160a01b03808216600090815260999093526040808420548151633fabe5a360e21b815291519394921692839163feaf968c9160048083019260a0929190829003018186803b15801561162c57600080fd5b505afa158015611640573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116649190611d05565b5050509150506000609a60009054906101000a90046001600160a01b031690506000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156116bf57600080fd5b505afa1580156116d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f79190611d05565b5050509150506000831361171357600095505050505050610ae4565b606087015161173590610e376402540be40061172f87866111e8565b906111e8565b95505050505050610ae4565b505050505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061178d57805160ff19168380011785556117ba565b828001600101855582156117ba579182015b828111156117ba57825182559160200191906001019061179f565b506117c692915061180f565b5090565b60408051610100810182526000808252602082018190529181018290526060810182905290608082019081526000602082018190526040820181905260609091015290565b5b808211156117c65760008155600101611810565b8051610ae48161225f565b600082601f83011261183f578081fd5b813567ffffffffffffffff811115611855578182fd5b60208082026118658282016121cb565b8381529350818401858301828701840188101561188157600080fd5b600092505b848310156117415780356118998161225f565b825260019290920191908301908301611886565b60008083601f8401126118be578081fd5b50813567ffffffffffffffff8111156118d5578182fd5b60208301915083602080830285010111156118ef57600080fd5b9250929050565b8035610ae481612274565b8051610ae481612274565b803560058110610ae457600080fd5b805160038110610ae457600080fd5b600082601f83011261193a578081fd5b813561194d611948826121f2565b6121cb565b915080825283602082850101111561196457600080fd5b8060208401602084013760009082016020015292915050565b805169ffffffffffffffffffff81168114610ae457600080fd5b6000602082840312156119a8578081fd5b81356111e18161225f565b6000602082840312156119c4578081fd5b81516111e18161225f565b60008060008060008060008060e0898b0312156119ea578384fd5b88356119f58161225f565b97506020890135611a058161225f565b9650604089013567ffffffffffffffff80821115611a21578586fd5b611a2d8c838d0161192a565b975060608b01359650611a438c60808d016118f6565b955060a08b0135915080821115611a58578485fd5b611a648c838d0161182f565b945060c08b0135915080821115611a79578384fd5b50611a868b828c016118ad565b999c989b5096995094979396929594505050565b60008060408385031215611aac578182fd5b8235611ab78161225f565b91506020830135611ac781612274565b809150509250929050565b60008060408385031215611ae4578182fd5b8235611aef8161225f565b946020939093013593505050565b600080600080600060a08688031215611b14578081fd5b8535611b1f8161225f565b9450602086013593506040860135611b368161225f565b9250611b45876060880161190c565b91506080860135611b5581612274565b809150509295509295909350565b60008060408385031215611b75578182fd5b823567ffffffffffffffff80821115611b8c578384fd5b611b988683870161182f565b93506020850135915080821115611bad578283fd5b50611bba8582860161182f565b9150509250929050565b600060208284031215611bd5578081fd5b6111e1838361190c565b600060208284031215611bf0578081fd5b815167ffffffffffffffff811115611c06578182fd5b8201601f81018413611c16578182fd5b8051611c24611948826121f2565b818152856020838501011115611c38578384fd5b611c49826020830160208601612222565b95945050505050565b6000610100808385031215611c65578182fd5b611c6e816121cb565b90508251611c7b8161225f565b81526020830151611c8b8161225f565b806020830152506040830151604082015260608301516060820152611cb3846080850161191b565b608082015260a083015160a0820152611ccf8460c08501611824565b60c0820152611ce18460e08501611901565b60e08201529392505050565b600060208284031215611cfe578081fd5b5051919050565b600080600080600060a08688031215611d1c578283fd5b611d26878761197d565b9450602086015193506040860151925060608601519150611d4a876080880161197d565b90509295509295909350565b15159052565b60008151808452611d74816020860160208601612222565b601f01601f19169290920160200192915050565b60008251611d9a818460208701612222565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0386811682528516602082015260a060408201819052600090611de490830186611d5c565b6060830194909452509015156080909101529392505050565b600060a0820160018060a01b03808916845260208189168186015260a060408601528391508754600180821660008114611e3e5760018114611e5e57611e99565b611e4e607f6002850416876121c2565b60ff198416815284019450611e99565b60028304611e6c81886121c2565b611e758d612216565b895b83811015611e9057815483820152908501908701611e77565b91909101965050505b505050508092505050836060830152611eb56080830184611d56565b9695505050505050565b6000604080830160018060a01b03808716855260208381870152828754808552606094508488019150888752828720875b82811015611f31578154868116855260ff808260a01c16611f1081612252565b8688015260a89190911c161515888501529286019260019182019101611ef0565b50919a9950505050505050505050565b6001600160a01b038416815260608101611f5a84612252565b8360208301528215156040830152949350505050565b6000602082526111e16020830184611d5c565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f62617365556e6974206d7573742062652067726561746572207468616e207a65604082015261726f60f01b606082015260800190565b6020808252600a908201526962616420706172616d7360b01b604082015260600190565b6020808252601a908201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604082015260600190565b6020808252601b908201527f7072696365206d75737420626967676572207468616e207a65726f0000000000604082015260600190565b60208082526031908201527f736f7572636554797065732e6c656e677468206d75737420657175616c2074686040820152700c2dc40e6deeae4c6cae65cd8cadccee8d607b1b606082015260800190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260409082018190527f746f6b656e732e6c656e677468206d75737420657175616c207468616e206368908201527f61696e4c696e6b546f6b656e457468507269636546656564732e6c656e677468606082015260800190565b90815260200190565b60405181810167ffffffffffffffff811182821017156121ea57600080fd5b604052919050565b600067ffffffffffffffff821115612208578081fd5b50601f01601f191660200190565b60009081526020902090565b60005b8381101561223d578181015183820152602001612225565b8381111561224c576000848401525b50505050565b6005811061225c57fe5b50565b6001600160a01b038116811461225c57600080fd5b801515811461225c57600080fdfea26469706673582212201635b1f874a724e85bbb1d43084d7c921f6e5200139cb04174148fb03d462ac864736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B8 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98EE9A13 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xBEC69B4F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBEC69B4F EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xE316E297 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xFC57D4DF EQ PUSH2 0x246 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x98EE9A13 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x9E237B1C EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0xA00A8B2C EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xA22E6EE3 EQ PUSH2 0x205 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x71CC09A9 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x8341301A EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B5 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0xE4230A0 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x1B69DC5F EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x43F5AE36 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x49B39FD6 EQ PUSH2 0x167 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CF JUMP JUMPDEST PUSH2 0x259 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12D PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x1997 JUMP JUMPDEST PUSH2 0x545 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x1997 JUMP JUMPDEST PUSH2 0x60F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD2 JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST PUSH2 0x118 PUSH2 0x70E JUMP JUMPDEST PUSH2 0x118 PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A9A JUMP JUMPDEST PUSH2 0x797 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1997 JUMP JUMPDEST PUSH2 0x86E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x889 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x1CB CALLDATASIZE PUSH1 0x4 PUSH2 0x1B63 JUMP JUMPDEST PUSH2 0x898 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x1DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD2 JUMP JUMPDEST PUSH2 0x971 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x1F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD2 JUMP JUMPDEST PUSH2 0xAEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F41 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0xB34 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x1997 JUMP JUMPDEST PUSH2 0xB43 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0xBA4 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0x1997 JUMP JUMPDEST PUSH2 0xD28 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0x1997 JUMP JUMPDEST PUSH2 0xDE9 JUMP JUMPDEST PUSH2 0x261 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x272 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x212F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 MLOAD DUP2 EQ PUSH2 0x2C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x209D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND ISZERO PUSH2 0x2FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x200B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR DUP4 SSTORE PUSH1 0x1 DUP4 ADD DUP1 SLOAD SWAP2 DUP12 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE DUP7 MLOAD PUSH2 0x33D SWAP1 PUSH1 0x2 DUP4 ADD SWAP1 PUSH1 0x20 DUP11 ADD SWAP1 PUSH2 0x174C JUMP JUMPDEST POP PUSH1 0x3 DUP2 ADD DUP7 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x98 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 GT PUSH2 0x38D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x200B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 PUSH1 0x98 PUSH1 0x0 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x3DA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP8 DUP7 DUP2 DUP2 LT PUSH2 0x3FC JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x1BC4 JUMP JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x41C JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP4 SLOAD SWAP1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP3 MLOAD SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR DUP1 DUP5 SSTORE SWAP1 DUP3 ADD MLOAD SWAP2 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x47C JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD MLOAD DUP2 SLOAD SWAP1 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x390 JUMP JUMPDEST POP PUSH32 0x7E55BC43E6F0111474264FD86152C4A3E172ABC29A15F5474298510CE6FF69EA DUP10 DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x4E0 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x98 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH32 0x3305406BE9630A8E3735461DDFB1C43204CDC73F28649E8038CAFB44584D14BC SWAP2 PUSH2 0x532 SWAP2 DUP13 SWAP2 SWAP1 PUSH2 0x1EBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x97 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP4 ADD SLOAD PUSH1 0x2 DUP1 DUP6 ADD DUP1 SLOAD DUP9 MLOAD PUSH2 0x100 SWAP6 DUP3 AND ISZERO SWAP6 SWAP1 SWAP6 MUL PUSH1 0x0 NOT ADD AND SWAP2 SWAP1 SWAP2 DIV PUSH1 0x1F DUP2 ADD DUP8 SWAP1 DIV DUP8 MUL DUP5 ADD DUP8 ADD SWAP1 SWAP8 MSTORE DUP7 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP7 SWAP4 SWAP1 SWAP2 AND SWAP5 SWAP2 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x5F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x98 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x636 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x647 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x66D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x212F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x200B JUMP JUMPDEST PUSH1 0x3 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x7E55BC43E6F0111474264FD86152C4A3E172ABC29A15F5474298510CE6FF69EA SWAP3 PUSH2 0x701 SWAP3 DUP8 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH1 0x2 DUP8 ADD SWAP2 DUP9 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 PUSH2 0x1DFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x716 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x727 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x74D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x212F JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x79F PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7B0 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x212F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND PUSH2 0x810 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x200B JUMP JUMPDEST PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO OR SWAP1 SSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x7E55BC43E6F0111474264FD86152C4A3E172ABC29A15F5474298510CE6FF69EA SWAP3 PUSH2 0x701 SWAP3 DUP8 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH1 0x2 DUP8 ADD SWAP2 SWAP1 DUP9 SWAP1 PUSH2 0x1DFD JUMP JUMPDEST PUSH1 0x99 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x8A0 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8B1 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x212F JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x8F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x2164 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x96C JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x912 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x928 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x99 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x8FB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x98 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP3 SLOAD DUP8 AND DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD SWAP1 SWAP8 AND DUP2 DUP7 ADD MSTORE PUSH1 0x2 DUP1 DUP5 ADD DUP1 SLOAD DUP7 MLOAD PUSH2 0x100 SWAP11 DUP3 AND ISZERO SWAP11 SWAP1 SWAP11 MUL PUSH1 0x0 NOT ADD AND SWAP2 SWAP1 SWAP2 DIV PUSH1 0x1F DUP2 ADD DUP8 SWAP1 DIV DUP8 MUL DUP10 ADD DUP8 ADD DUP7 MSTORE DUP1 DUP10 MSTORE SWAP7 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 PUSH2 0xADF SWAP6 DUP12 SWAP6 SWAP4 SWAP5 DUP10 SWAP5 SWAP2 DUP7 ADD SWAP4 SWAP2 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xA45 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA1A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA45 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA28 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE DUP4 SLOAD DUP5 SWAP1 DUP9 SWAP1 DUP2 LT PUSH2 0xA76 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xAB9 JUMPI INVALID JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xAC4 JUMPI INVALID JUMPDEST DUP2 MSTORE SWAP1 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE PUSH2 0x1001 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x98 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB03 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND SWAP3 POP PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 SWAP2 DIV AND DUP4 JUMP JUMPDEST PUSH1 0x9A SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xB4B PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB5C PUSH2 0x889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x212F JUMP JUMPDEST PUSH1 0x9A DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xBAC PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBBD PUSH2 0x889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x212F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x98 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP6 LT ISZERO PUSH2 0xC75 JUMPI PUSH1 0x0 DUP2 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xC12 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR DUP1 DUP3 SSTORE SWAP1 SWAP2 POP DUP5 SWAP1 DUP3 SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xC56 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL DUP5 ISZERO ISZERO MUL OR SWAP1 SSTORE PUSH2 0xD20 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xC9C JUMPI INVALID JUMPDEST DUP2 MSTORE DUP5 ISZERO ISZERO PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP3 MLOAD SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR DUP1 DUP5 SSTORE SWAP1 DUP3 ADD MLOAD SWAP2 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xCFC JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD MLOAD DUP2 SLOAD SWAP1 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD30 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD41 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x212F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x1F83 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD DUP3 SWAP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xE46 JUMPI PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 SWAP3 POP PUSH2 0xE3D SWAP1 PUSH2 0xE37 DUP5 PUSH15 0xC097CE7BC90715B34B9F1000000000 PUSH2 0x11E8 JUMP JUMPDEST SWAP1 PUSH2 0x1222 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x98 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0xFD1 JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE77 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0xFC8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP1 DUP9 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP1 DUP10 ADD DUP1 SLOAD DUP7 MLOAD PUSH2 0x100 SWAP6 DUP3 AND ISZERO SWAP6 SWAP1 SWAP6 MUL PUSH1 0x0 NOT ADD AND SWAP2 SWAP1 SWAP2 DIV PUSH1 0x1F DUP2 ADD DUP4 SWAP1 DIV DUP4 MUL DUP5 ADD DUP4 ADD DUP7 MSTORE DUP1 DUP5 MSTORE PUSH2 0xFB3 SWAP6 DUP14 SWAP6 SWAP5 DUP12 SWAP5 SWAP2 DUP7 ADD SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xF57 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF2C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF57 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF3A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x4 SWAP3 DUP4 ADD SLOAD PUSH1 0xFF SWAP1 DUP2 AND ISZERO ISZERO PUSH1 0x40 SWAP4 DUP5 ADD MSTORE DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE DUP8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP5 MSTORE SWAP3 SWAP4 DUP9 SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV SWAP1 SWAP2 AND SWAP1 DUP2 GT ISZERO PUSH2 0xAB9 JUMPI INVALID JUMPDEST SWAP5 POP DUP5 ISZERO PUSH2 0xFC8 JUMPI DUP5 SWAP6 POP POP POP POP POP POP PUSH2 0x629 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xE60 JUMP JUMPDEST POP PUSH1 0x0 DUP4 GT PUSH2 0xFF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x2066 JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE SWAP1 POP PUSH1 0x0 DUP6 SWAP1 POP PUSH2 0x10BC DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95D89B41 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x105C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1070 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1098 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1BDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x704D41544943 PUSH1 0xD0 SHL DUP2 MSTORE POP PUSH2 0x1254 JUMP JUMPDEST PUSH2 0x1134 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6F307DC3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x110D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1131 SWAP2 SWAP1 PUSH2 0x19B3 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1147 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1161 JUMPI PUSH2 0x1157 DUP6 DUP8 PUSH2 0x12AD JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x11E1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x116F JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x117F JUMPI PUSH2 0x1157 DUP6 DUP8 PUSH2 0x138F JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x118D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x119D JUMPI PUSH2 0x1157 DUP6 DUP8 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x11AB JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x11BB JUMPI PUSH2 0x1157 DUP6 DUP8 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x11C9 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x11D9 JUMPI PUSH2 0x1157 DUP6 DUP8 PUSH2 0x15AC JUMP JUMPDEST PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11F7 JUMPI POP PUSH1 0x0 PUSH2 0xAE4 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1204 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x11E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x20EE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1243 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x202F JUMP JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x124C JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1267 SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x128E SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x60 ADD MLOAD GT PUSH2 0x12D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x0 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x132A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x134E SWAP2 SWAP1 PUSH2 0x1D05 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 SGT PUSH2 0x1367 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MLOAD PUSH2 0x1386 SWAP1 PUSH2 0xE37 DUP4 PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x11E8 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0xAE4 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x141C631 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x0 SWAP3 SWAP2 DUP3 SWAP2 DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0x2838C620 SWAP2 PUSH2 0x13C8 SWAP2 PUSH1 0x4 ADD PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1418 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x142E JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MLOAD PUSH2 0x144D SWAP1 PUSH2 0xE37 DUP4 PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x11E8 JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0xAE4 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 DUP1 PUSH2 0x1465 PUSH2 0x17CA JUMP JUMPDEST PUSH1 0x40 DUP1 DUP7 ADD MLOAD SWAP1 MLOAD PUSH4 0x13B6165D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0x276C2CBA SWAP2 PUSH2 0x1495 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x1F70 JUMP JUMPDEST PUSH2 0x100 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14E6 SWAP2 SWAP1 PUSH2 0x1C52 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x40 MLOAD PUSH4 0xFC57D4DF PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xFC57D4DF SWAP1 PUSH2 0x1518 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1544 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1568 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x41976E09 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP3 SWAP2 DUP3 SWAP2 DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0x41976E09 SWAP2 PUSH2 0x13C8 SWAP2 PUSH1 0x4 ADD PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x60 ADD MLOAD GT PUSH2 0x15D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x99 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 MLOAD SWAP4 SWAP5 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x162C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1640 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1664 SWAP2 SWAP1 PUSH2 0x1D05 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 PUSH1 0x9A PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16F7 SWAP2 SWAP1 PUSH2 0x1D05 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP4 SGT PUSH2 0x1713 JUMPI PUSH1 0x0 SWAP6 POP POP POP POP POP POP PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MLOAD PUSH2 0x1735 SWAP1 PUSH2 0xE37 PUSH5 0x2540BE400 PUSH2 0x172F DUP8 DUP7 PUSH2 0x11E8 JUMP JUMPDEST SWAP1 PUSH2 0x11E8 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0xAE4 JUMP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x178D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x17BA JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x17BA JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x17BA JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x179F JUMP JUMPDEST POP PUSH2 0x17C6 SWAP3 SWAP2 POP PUSH2 0x180F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH1 0x80 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x17C6 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1810 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xAE4 DUP2 PUSH2 0x225F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x183F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1855 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MUL PUSH2 0x1865 DUP3 DUP3 ADD PUSH2 0x21CB JUMP JUMPDEST DUP4 DUP2 MSTORE SWAP4 POP DUP2 DUP5 ADD DUP6 DUP4 ADD DUP3 DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x1881 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x1741 JUMPI DUP1 CALLDATALOAD PUSH2 0x1899 DUP2 PUSH2 0x225F JUMP JUMPDEST DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x1886 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x18BE JUMPI DUP1 DUP2 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18D5 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x18EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xAE4 DUP2 PUSH2 0x2274 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xAE4 DUP2 PUSH2 0x2274 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x5 DUP2 LT PUSH2 0xAE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x3 DUP2 LT PUSH2 0xAE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x193A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x194D PUSH2 0x1948 DUP3 PUSH2 0x21F2 JUMP JUMPDEST PUSH2 0x21CB JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP3 ADD PUSH1 0x20 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xAE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11E1 DUP2 PUSH2 0x225F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19C4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x11E1 DUP2 PUSH2 0x225F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xE0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x19EA JUMPI DUP4 DUP5 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x19F5 DUP2 PUSH2 0x225F JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x1A05 DUP2 PUSH2 0x225F JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A21 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x1A2D DUP13 DUP4 DUP14 ADD PUSH2 0x192A JUMP JUMPDEST SWAP8 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP7 POP PUSH2 0x1A43 DUP13 PUSH1 0x80 DUP14 ADD PUSH2 0x18F6 JUMP JUMPDEST SWAP6 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A58 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x1A64 DUP13 DUP4 DUP14 ADD PUSH2 0x182F JUMP JUMPDEST SWAP5 POP PUSH1 0xC0 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A79 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x1A86 DUP12 DUP3 DUP13 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AAC JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1AB7 DUP2 PUSH2 0x225F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1AC7 DUP2 PUSH2 0x2274 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1AEF DUP2 PUSH2 0x225F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B14 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1B1F DUP2 PUSH2 0x225F JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x1B36 DUP2 PUSH2 0x225F JUMP JUMPDEST SWAP3 POP PUSH2 0x1B45 DUP8 PUSH1 0x60 DUP9 ADD PUSH2 0x190C JUMP JUMPDEST SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0x1B55 DUP2 PUSH2 0x2274 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B75 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1B8C JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x1B98 DUP7 DUP4 DUP8 ADD PUSH2 0x182F JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1BAD JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x1BBA DUP6 DUP3 DUP7 ADD PUSH2 0x182F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BD5 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x11E1 DUP4 DUP4 PUSH2 0x190C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BF0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C06 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1C16 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1C24 PUSH2 0x1948 DUP3 PUSH2 0x21F2 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x1C38 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x1C49 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2222 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C65 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1C6E DUP2 PUSH2 0x21CB JUMP JUMPDEST SWAP1 POP DUP3 MLOAD PUSH2 0x1C7B DUP2 PUSH2 0x225F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1C8B DUP2 PUSH2 0x225F JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1CB3 DUP5 PUSH1 0x80 DUP6 ADD PUSH2 0x191B JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x1CCF DUP5 PUSH1 0xC0 DUP6 ADD PUSH2 0x1824 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x1CE1 DUP5 PUSH1 0xE0 DUP6 ADD PUSH2 0x1901 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CFE JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D1C JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x1D26 DUP8 DUP8 PUSH2 0x197D JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x1D4A DUP8 PUSH1 0x80 DUP9 ADD PUSH2 0x197D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1D74 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2222 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1D9A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2222 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1DE4 SWAP1 DUP4 ADD DUP7 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x60 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP SWAP1 ISZERO ISZERO PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND DUP5 MSTORE PUSH1 0x20 DUP2 DUP10 AND DUP2 DUP7 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP7 ADD MSTORE DUP4 SWAP2 POP DUP8 SLOAD PUSH1 0x1 DUP1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x1E3E JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1E5E JUMPI PUSH2 0x1E99 JUMP JUMPDEST PUSH2 0x1E4E PUSH1 0x7F PUSH1 0x2 DUP6 DIV AND DUP8 PUSH2 0x21C2 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP2 MSTORE DUP5 ADD SWAP5 POP PUSH2 0x1E99 JUMP JUMPDEST PUSH1 0x2 DUP4 DIV PUSH2 0x1E6C DUP2 DUP9 PUSH2 0x21C2 JUMP JUMPDEST PUSH2 0x1E75 DUP14 PUSH2 0x2216 JUMP JUMPDEST DUP10 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E90 JUMPI DUP2 SLOAD DUP4 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP8 ADD PUSH2 0x1E77 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP7 POP POP POP JUMPDEST POP POP POP POP DUP1 SWAP3 POP POP POP DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1EB5 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1D56 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP1 DUP4 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP6 MSTORE PUSH1 0x20 DUP4 DUP2 DUP8 ADD MSTORE DUP3 DUP8 SLOAD DUP1 DUP6 MSTORE PUSH1 0x60 SWAP5 POP DUP5 DUP9 ADD SWAP2 POP DUP9 DUP8 MSTORE DUP3 DUP8 KECCAK256 DUP8 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1F31 JUMPI DUP2 SLOAD DUP7 DUP2 AND DUP6 MSTORE PUSH1 0xFF DUP1 DUP3 PUSH1 0xA0 SHR AND PUSH2 0x1F10 DUP2 PUSH2 0x2252 JUMP JUMPDEST DUP7 DUP9 ADD MSTORE PUSH1 0xA8 SWAP2 SWAP1 SWAP2 SHR AND ISZERO ISZERO DUP9 DUP6 ADD MSTORE SWAP3 DUP7 ADD SWAP3 PUSH1 0x1 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1EF0 JUMP JUMPDEST POP SWAP2 SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 DUP2 ADD PUSH2 0x1F5A DUP5 PUSH2 0x2252 JUMP JUMPDEST DUP4 PUSH1 0x20 DUP4 ADD MSTORE DUP3 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x11E1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x62617365556E6974206D7573742062652067726561746572207468616E207A65 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x726F PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xA SWAP1 DUP3 ADD MSTORE PUSH10 0x62616420706172616D73 PUSH1 0xB0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x7072696365206D75737420626967676572207468616E207A65726F0000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x736F7572636554797065732E6C656E677468206D75737420657175616C207468 PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0xC2DC40E6DEEAE4C6CAE65CD8CADCCEE8D PUSH1 0x7B SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x40 SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0x746F6B656E732E6C656E677468206D75737420657175616C207468616E206368 SWAP1 DUP3 ADD MSTORE PUSH32 0x61696E4C696E6B546F6B656E457468507269636546656564732E6C656E677468 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x21EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2208 JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x223D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2225 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x224C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x225C JUMPI INVALID JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x225C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x225C JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND CALLDATALOAD 0xB1 0xF8 PUSH21 0xA724E85BBB1D43084D7C921F6E5200139CB0417414 DUP16 0xB0 RETURNDATASIZE CHAINID 0x2A 0xC8 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1756:10361:6:-:0;;;2774:28;;;;;;;;;;1756:10361;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c806398ee9a1311610097578063bec69b4f11610066578063bec69b4f1461020d578063e316e29714610220578063f2fde38b14610233578063fc57d4df1461024657610100565b806398ee9a13146101bd5780639e237b1c146101d0578063a00a8b2c146101e3578063a22e6ee31461020557610100565b8063715018a6116100d3578063715018a61461017a57806371cc09a9146101825780638341301a146101955780638da5cb5b146101b557610100565b80630e4230a0146101055780631b69dc5f1461011a57806343f5ae361461014757806349b39fd614610167575b600080fd5b6101186101133660046119cf565b610259565b005b61012d610128366004611997565b610545565b60405161013e959493929190611db8565b60405180910390f35b61015a610155366004611997565b61060f565b60405161013e91906121c2565b610118610175366004611ad2565b61062e565b61011861070e565b610118610190366004611a9a565b610797565b6101a86101a3366004611997565b61086e565b60405161013e9190611da4565b6101a8610889565b6101186101cb366004611b63565b610898565b61015a6101de366004611ad2565b610971565b6101f66101f1366004611ad2565b610aea565b60405161013e93929190611f41565b6101a8610b34565b61011861021b366004611997565b610b43565b61011861022e366004611afd565b610ba4565b610118610241366004611997565b610d28565b61015a610254366004611997565b610de9565b610261610ffd565b6001600160a01b0316610272610889565b6001600160a01b0316146102a15760405162461bcd60e51b81526004016102989061212f565b60405180910390fd5b825181146102c15760405162461bcd60e51b81526004016102989061209d565b6001600160a01b0380891660009081526097602052604090208054909116156102fc5760405162461bcd60e51b81526004016102989061200b565b80546001600160a01b03808b166001600160a01b0319928316178355600183018054918b1691909216179055865161033d90600283019060208a019061174c565b506003810186905560048101805460ff19168615151790556001600160a01b03891660009081526098602052604090205460011161038d5760405162461bcd60e51b81526004016102989061200b565b60005b84518110156104a8576000609860008c6001600160a01b03166001600160a01b0316815260200190815260200160002090508060405180606001604052808885815181106103da57fe5b60200260200101516001600160a01b031681526020018787868181106103fc57fe5b90506020020160208101906104119190611bc4565b600481111561041c57fe5b815260016020918201819052835490810184556000938452928190208251930180546001600160a01b0319166001600160a01b03909416939093178084559082015191929190829060ff60a01b1916600160a01b83600481111561047c57fe5b0217905550604091909101518154901515600160a81b0260ff60a81b1990911617905550600101610390565b507f7e55bc43e6f0111474264fd86152c4a3e172abc29a15f5474298510ce6ff69ea89898989896040516104e0959493929190611db8565b60405180910390a16001600160a01b0389166000908152609860205260409081902090517f3305406be9630a8e3735461ddfb1c43204cdc73f28649e8038cafb44584d14bc91610532918c9190611ebf565b60405180910390a1505050505050505050565b60976020908152600091825260409182902080546001808301546002808501805488516101009582161595909502600019011691909104601f81018790048702840187019097528683526001600160a01b03938416969390911694919290918301828280156105f55780601f106105ca576101008083540402835291602001916105f5565b820191906000526020600020905b8154815290600101906020018083116105d857829003601f168201915b50505050600383015460049093015491929160ff16905085565b6001600160a01b0381166000908152609860205260409020545b919050565b610636610ffd565b6001600160a01b0316610647610889565b6001600160a01b03161461066d5760405162461bcd60e51b81526004016102989061212f565b6001600160a01b03808316600090815260976020526040902080549091166106a75760405162461bcd60e51b81526004016102989061200b565b60038101829055600181015460048201546040517f7e55bc43e6f0111474264fd86152c4a3e172abc29a15f5474298510ce6ff69ea926107019287926001600160a01b03909216916002870191889160ff90911690611dfd565b60405180910390a1505050565b610716610ffd565b6001600160a01b0316610727610889565b6001600160a01b03161461074d5760405162461bcd60e51b81526004016102989061212f565b6065546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3606580546001600160a01b0319169055565b61079f610ffd565b6001600160a01b03166107b0610889565b6001600160a01b0316146107d65760405162461bcd60e51b81526004016102989061212f565b6001600160a01b03808316600090815260976020526040902080549091166108105760405162461bcd60e51b81526004016102989061200b565b60048101805460ff1916831515179055600181015460038201546040517f7e55bc43e6f0111474264fd86152c4a3e172abc29a15f5474298510ce6ff69ea926107019287926001600160a01b03909216916002870191908890611dfd565b6099602052600090815260409020546001600160a01b031681565b6065546001600160a01b031690565b6108a0610ffd565b6001600160a01b03166108b1610889565b6001600160a01b0316146108d75760405162461bcd60e51b81526004016102989061212f565b80518251146108f85760405162461bcd60e51b815260040161029890612164565b60005b825181101561096c57600083828151811061091257fe5b6020026020010151905082828151811061092857fe5b6020908102919091018101516001600160a01b0392831660009081526099909252604090912080546001600160a01b031916929091169190911790556001016108fb565b505050565b6001600160a01b03828116600090815260976020908152604080832060988352818420825160a081018452825487168152600180840154909716818601526002808401805486516101009a8216159a909a02600019011691909104601f81018790048702890187018652808952969793969295610adf958b9593948994918601939192830182828015610a455780601f10610a1a57610100808354040283529160200191610a45565b820191906000526020600020905b815481529060010190602001808311610a2857829003601f168201915b50505091835250506003820154602082015260049091015460ff1615156040909101528354849088908110610a7657fe5b60009182526020918290206040805160608101909152910180546001600160a01b03811683529192909190830190600160a01b900460ff166004811115610ab957fe5b6004811115610ac457fe5b81529054600160a81b900460ff161515602090910152611001565b925050505b92915050565b60986020528160005260406000208181548110610b0357fe5b6000918252602090912001546001600160a01b038116925060ff600160a01b820481169250600160a81b9091041683565b609a546001600160a01b031681565b610b4b610ffd565b6001600160a01b0316610b5c610889565b6001600160a01b031614610b825760405162461bcd60e51b81526004016102989061212f565b609a80546001600160a01b0319166001600160a01b0392909216919091179055565b610bac610ffd565b6001600160a01b0316610bbd610889565b6001600160a01b031614610be35760405162461bcd60e51b81526004016102989061212f565b6001600160a01b03851660009081526098602052604090208054851015610c75576000818681548110610c1257fe5b600091825260209091200180546001600160a01b0319166001600160a01b038716178082559091508490829060ff60a01b1916600160a01b836004811115610c5657fe5b0217905550805460ff60a81b1916600160a81b84151502179055610d20565b806040518060600160405280866001600160a01b03168152602001856004811115610c9c57fe5b815284151560209182015282546001810184556000938452928190208251930180546001600160a01b0319166001600160a01b03909416939093178084559082015191929190829060ff60a01b1916600160a01b836004811115610cfc57fe5b0217905550604091909101518154901515600160a81b0260ff60a81b199091161790555b505050505050565b610d30610ffd565b6001600160a01b0316610d41610889565b6001600160a01b031614610d675760405162461bcd60e51b81526004016102989061212f565b6001600160a01b038116610d8d5760405162461bcd60e51b815260040161029890611f83565b6065546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3606580546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152609760205260408120600481015482919060ff1615610e4657600381015460019250610e3d90610e37846ec097ce7bc90715b34b9f10000000006111e8565b90611222565b92505050610629565b6001600160a01b0384166000908152609860205260408120905b8154811015610fd1576000828281548110610e7757fe5b60009182526020909120018054909150600160a81b900460ff16151560011415610fc8576040805160a08101825285546001600160a01b0390811682526001808801549091166020808401919091526002808901805486516101009582161595909502600019011691909104601f81018390048302840183018652808452610fb3958d95948b949186019390929091830182828015610f575780601f10610f2c57610100808354040283529160200191610f57565b820191906000526020600020905b815481529060010190602001808311610f3a57829003601f168201915b5050509183525050600382015460208083019190915260049283015460ff908116151560409384015282516060810190935287546001600160a01b03811684529293889392850192600160a01b900490911690811115610ab957fe5b94508415610fc8578495505050505050610629565b50600101610e60565b5060008311610ff25760405162461bcd60e51b815260040161029890612066565b506000949350505050565b3390565b60008073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee905060008590506110bc816001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561105c57600080fd5b505afa158015611070573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110989190810190611bdf565b60405180604001604052806006815260200165704d4154494360d01b815250611254565b61113457856001600160a01b0316636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b1580156110f957600080fd5b505afa15801561110d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113191906119b3565b91505b6020840151600081600481111561114757fe5b14156111615761115785876112ad565b93505050506111e1565b600181600481111561116f57fe5b141561117f57611157858761138f565b600281600481111561118d57fe5b141561119d576111578587611457565b60038160048111156111ab57fe5b14156111bb576111578587611573565b60048160048111156111c957fe5b14156111d95761115785876115ac565b600093505050505b9392505050565b6000826111f757506000610ae4565b8282028284828161120457fe5b04146111e15760405162461bcd60e51b8152600401610298906120ee565b60008082116112435760405162461bcd60e51b81526004016102989061202f565b81838161124c57fe5b049392505050565b6000816040516020016112679190611d88565b604051602081830303815290604052805190602001208360405160200161128e9190611d88565b6040516020818303038152906040528051906020012014905092915050565b6000808260600151116112d25760405162461bcd60e51b815260040161029890611fc9565b6000836000015190506000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561131657600080fd5b505afa15801561132a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134e9190611d05565b5050509150506000811361136757600092505050610ae4565b606084015161138690610e37836b204fce5e3e250261100000006111e8565b92505050610ae4565b81516020820151604051630141c63160e51b815260009291829184916001600160a01b03841691632838c620916113c891600401611da4565b60206040518083038186803b1580156113e057600080fd5b505afa1580156113f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114189190611ced565b90506000811161142e5760009350505050610ae4565b606085015161144d90610e37836b204fce5e3e250261100000006111e8565b9350505050610ae4565b8151600090806114656117ca565b60408086015190516313b6165d60e11b81526001600160a01b0384169163276c2cba916114959190600401611f70565b6101006040518083038186803b1580156114ae57600080fd5b505afa1580156114c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e69190611c52565b805160405163fc57d4df60e01b8152919250906001600160a01b0384169063fc57d4df90611518908490600401611da4565b60206040518083038186803b15801561153057600080fd5b505afa158015611544573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115689190611ced565b979650505050505050565b815160208201516040516341976e0960e01b815260009291829184916001600160a01b038416916341976e09916113c891600401611da4565b6000808260600151116115d15760405162461bcd60e51b815260040161029890611fc9565b6020808301516001600160a01b03808216600090815260999093526040808420548151633fabe5a360e21b815291519394921692839163feaf968c9160048083019260a0929190829003018186803b15801561162c57600080fd5b505afa158015611640573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116649190611d05565b5050509150506000609a60009054906101000a90046001600160a01b031690506000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156116bf57600080fd5b505afa1580156116d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f79190611d05565b5050509150506000831361171357600095505050505050610ae4565b606087015161173590610e376402540be40061172f87866111e8565b906111e8565b95505050505050610ae4565b505050505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061178d57805160ff19168380011785556117ba565b828001600101855582156117ba579182015b828111156117ba57825182559160200191906001019061179f565b506117c692915061180f565b5090565b60408051610100810182526000808252602082018190529181018290526060810182905290608082019081526000602082018190526040820181905260609091015290565b5b808211156117c65760008155600101611810565b8051610ae48161225f565b600082601f83011261183f578081fd5b813567ffffffffffffffff811115611855578182fd5b60208082026118658282016121cb565b8381529350818401858301828701840188101561188157600080fd5b600092505b848310156117415780356118998161225f565b825260019290920191908301908301611886565b60008083601f8401126118be578081fd5b50813567ffffffffffffffff8111156118d5578182fd5b60208301915083602080830285010111156118ef57600080fd5b9250929050565b8035610ae481612274565b8051610ae481612274565b803560058110610ae457600080fd5b805160038110610ae457600080fd5b600082601f83011261193a578081fd5b813561194d611948826121f2565b6121cb565b915080825283602082850101111561196457600080fd5b8060208401602084013760009082016020015292915050565b805169ffffffffffffffffffff81168114610ae457600080fd5b6000602082840312156119a8578081fd5b81356111e18161225f565b6000602082840312156119c4578081fd5b81516111e18161225f565b60008060008060008060008060e0898b0312156119ea578384fd5b88356119f58161225f565b97506020890135611a058161225f565b9650604089013567ffffffffffffffff80821115611a21578586fd5b611a2d8c838d0161192a565b975060608b01359650611a438c60808d016118f6565b955060a08b0135915080821115611a58578485fd5b611a648c838d0161182f565b945060c08b0135915080821115611a79578384fd5b50611a868b828c016118ad565b999c989b5096995094979396929594505050565b60008060408385031215611aac578182fd5b8235611ab78161225f565b91506020830135611ac781612274565b809150509250929050565b60008060408385031215611ae4578182fd5b8235611aef8161225f565b946020939093013593505050565b600080600080600060a08688031215611b14578081fd5b8535611b1f8161225f565b9450602086013593506040860135611b368161225f565b9250611b45876060880161190c565b91506080860135611b5581612274565b809150509295509295909350565b60008060408385031215611b75578182fd5b823567ffffffffffffffff80821115611b8c578384fd5b611b988683870161182f565b93506020850135915080821115611bad578283fd5b50611bba8582860161182f565b9150509250929050565b600060208284031215611bd5578081fd5b6111e1838361190c565b600060208284031215611bf0578081fd5b815167ffffffffffffffff811115611c06578182fd5b8201601f81018413611c16578182fd5b8051611c24611948826121f2565b818152856020838501011115611c38578384fd5b611c49826020830160208601612222565b95945050505050565b6000610100808385031215611c65578182fd5b611c6e816121cb565b90508251611c7b8161225f565b81526020830151611c8b8161225f565b806020830152506040830151604082015260608301516060820152611cb3846080850161191b565b608082015260a083015160a0820152611ccf8460c08501611824565b60c0820152611ce18460e08501611901565b60e08201529392505050565b600060208284031215611cfe578081fd5b5051919050565b600080600080600060a08688031215611d1c578283fd5b611d26878761197d565b9450602086015193506040860151925060608601519150611d4a876080880161197d565b90509295509295909350565b15159052565b60008151808452611d74816020860160208601612222565b601f01601f19169290920160200192915050565b60008251611d9a818460208701612222565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0386811682528516602082015260a060408201819052600090611de490830186611d5c565b6060830194909452509015156080909101529392505050565b600060a0820160018060a01b03808916845260208189168186015260a060408601528391508754600180821660008114611e3e5760018114611e5e57611e99565b611e4e607f6002850416876121c2565b60ff198416815284019450611e99565b60028304611e6c81886121c2565b611e758d612216565b895b83811015611e9057815483820152908501908701611e77565b91909101965050505b505050508092505050836060830152611eb56080830184611d56565b9695505050505050565b6000604080830160018060a01b03808716855260208381870152828754808552606094508488019150888752828720875b82811015611f31578154868116855260ff808260a01c16611f1081612252565b8688015260a89190911c161515888501529286019260019182019101611ef0565b50919a9950505050505050505050565b6001600160a01b038416815260608101611f5a84612252565b8360208301528215156040830152949350505050565b6000602082526111e16020830184611d5c565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f62617365556e6974206d7573742062652067726561746572207468616e207a65604082015261726f60f01b606082015260800190565b6020808252600a908201526962616420706172616d7360b01b604082015260600190565b6020808252601a908201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604082015260600190565b6020808252601b908201527f7072696365206d75737420626967676572207468616e207a65726f0000000000604082015260600190565b60208082526031908201527f736f7572636554797065732e6c656e677468206d75737420657175616c2074686040820152700c2dc40e6deeae4c6cae65cd8cadccee8d607b1b606082015260800190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260409082018190527f746f6b656e732e6c656e677468206d75737420657175616c207468616e206368908201527f61696e4c696e6b546f6b656e457468507269636546656564732e6c656e677468606082015260800190565b90815260200190565b60405181810167ffffffffffffffff811182821017156121ea57600080fd5b604052919050565b600067ffffffffffffffff821115612208578081fd5b50601f01601f191660200190565b60009081526020902090565b60005b8381101561223d578181015183820152602001612225565b8381111561224c576000848401525b50505050565b6005811061225c57fe5b50565b6001600160a01b038116811461225c57600080fd5b801515811461225c57600080fdfea26469706673582212201635b1f874a724e85bbb1d43084d7c921f6e5200139cb04174148fb03d462ac864736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98EE9A13 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xBEC69B4F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBEC69B4F EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xE316E297 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xFC57D4DF EQ PUSH2 0x246 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x98EE9A13 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x9E237B1C EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0xA00A8B2C EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xA22E6EE3 EQ PUSH2 0x205 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x71CC09A9 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x8341301A EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B5 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0xE4230A0 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x1B69DC5F EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x43F5AE36 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x49B39FD6 EQ PUSH2 0x167 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CF JUMP JUMPDEST PUSH2 0x259 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12D PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x1997 JUMP JUMPDEST PUSH2 0x545 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x1997 JUMP JUMPDEST PUSH2 0x60F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD2 JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST PUSH2 0x118 PUSH2 0x70E JUMP JUMPDEST PUSH2 0x118 PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A9A JUMP JUMPDEST PUSH2 0x797 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1997 JUMP JUMPDEST PUSH2 0x86E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x889 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x1CB CALLDATASIZE PUSH1 0x4 PUSH2 0x1B63 JUMP JUMPDEST PUSH2 0x898 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x1DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD2 JUMP JUMPDEST PUSH2 0x971 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x1F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD2 JUMP JUMPDEST PUSH2 0xAEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F41 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0xB34 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x1997 JUMP JUMPDEST PUSH2 0xB43 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0xBA4 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0x1997 JUMP JUMPDEST PUSH2 0xD28 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0x1997 JUMP JUMPDEST PUSH2 0xDE9 JUMP JUMPDEST PUSH2 0x261 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x272 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x212F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 MLOAD DUP2 EQ PUSH2 0x2C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x209D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND ISZERO PUSH2 0x2FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x200B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR DUP4 SSTORE PUSH1 0x1 DUP4 ADD DUP1 SLOAD SWAP2 DUP12 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE DUP7 MLOAD PUSH2 0x33D SWAP1 PUSH1 0x2 DUP4 ADD SWAP1 PUSH1 0x20 DUP11 ADD SWAP1 PUSH2 0x174C JUMP JUMPDEST POP PUSH1 0x3 DUP2 ADD DUP7 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x98 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 GT PUSH2 0x38D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x200B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 PUSH1 0x98 PUSH1 0x0 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x3DA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP8 DUP7 DUP2 DUP2 LT PUSH2 0x3FC JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x1BC4 JUMP JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x41C JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP4 SLOAD SWAP1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP3 MLOAD SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR DUP1 DUP5 SSTORE SWAP1 DUP3 ADD MLOAD SWAP2 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x47C JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD MLOAD DUP2 SLOAD SWAP1 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x390 JUMP JUMPDEST POP PUSH32 0x7E55BC43E6F0111474264FD86152C4A3E172ABC29A15F5474298510CE6FF69EA DUP10 DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x4E0 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x98 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH32 0x3305406BE9630A8E3735461DDFB1C43204CDC73F28649E8038CAFB44584D14BC SWAP2 PUSH2 0x532 SWAP2 DUP13 SWAP2 SWAP1 PUSH2 0x1EBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x97 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP4 ADD SLOAD PUSH1 0x2 DUP1 DUP6 ADD DUP1 SLOAD DUP9 MLOAD PUSH2 0x100 SWAP6 DUP3 AND ISZERO SWAP6 SWAP1 SWAP6 MUL PUSH1 0x0 NOT ADD AND SWAP2 SWAP1 SWAP2 DIV PUSH1 0x1F DUP2 ADD DUP8 SWAP1 DIV DUP8 MUL DUP5 ADD DUP8 ADD SWAP1 SWAP8 MSTORE DUP7 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP7 SWAP4 SWAP1 SWAP2 AND SWAP5 SWAP2 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x5F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x98 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x636 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x647 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x66D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x212F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x200B JUMP JUMPDEST PUSH1 0x3 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x7E55BC43E6F0111474264FD86152C4A3E172ABC29A15F5474298510CE6FF69EA SWAP3 PUSH2 0x701 SWAP3 DUP8 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH1 0x2 DUP8 ADD SWAP2 DUP9 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 PUSH2 0x1DFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x716 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x727 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x74D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x212F JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x79F PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7B0 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x212F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND PUSH2 0x810 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x200B JUMP JUMPDEST PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO OR SWAP1 SSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x7E55BC43E6F0111474264FD86152C4A3E172ABC29A15F5474298510CE6FF69EA SWAP3 PUSH2 0x701 SWAP3 DUP8 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH1 0x2 DUP8 ADD SWAP2 SWAP1 DUP9 SWAP1 PUSH2 0x1DFD JUMP JUMPDEST PUSH1 0x99 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x8A0 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8B1 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x212F JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x8F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x2164 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x96C JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x912 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x928 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x99 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x8FB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x98 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP3 SLOAD DUP8 AND DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD SWAP1 SWAP8 AND DUP2 DUP7 ADD MSTORE PUSH1 0x2 DUP1 DUP5 ADD DUP1 SLOAD DUP7 MLOAD PUSH2 0x100 SWAP11 DUP3 AND ISZERO SWAP11 SWAP1 SWAP11 MUL PUSH1 0x0 NOT ADD AND SWAP2 SWAP1 SWAP2 DIV PUSH1 0x1F DUP2 ADD DUP8 SWAP1 DIV DUP8 MUL DUP10 ADD DUP8 ADD DUP7 MSTORE DUP1 DUP10 MSTORE SWAP7 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 PUSH2 0xADF SWAP6 DUP12 SWAP6 SWAP4 SWAP5 DUP10 SWAP5 SWAP2 DUP7 ADD SWAP4 SWAP2 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xA45 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA1A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA45 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA28 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE DUP4 SLOAD DUP5 SWAP1 DUP9 SWAP1 DUP2 LT PUSH2 0xA76 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xAB9 JUMPI INVALID JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xAC4 JUMPI INVALID JUMPDEST DUP2 MSTORE SWAP1 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE PUSH2 0x1001 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x98 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB03 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND SWAP3 POP PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 SWAP2 DIV AND DUP4 JUMP JUMPDEST PUSH1 0x9A SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xB4B PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB5C PUSH2 0x889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x212F JUMP JUMPDEST PUSH1 0x9A DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xBAC PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBBD PUSH2 0x889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x212F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x98 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP6 LT ISZERO PUSH2 0xC75 JUMPI PUSH1 0x0 DUP2 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xC12 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR DUP1 DUP3 SSTORE SWAP1 SWAP2 POP DUP5 SWAP1 DUP3 SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xC56 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL DUP5 ISZERO ISZERO MUL OR SWAP1 SSTORE PUSH2 0xD20 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xC9C JUMPI INVALID JUMPDEST DUP2 MSTORE DUP5 ISZERO ISZERO PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP3 MLOAD SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR DUP1 DUP5 SSTORE SWAP1 DUP3 ADD MLOAD SWAP2 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xCFC JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD MLOAD DUP2 SLOAD SWAP1 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD30 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD41 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x212F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x1F83 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD DUP3 SWAP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xE46 JUMPI PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 SWAP3 POP PUSH2 0xE3D SWAP1 PUSH2 0xE37 DUP5 PUSH15 0xC097CE7BC90715B34B9F1000000000 PUSH2 0x11E8 JUMP JUMPDEST SWAP1 PUSH2 0x1222 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x98 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0xFD1 JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE77 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0xFC8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP1 DUP9 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP1 DUP10 ADD DUP1 SLOAD DUP7 MLOAD PUSH2 0x100 SWAP6 DUP3 AND ISZERO SWAP6 SWAP1 SWAP6 MUL PUSH1 0x0 NOT ADD AND SWAP2 SWAP1 SWAP2 DIV PUSH1 0x1F DUP2 ADD DUP4 SWAP1 DIV DUP4 MUL DUP5 ADD DUP4 ADD DUP7 MSTORE DUP1 DUP5 MSTORE PUSH2 0xFB3 SWAP6 DUP14 SWAP6 SWAP5 DUP12 SWAP5 SWAP2 DUP7 ADD SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xF57 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF2C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF57 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF3A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x4 SWAP3 DUP4 ADD SLOAD PUSH1 0xFF SWAP1 DUP2 AND ISZERO ISZERO PUSH1 0x40 SWAP4 DUP5 ADD MSTORE DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE DUP8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP5 MSTORE SWAP3 SWAP4 DUP9 SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV SWAP1 SWAP2 AND SWAP1 DUP2 GT ISZERO PUSH2 0xAB9 JUMPI INVALID JUMPDEST SWAP5 POP DUP5 ISZERO PUSH2 0xFC8 JUMPI DUP5 SWAP6 POP POP POP POP POP POP PUSH2 0x629 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xE60 JUMP JUMPDEST POP PUSH1 0x0 DUP4 GT PUSH2 0xFF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x2066 JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE SWAP1 POP PUSH1 0x0 DUP6 SWAP1 POP PUSH2 0x10BC DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95D89B41 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x105C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1070 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1098 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1BDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x704D41544943 PUSH1 0xD0 SHL DUP2 MSTORE POP PUSH2 0x1254 JUMP JUMPDEST PUSH2 0x1134 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6F307DC3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x110D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1131 SWAP2 SWAP1 PUSH2 0x19B3 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1147 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1161 JUMPI PUSH2 0x1157 DUP6 DUP8 PUSH2 0x12AD JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x11E1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x116F JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x117F JUMPI PUSH2 0x1157 DUP6 DUP8 PUSH2 0x138F JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x118D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x119D JUMPI PUSH2 0x1157 DUP6 DUP8 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x11AB JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x11BB JUMPI PUSH2 0x1157 DUP6 DUP8 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x11C9 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x11D9 JUMPI PUSH2 0x1157 DUP6 DUP8 PUSH2 0x15AC JUMP JUMPDEST PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11F7 JUMPI POP PUSH1 0x0 PUSH2 0xAE4 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1204 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x11E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x20EE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1243 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x202F JUMP JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x124C JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1267 SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x128E SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x60 ADD MLOAD GT PUSH2 0x12D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x0 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x132A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x134E SWAP2 SWAP1 PUSH2 0x1D05 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 SGT PUSH2 0x1367 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MLOAD PUSH2 0x1386 SWAP1 PUSH2 0xE37 DUP4 PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x11E8 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0xAE4 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x141C631 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x0 SWAP3 SWAP2 DUP3 SWAP2 DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0x2838C620 SWAP2 PUSH2 0x13C8 SWAP2 PUSH1 0x4 ADD PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1418 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x142E JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MLOAD PUSH2 0x144D SWAP1 PUSH2 0xE37 DUP4 PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x11E8 JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0xAE4 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 DUP1 PUSH2 0x1465 PUSH2 0x17CA JUMP JUMPDEST PUSH1 0x40 DUP1 DUP7 ADD MLOAD SWAP1 MLOAD PUSH4 0x13B6165D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0x276C2CBA SWAP2 PUSH2 0x1495 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x1F70 JUMP JUMPDEST PUSH2 0x100 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14E6 SWAP2 SWAP1 PUSH2 0x1C52 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x40 MLOAD PUSH4 0xFC57D4DF PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xFC57D4DF SWAP1 PUSH2 0x1518 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1544 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1568 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x41976E09 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP3 SWAP2 DUP3 SWAP2 DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0x41976E09 SWAP2 PUSH2 0x13C8 SWAP2 PUSH1 0x4 ADD PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x60 ADD MLOAD GT PUSH2 0x15D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x99 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 MLOAD SWAP4 SWAP5 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x162C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1640 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1664 SWAP2 SWAP1 PUSH2 0x1D05 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 PUSH1 0x9A PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16F7 SWAP2 SWAP1 PUSH2 0x1D05 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP4 SGT PUSH2 0x1713 JUMPI PUSH1 0x0 SWAP6 POP POP POP POP POP POP PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MLOAD PUSH2 0x1735 SWAP1 PUSH2 0xE37 PUSH5 0x2540BE400 PUSH2 0x172F DUP8 DUP7 PUSH2 0x11E8 JUMP JUMPDEST SWAP1 PUSH2 0x11E8 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0xAE4 JUMP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x178D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x17BA JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x17BA JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x17BA JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x179F JUMP JUMPDEST POP PUSH2 0x17C6 SWAP3 SWAP2 POP PUSH2 0x180F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH1 0x80 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x17C6 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1810 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xAE4 DUP2 PUSH2 0x225F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x183F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1855 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MUL PUSH2 0x1865 DUP3 DUP3 ADD PUSH2 0x21CB JUMP JUMPDEST DUP4 DUP2 MSTORE SWAP4 POP DUP2 DUP5 ADD DUP6 DUP4 ADD DUP3 DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x1881 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x1741 JUMPI DUP1 CALLDATALOAD PUSH2 0x1899 DUP2 PUSH2 0x225F JUMP JUMPDEST DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x1886 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x18BE JUMPI DUP1 DUP2 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18D5 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x18EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xAE4 DUP2 PUSH2 0x2274 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xAE4 DUP2 PUSH2 0x2274 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x5 DUP2 LT PUSH2 0xAE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x3 DUP2 LT PUSH2 0xAE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x193A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x194D PUSH2 0x1948 DUP3 PUSH2 0x21F2 JUMP JUMPDEST PUSH2 0x21CB JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP3 ADD PUSH1 0x20 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xAE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11E1 DUP2 PUSH2 0x225F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19C4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x11E1 DUP2 PUSH2 0x225F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xE0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x19EA JUMPI DUP4 DUP5 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x19F5 DUP2 PUSH2 0x225F JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x1A05 DUP2 PUSH2 0x225F JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A21 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x1A2D DUP13 DUP4 DUP14 ADD PUSH2 0x192A JUMP JUMPDEST SWAP8 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP7 POP PUSH2 0x1A43 DUP13 PUSH1 0x80 DUP14 ADD PUSH2 0x18F6 JUMP JUMPDEST SWAP6 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A58 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x1A64 DUP13 DUP4 DUP14 ADD PUSH2 0x182F JUMP JUMPDEST SWAP5 POP PUSH1 0xC0 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A79 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x1A86 DUP12 DUP3 DUP13 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AAC JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1AB7 DUP2 PUSH2 0x225F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1AC7 DUP2 PUSH2 0x2274 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1AEF DUP2 PUSH2 0x225F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B14 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1B1F DUP2 PUSH2 0x225F JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x1B36 DUP2 PUSH2 0x225F JUMP JUMPDEST SWAP3 POP PUSH2 0x1B45 DUP8 PUSH1 0x60 DUP9 ADD PUSH2 0x190C JUMP JUMPDEST SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0x1B55 DUP2 PUSH2 0x2274 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B75 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1B8C JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x1B98 DUP7 DUP4 DUP8 ADD PUSH2 0x182F JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1BAD JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x1BBA DUP6 DUP3 DUP7 ADD PUSH2 0x182F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BD5 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x11E1 DUP4 DUP4 PUSH2 0x190C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BF0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C06 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1C16 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1C24 PUSH2 0x1948 DUP3 PUSH2 0x21F2 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x1C38 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x1C49 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2222 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C65 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1C6E DUP2 PUSH2 0x21CB JUMP JUMPDEST SWAP1 POP DUP3 MLOAD PUSH2 0x1C7B DUP2 PUSH2 0x225F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1C8B DUP2 PUSH2 0x225F JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1CB3 DUP5 PUSH1 0x80 DUP6 ADD PUSH2 0x191B JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x1CCF DUP5 PUSH1 0xC0 DUP6 ADD PUSH2 0x1824 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x1CE1 DUP5 PUSH1 0xE0 DUP6 ADD PUSH2 0x1901 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CFE JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D1C JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x1D26 DUP8 DUP8 PUSH2 0x197D JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x1D4A DUP8 PUSH1 0x80 DUP9 ADD PUSH2 0x197D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1D74 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2222 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1D9A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2222 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1DE4 SWAP1 DUP4 ADD DUP7 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x60 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP SWAP1 ISZERO ISZERO PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND DUP5 MSTORE PUSH1 0x20 DUP2 DUP10 AND DUP2 DUP7 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP7 ADD MSTORE DUP4 SWAP2 POP DUP8 SLOAD PUSH1 0x1 DUP1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x1E3E JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1E5E JUMPI PUSH2 0x1E99 JUMP JUMPDEST PUSH2 0x1E4E PUSH1 0x7F PUSH1 0x2 DUP6 DIV AND DUP8 PUSH2 0x21C2 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP2 MSTORE DUP5 ADD SWAP5 POP PUSH2 0x1E99 JUMP JUMPDEST PUSH1 0x2 DUP4 DIV PUSH2 0x1E6C DUP2 DUP9 PUSH2 0x21C2 JUMP JUMPDEST PUSH2 0x1E75 DUP14 PUSH2 0x2216 JUMP JUMPDEST DUP10 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E90 JUMPI DUP2 SLOAD DUP4 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP8 ADD PUSH2 0x1E77 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP7 POP POP POP JUMPDEST POP POP POP POP DUP1 SWAP3 POP POP POP DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1EB5 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1D56 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP1 DUP4 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP6 MSTORE PUSH1 0x20 DUP4 DUP2 DUP8 ADD MSTORE DUP3 DUP8 SLOAD DUP1 DUP6 MSTORE PUSH1 0x60 SWAP5 POP DUP5 DUP9 ADD SWAP2 POP DUP9 DUP8 MSTORE DUP3 DUP8 KECCAK256 DUP8 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1F31 JUMPI DUP2 SLOAD DUP7 DUP2 AND DUP6 MSTORE PUSH1 0xFF DUP1 DUP3 PUSH1 0xA0 SHR AND PUSH2 0x1F10 DUP2 PUSH2 0x2252 JUMP JUMPDEST DUP7 DUP9 ADD MSTORE PUSH1 0xA8 SWAP2 SWAP1 SWAP2 SHR AND ISZERO ISZERO DUP9 DUP6 ADD MSTORE SWAP3 DUP7 ADD SWAP3 PUSH1 0x1 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1EF0 JUMP JUMPDEST POP SWAP2 SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 DUP2 ADD PUSH2 0x1F5A DUP5 PUSH2 0x2252 JUMP JUMPDEST DUP4 PUSH1 0x20 DUP4 ADD MSTORE DUP3 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x11E1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x62617365556E6974206D7573742062652067726561746572207468616E207A65 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x726F PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xA SWAP1 DUP3 ADD MSTORE PUSH10 0x62616420706172616D73 PUSH1 0xB0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x7072696365206D75737420626967676572207468616E207A65726F0000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x736F7572636554797065732E6C656E677468206D75737420657175616C207468 PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0xC2DC40E6DEEAE4C6CAE65CD8CADCCEE8D PUSH1 0x7B SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x40 SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0x746F6B656E732E6C656E677468206D75737420657175616C207468616E206368 SWAP1 DUP3 ADD MSTORE PUSH32 0x61696E4C696E6B546F6B656E457468507269636546656564732E6C656E677468 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x21EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2208 JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x223D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2225 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x224C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x225C JUMPI INVALID JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x225C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x225C JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND CALLDATALOAD 0xB1 0xF8 PUSH21 0xA724E85BBB1D43084D7C921F6E5200139CB0417414 DUP16 0xB0 RETURNDATASIZE CHAINID 0x2A 0xC8 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1756:10361:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8193:1220;;;;;;:::i;:::-;;:::i;:::-;;2361:51;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;11945:169;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;10052:386::-;;;;;;:::i;:::-;;:::i;2004:148:3:-;;;:::i;10444:383:6:-;;;;;;:::i;:::-;;:::i;2472:61::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1353:87:3:-;;;:::i;10965:463:6:-;;;;;;:::i;:::-;;:::i;11435:317::-;;;;;;:::i;:::-;;:::i;2418:48::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;2540:37::-;;;:::i;10833:126::-;;;;;;:::i;:::-;;:::i;9419:627::-;;;;;;:::i;:::-;;:::i;2307:244:3:-;;;;;;:::i;:::-;;:::i;2809:925:6:-;;;;;;:::i;:::-;;:::i;8193:1220::-;1584:12:3;:10;:12::i;:::-;-1:-1:-1;;;;;1573:23:3;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1573:23:3;;1565:68;;;;-1:-1:-1;;;1565:68:3;;;;;;;:::i;:::-;;;;;;;;;8428:14:6;;:36;::::1;8420:98;;;;-1:-1:-1::0;;;8420:98:6::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;8590:20:6;;::::1;8556:31;8590:20:::0;;;:12:::1;:20;::::0;;;;8628:18;;8590:20;;8628:18:::1;:32:::0;8620:55:::1;;;;-1:-1:-1::0;;;8620:55:6::1;;;;;;;:::i;:::-;8685:27:::0;;-1:-1:-1;;;;;8685:27:6;;::::1;-1:-1:-1::0;;;;;;8685:27:6;;::::1;;::::0;;;8722:22;::::1;:35:::0;;;;::::1;::::0;;;::::1;;::::0;;8767:47;;::::1;::::0;:28:::1;::::0;::::1;::::0;:47:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;8824:20:6::1;::::0;::::1;:31:::0;;;8865:20:::1;::::0;::::1;:31:::0;;-1:-1:-1;;8865:31:6::1;::::0;::::1;;;::::0;;-1:-1:-1;;;;;8943:15:6;::::1;-1:-1:-1::0;8943:15:6;;;:7:::1;:15;::::0;;;;:22;-1:-1:-1;;8935:49:6::1;;;;-1:-1:-1::0;;;8935:49:6::1;;;;;;;:::i;:::-;8999:6;8994:267;9015:7;:14;9011:1;:18;8994:267;;;9050:26;9079:7;:15;9087:6;-1:-1:-1::0;;;;;9079:15:6::1;-1:-1:-1::0;;;;;9079:15:6::1;;;;;;;;;;;;9050:44;;9108:4;9118:131;;;;;;;;9153:7;9161:1;9153:10;;;;;;;;;;;;;;-1:-1:-1::0;;;;;9118:131:6::1;;;;;9190:11;;9202:1;9190:14;;;;;;;;;;;;;;;;;;;;:::i;:::-;9118:131;;;;;;;;::::0;;9230:4:::1;9118:131;::::0;;::::1;::::0;;;9108:142;;;;::::1;::::0;;-1:-1:-1;9108:142:6;;;;;;;;;;::::1;::::0;;-1:-1:-1;;;;;;9108:142:6::1;-1:-1:-1::0;;;;;9108:142:6;;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;;;;-1:-1:-1;;;;9108:142:6::1;-1:-1:-1::0;;;9108:142:6;::::1;::::0;::::1;;;;;;;;::::0;;-1:-1:-1;9108:142:6::1;::::0;;;::::1;::::0;;;;::::1;;-1:-1:-1::0;;;9108:142:6::1;-1:-1:-1::0;;;;9108:142:6;;::::1;;::::0;;-1:-1:-1;;9031:3:6::1;8994:267;;;;9276:71;9290:6;9298:10;9310:16;9328:8;9338;9276:71;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;9389:15:6;::::1;;::::0;;;:7:::1;:15;::::0;;;;;;9362:43;;::::1;::::0;::::1;::::0;9381:6;;9389:15;9362:43:::1;:::i;:::-;;;;;;;;1644:1:3;8193:1220:6::0;;;;;;;;:::o;2361:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2361:51:6;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2361:51:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2361:51:6;;;;;;;;;;;;;;;-1:-1:-1;2361:51:6;:::o;11945:169::-;-1:-1:-1;;;;;12056:15:6;;12004:4;12056:15;;;:7;:15;;;;;12088:19;11945:169;;;;:::o;10052:386::-;1584:12:3;:10;:12::i;:::-;-1:-1:-1;;;;;1573:23:3;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1573:23:3;;1565:68;;;;-1:-1:-1;;;1565:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;10182:20:6;;::::1;10148:31;10182:20:::0;;;:12:::1;:20;::::0;;;;10220:18;;10182:20;;10220:18:::1;10212:55;;;;-1:-1:-1::0;;;10212:55:6::1;;;;;;;:::i;:::-;10277:20;::::0;::::1;:31:::0;;;10346:22:::1;::::0;::::1;::::0;10410:20:::1;::::0;::::1;::::0;10324:107:::1;::::0;::::1;::::0;::::1;::::0;10338:6;;-1:-1:-1;;;;;10346:22:6;;::::1;::::0;10370:28:::1;::::0;::::1;::::0;10300:8;;10410:20:::1;::::0;;::::1;::::0;10324:107:::1;:::i;:::-;;;;;;;;1644:1:3;10052:386:6::0;;:::o;2004:148:3:-;1584:12;:10;:12::i;:::-;-1:-1:-1;;;;;1573:23:3;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1573:23:3;;1565:68;;;;-1:-1:-1;;;1565:68:3;;;;;;;:::i;:::-;2095:6:::1;::::0;2074:40:::1;::::0;2111:1:::1;::::0;-1:-1:-1;;;;;2095:6:3::1;::::0;2074:40:::1;::::0;2111:1;;2074:40:::1;2125:6;:19:::0;;-1:-1:-1;;;;;;2125:19:3::1;::::0;;2004:148::o;10444:383:6:-;1584:12:3;:10;:12::i;:::-;-1:-1:-1;;;;;1573:23:3;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1573:23:3;;1565:68;;;;-1:-1:-1;;;1565:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;10571:20:6;;::::1;10537:31;10571:20:::0;;;:12:::1;:20;::::0;;;;10609:18;;10571:20;;10609:18:::1;10601:55;;;;-1:-1:-1::0;;;10601:55:6::1;;;;;;;:::i;:::-;10666:20;::::0;::::1;:31:::0;;-1:-1:-1;;10666:31:6::1;::::0;::::1;;;::::0;;-1:-1:-1;10735:22:6;::::1;::::0;10789:20:::1;::::0;::::1;::::0;10713:107:::1;::::0;::::1;::::0;::::1;::::0;10727:6;;-1:-1:-1;;;;;10735:22:6;;::::1;::::0;10759:28:::1;::::0;::::1;::::0;10789:20;10666:31;;10713:107:::1;:::i;2472:61::-:0;;;;;;;;;;;;-1:-1:-1;;;;;2472:61:6;;:::o;1353:87:3:-;1426:6;;-1:-1:-1;;;;;1426:6:3;1353:87;:::o;10965:463:6:-;1584:12:3;:10;:12::i;:::-;-1:-1:-1;;;;;1573:23:3;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1573:23:3;;1565:68;;;;-1:-1:-1;;;1565:68:3;;;;;;;:::i;:::-;11136:27:6::1;:34;11119:6;:13;:51;11111:128;;;;-1:-1:-1::0;;;11111:128:6::1;;;;;;;:::i;:::-;11255:6;11250:171;11271:6;:13;11267:1;:17;11250:171;;;11305:13;11321:6;11328:1;11321:9;;;;;;;;;;;;;;11305:25;;11380:27;11408:1;11380:30;;;;;;;;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;11344:33:6;;::::1;;::::0;;;:26:::1;:33:::0;;;;;;;:66;;-1:-1:-1;;;;;;11344:66:6::1;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;11286:3:6::1;11250:171;;;;10965:463:::0;;:::o;11435:317::-;-1:-1:-1;;;;;11570:20:6;;;11520:4;11570:20;;;:12;:20;;;;;;;;11637:7;:15;;;;;11670:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11670:75:6;;;;;;;;;;;;;;;;;;;;;;;11520:4;;11570:20;;11637:15;;11670:75;;11570:20;;11670:75;;11570:20;;11670:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11670:75:6;;;-1:-1:-1;;11670:75:6;;;;;;;;;;;;;;;;;;;;;;11719:25;;:12;;11732:11;;11719:25;;;;;;;;;;;;;;;11670:75;;;;;;;;;11719:25;;11670:75;;-1:-1:-1;;;;;11670:75:6;;;;;;11719:25;;11670:75;;;;-1:-1:-1;;;11670:75:6;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11670:75:6;;;;;;;;;;;:27;:75::i;:::-;11663:82;;;;11435:317;;;;;:::o;2418:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2418:48:6;;;-1:-1:-1;2418:48:6;-1:-1:-1;;;2418:48:6;;;;;-1:-1:-1;;;;2418:48:6;;;;;:::o;2540:37::-;;;-1:-1:-1;;;;;2540:37:6;;:::o;10833:126::-;1584:12:3;:10;:12::i;:::-;-1:-1:-1;;;;;1573:23:3;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1573:23:3;;1565:68;;;;-1:-1:-1;;;1565:68:3;;;;;;;:::i;:::-;10916:22:6::1;:36:::0;;-1:-1:-1;;;;;;10916:36:6::1;-1:-1:-1::0;;;;;10916:36:6;;;::::1;::::0;;;::::1;::::0;;10833:126::o;9419:627::-;1584:12:3;:10;:12::i;:::-;-1:-1:-1;;;;;1573:23:3;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1573:23:3;;1565:68;;;;-1:-1:-1;;;1565:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;9606:15:6;::::1;9577:26;9606:15:::0;;;:7:::1;:15;::::0;;;;9636:11;;:19;-1:-1:-1;9632:407:6::1;;;9684:26;9713:4;9718:5;9713:11;;;;;;;;;::::0;;;::::1;::::0;;;::::1;9738:22:::0;;-1:-1:-1;;;;;;9738:22:6::1;-1:-1:-1::0;;;;;9738:22:6;::::1;;::::0;;;9713:11;;-1:-1:-1;9794:11:6;;9713;;-1:-1:-1;;;;9774:31:6::1;-1:-1:-1::0;;;9794:11:6;9774:31:::1;::::0;::::1;;;;;;;;::::0;;-1:-1:-1;9819:28:6;;-1:-1:-1;;;;9819:28:6::1;-1:-1:-1::0;;;9819:28:6;::::1;;;;::::0;;9632:407:::1;;;9888:4;9898:129;;;;;;;;9933:6;-1:-1:-1::0;;;;;9898:129:6::1;;;;;9966:11;9898:129;;;;;;;;::::0;;;::::1;;;::::0;;::::1;::::0;9888:140;;::::1;::::0;::::1;::::0;;-1:-1:-1;9888:140:6;;;;;;;;;;::::1;::::0;;-1:-1:-1;;;;;;9888:140:6::1;-1:-1:-1::0;;;;;9888:140:6;;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;;;;-1:-1:-1;;;;9888:140:6::1;-1:-1:-1::0;;;9888:140:6;::::1;::::0;::::1;;;;;;;;::::0;;-1:-1:-1;9888:140:6::1;::::0;;;::::1;::::0;;;;::::1;;-1:-1:-1::0;;;9888:140:6::1;-1:-1:-1::0;;;;9888:140:6;;::::1;;::::0;;9632:407:::1;1644:1:3;9419:627:6::0;;;;;:::o;2307:244:3:-;1584:12;:10;:12::i;:::-;-1:-1:-1;;;;;1573:23:3;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1573:23:3;;1565:68;;;;-1:-1:-1;;;1565:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2396:22:3;::::1;2388:73;;;;-1:-1:-1::0;;;2388:73:3::1;;;;;;;:::i;:::-;2498:6;::::0;2477:38:::1;::::0;-1:-1:-1;;;;;2477:38:3;;::::1;::::0;2498:6:::1;::::0;2477:38:::1;::::0;2498:6:::1;::::0;2477:38:::1;2526:6;:17:::0;;-1:-1:-1;;;;;;2526:17:3::1;-1:-1:-1::0;;;;;2526:17:3;;;::::1;::::0;;;::::1;::::0;;2307:244::o;2809:925:6:-;-1:-1:-1;;;;;2954:21:6;;2877:4;2954:21;;;:12;:21;;;;;2989:20;;;;2877:4;;2954:21;2989:20;;2985:158;;;3111:20;;;;3069:1;;-1:-1:-1;3091:41:6;;:15;3069:1;3101:4;3091:9;:15::i;:::-;:19;;:41::i;:::-;3084:48;;;;;;2985:158;-1:-1:-1;;;;;3190:16:6;;3153:34;3190:16;;;:7;:16;;;;;;3216:397;3240:19;;3236:23;;3216:397;;;3280:31;3314:12;3327:1;3314:15;;;;;;;;;;;;;;;;;3347:21;;3314:15;;-1:-1:-1;;;;3347:21:6;;;;:29;;3372:4;3347:29;3343:260;;;3441:62;;;;;;;;;;-1:-1:-1;;;;;3441:62:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3441:62:6;;;;;;;;;;;;;;;;;;;;;;;;;3469:7;;3441:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3441:62:6;;;-1:-1:-1;;3441:62:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3441:62:6;;;;;;3491:11;;3441:62;;;;-1:-1:-1;;;3441:62:6;;;;;;;;;;;;;3433:70;-1:-1:-1;3525:9:6;;3521:68;;3565:5;3558:12;;;;;;;;;3521:68;-1:-1:-1;3261:3:6;;3216:397;;;;3675:1;3667:5;:9;3659:49;;;;-1:-1:-1;;;3659:49:6;;;;;;;:::i;:::-;-1:-1:-1;3726:1:6;;2809:925;-1:-1:-1;;;;2809:925:6:o;810:106:1:-;898:10;810:106;:::o;3740:1202:6:-;3881:4;3897:18;3926:42;3897:72;;3979:22;4020:7;3979:49;;4044:41;4059:6;-1:-1:-1;;;;;4059:13:6;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4059:15:6;;;;;;;;;;;;:::i;:::-;4044:41;;;;;;;;;;;;;-1:-1:-1;;;4044:41:6;;;:14;:41::i;:::-;4039:132;;4138:7;-1:-1:-1;;;;;4122:35:6;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4101:59;;4039:132;4210:22;;;;4181:26;4246:10;:39;;;;;;;;;4242:675;;;4308:52;4335:11;4348;4308:26;:52::i;:::-;4301:59;;;;;;;4242:675;4396:23;4382:10;:37;;;;;;;;;4378:539;;;4442:50;4467:11;4480;4442:24;:50::i;4378:539::-;4526:24;4512:10;:38;;;;;;;;;4508:409;;;4573:51;4599:11;4612;4573:25;:51::i;4508:409::-;4659:24;4645:10;:38;;;;;;;;;4641:276;;;4706:51;4732:11;4745;4706:25;:51::i;4641:276::-;4792:32;4778:10;:46;;;;;;;;;4774:143;;;4847:59;4881:11;4894;4847:33;:59::i;4774:143::-;4934:1;4927:8;;;;;3740:1202;;;;;;:::o;3645:220:4:-;3703:7;3727:6;3723:20;;-1:-1:-1;3742:1:4;3735:8;;3723:20;3766:5;;;3770:1;3766;:5;:1;3790:5;;;;;:10;3782:56;;;;-1:-1:-1;;;3782:56:4;;;;;;;:::i;4343:153::-;4401:7;4433:1;4429;:5;4421:44;;;;-1:-1:-1;;;4421:44:4;;;;;;;:::i;:::-;4487:1;4483;:5;;;;;;;4343:153;-1:-1:-1;;;4343:153:4:o;11758:181:6:-;11839:4;11927:1;11909:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;11899:32;;;;;;11891:1;11873:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;11863:32;;;;;;:68;11855:77;;11758:181;;;;:::o;6716:574::-;6839:4;6886:1;6863:11;:20;;;:24;6855:71;;;;-1:-1:-1;;;6855:71:6;;;;;;;:::i;:::-;6937:31;6993:11;:18;;;6937:75;;7024:9;7040;-1:-1:-1;;;;;7040:25:6;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7022:45;;;;;;7091:1;7082:5;:10;7078:205;;7115:1;7108:8;;;;;;7078:205;7251:20;;;;7225:47;;:21;7230:5;7241:4;7225:15;:21::i;:47::-;7218:54;;;;;;4948:568;5102:18;;5272:22;;;;5237:58;;-1:-1:-1;;;5237:58:6;;5069:4;;5102:18;;;5069:4;;-1:-1:-1;;;;;5237:34:6;;;;;:58;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5224:71;;5318:1;5309:5;:10;5305:205;;5342:1;5335:8;;;;;;;5305:205;5478:20;;;;5452:47;;:21;5457:5;5468:4;5452:15;:21::i;:47::-;5445:54;;;;;;;6142:528;6297:18;;6264:4;;6297:18;6422:52;;:::i;:::-;6520:28;;;;;6477:72;;-1:-1:-1;;;6477:72:6;;-1:-1:-1;;;;;6477:42:6;;;;;:72;;6520:28;6477:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6583:10;;6610:53;;-1:-1:-1;;;6610:53:6;;6422:127;;-1:-1:-1;6583:10:6;-1:-1:-1;;;;;6610:38:6;;;;;:53;;6583:10;;6610:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6603:60;6142:528;-1:-1:-1;;;;;;;6142:528:6:o;5522:576::-;5677:18;;5854:22;;;;5825:52;;-1:-1:-1;;;5825:52:6;;5644:4;;5677:18;;;5644:4;;-1:-1:-1;;;;;5825:28:6;;;;;:52;;;;;:::i;7333:854::-;7463:4;7509:1;7486:11;:20;;;:24;7478:71;;;;-1:-1:-1;;;7478:71:6;;;;;;;:::i;:::-;7576:22;;;;;-1:-1:-1;;;;;7672:33:6;;;7560:13;7672:33;;;:26;:33;;;;;;;;7742:35;;-1:-1:-1;;;7742:35:6;;;;7576:22;;7672:33;;;;;7742;;:35;;;;;;;;;;;;;;7672:33;7742:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7716:61;;;;;;7788:37;7850:22;;;;;;;;;-1:-1:-1;;;;;7850:22:6;7788:85;;7885:15;7907;-1:-1:-1;;;;;7907:31:6;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7883:57;;;;;;7972:1;7955:13;:18;7951:230;;7996:1;7989:8;;;;;;;;;7951:230;8149:20;;;;8092:78;;:52;8139:4;8092:42;8097:13;8121:11;8092:23;:42::i;:::-;:46;;:52::i;:78::-;8085:85;;;;;;;;;7951:230;7333:854;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;142:134;220:13;;238:33;220:13;238:33;:::i;301:707::-;;418:3;411:4;403:6;399:17;395:27;385:2;;-1:-1;;426:12;385:2;473:6;460:20;27217:18;27209:6;27206:30;27203:2;;;-1:-1;;27239:12;27203:2;27284:4;;27276:6;27272:17;495:80;27284:4;27272:17;27337:15;495:80;:::i;:::-;603:21;;;486:89;-1:-1;660:14;;;635:17;;;740:27;;;;;737:36;-1:-1;734:2;;;786:1;;776:12;734:2;811:1;802:10;;796:206;821:6;818:1;815:13;796:206;;;85:6;72:20;97:33;124:5;97:33;:::i;:::-;889:50;;843:1;836:9;;;;;953:14;;;;981;;796:206;;1076:371;;;1225:3;1218:4;1210:6;1206:17;1202:27;1192:2;;-1:-1;;1233:12;1192:2;-1:-1;1263:20;;1303:18;1292:30;;1289:2;;;-1:-1;;1325:12;1289:2;1369:4;1361:6;1357:17;1345:29;;1420:3;1369:4;;1404:6;1400:17;1361:6;1386:32;;1383:41;1380:2;;;1437:1;;1427:12;1380:2;1185:262;;;;;:::o;1455:124::-;1519:20;;1544:30;1519:20;1544:30;:::i;1586:128::-;1661:13;;1679:30;1661:13;1679:30;:::i;1862:168::-;1948:20;;32361:1;32351:12;;32341:2;;32377:1;;32367:12;2037:164;2130:13;;32477:1;32467:12;;32457:2;;32493:1;;32483:12;2348:442;;2450:3;2443:4;2435:6;2431:17;2427:27;2417:2;;-1:-1;;2458:12;2417:2;2505:6;2492:20;2527:65;2542:49;2584:6;2542:49;:::i;:::-;2527:65;:::i;:::-;2518:74;;2612:6;2605:5;2598:21;2716:3;2648:4;2707:6;2640;2698:16;;2695:25;2692:2;;;2733:1;;2723:12;2692:2;30456:6;2648:4;2640:6;2636:17;2648:4;2674:5;2670:16;30433:30;30512:1;30494:16;;;2648:4;30494:16;30487:27;2674:5;2410:380;-1:-1;;2410:380::o;5098:132::-;5175:13;;30188:22;30177:34;;32813;;32803:2;;32861:1;;32851:12;5237:241;;5341:2;5329:9;5320:7;5316:23;5312:32;5309:2;;;-1:-1;;5347:12;5309:2;85:6;72:20;97:33;124:5;97:33;:::i;5485:263::-;;5600:2;5588:9;5579:7;5575:23;5571:32;5568:2;;;-1:-1;;5606:12;5568:2;226:6;220:13;238:33;265:5;238:33;:::i;5755:1425::-;;;;;;;;;6047:3;6035:9;6026:7;6022:23;6018:33;6015:2;;;-1:-1;;6054:12;6015:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;6106:63;-1:-1;6206:2;6245:22;;72:20;97:33;72:20;97:33;:::i;:::-;6214:63;-1:-1;6342:2;6327:18;;6314:32;6366:18;6355:30;;;6352:2;;;-1:-1;;6388:12;6352:2;6418:63;6473:7;6464:6;6453:9;6449:22;6418:63;:::i;:::-;6408:73;;6518:2;6561:9;6557:22;4887:20;6526:63;;6645:50;6687:7;6626:3;6667:9;6663:22;6645:50;:::i;:::-;6635:60;;6760:3;6749:9;6745:19;6732:33;6718:47;;6366:18;6777:6;6774:30;6771:2;;;-1:-1;;6807:12;6771:2;6837:78;6907:7;6898:6;6887:9;6883:22;6837:78;:::i;:::-;6827:88;;6980:3;6969:9;6965:19;6952:33;6938:47;;6366:18;6997:6;6994:30;6991:2;;;-1:-1;;7027:12;6991:2;;7065:99;7156:7;7147:6;7136:9;7132:22;7065:99;:::i;:::-;6009:1171;;;;-1:-1;6009:1171;;-1:-1;6009:1171;;;;;;7047:117;-1:-1;;;6009:1171::o;7187:360::-;;;7305:2;7293:9;7284:7;7280:23;7276:32;7273:2;;;-1:-1;;7311:12;7273:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;7363:63;-1:-1;7463:2;7499:22;;1519:20;1544:30;1519:20;1544:30;:::i;:::-;7471:60;;;;7267:280;;;;;:::o;7554:366::-;;;7675:2;7663:9;7654:7;7650:23;7646:32;7643:2;;;-1:-1;;7681:12;7643:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;7733:63;7833:2;7872:22;;;;4887:20;;-1:-1;;;7637:283::o;7927:775::-;;;;;;8115:3;8103:9;8094:7;8090:23;8086:33;8083:2;;;-1:-1;;8122:12;8083:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;8174:63;-1:-1;8274:2;8313:22;;4887:20;;-1:-1;8382:2;8421:22;;72:20;97:33;72:20;97:33;:::i;:::-;8390:63;-1:-1;8508:72;8572:7;8490:2;8548:22;;8508:72;:::i;:::-;8498:82;;8617:3;8658:9;8654:22;1519:20;1544:30;1568:5;1544:30;:::i;:::-;8626:60;;;;8077:625;;;;;;;;:::o;8709:638::-;;;8880:2;8868:9;8859:7;8855:23;8851:32;8848:2;;;-1:-1;;8886:12;8848:2;8944:17;8931:31;8982:18;;8974:6;8971:30;8968:2;;;-1:-1;;9004:12;8968:2;9034:78;9104:7;9095:6;9084:9;9080:22;9034:78;:::i;:::-;9024:88;;9177:2;9166:9;9162:18;9149:32;9135:46;;8982:18;9193:6;9190:30;9187:2;;;-1:-1;;9223:12;9187:2;;9253:78;9323:7;9314:6;9303:9;9299:22;9253:78;:::i;:::-;9243:88;;;8842:505;;;;;:::o;9354:279::-;;9477:2;9465:9;9456:7;9452:23;9448:32;9445:2;;;-1:-1;;9483:12;9445:2;9545:72;9609:7;9585:22;9545:72;:::i;9640:362::-;;9765:2;9753:9;9744:7;9740:23;9736:32;9733:2;;;-1:-1;;9771:12;9733:2;9822:17;9816:24;9860:18;9852:6;9849:30;9846:2;;;-1:-1;;9882:12;9846:2;9954:22;;2905:4;2893:17;;2889:27;-1:-1;2879:2;;-1:-1;;2920:12;2879:2;2960:6;2954:13;2982:65;2997:49;3039:6;2997:49;:::i;2982:65::-;3067:6;3060:5;3053:21;3171:3;9765:2;3162:6;3095;3153:16;;3150:25;3147:2;;;-1:-1;;3178:12;3147:2;3198:39;3230:6;9765:2;3129:5;3125:16;9765:2;3095:6;3091:17;3198:39;:::i;:::-;9902:84;9727:275;-1:-1;;;;;9727:275::o;10009:322::-;;10153:3;;10141:9;10132:7;10128:23;10124:33;10121:2;;;-1:-1;;10160:12;10121:2;3473:22;10153:3;3473:22;:::i;:::-;3464:31;;226:6;220:13;238:33;265:5;238:33;:::i;:::-;3554:86;;3707:2;3772:22;;220:13;238:33;220:13;238:33;:::i;:::-;3740:60;3707:2;3726:5;3722:16;3715:86;;3868:2;3937:9;3933:22;1799:13;3868:2;3887:5;3883:16;3876:86;4027:2;4096:9;4092:22;5035:13;4027:2;4046:5;4042:16;4035:86;4223:75;4294:3;4189;4274:9;4270:22;4223:75;:::i;:::-;4189:3;4209:5;4205:16;4198:101;4366:3;4436:9;4432:22;5035:13;4366:3;4386:5;4382:16;4375:86;4565:60;4621:3;4531;4601:9;4597:22;4565:60;:::i;:::-;4531:3;4551:5;4547:16;4540:86;4734:57;4787:3;4700;4767:9;4763:22;4734:57;:::i;:::-;4700:3;4716:16;;4709:83;4720:5;10115:216;-1:-1;;;10115:216::o;10338:263::-;;10453:2;10441:9;10432:7;10428:23;10424:32;10421:2;;;-1:-1;;10459:12;10421:2;-1:-1;5035:13;;10415:186;-1:-1;10415:186::o;10608:803::-;;;;;;10788:3;10776:9;10767:7;10763:23;10759:33;10756:2;;;-1:-1;;10795:12;10756:2;10857:63;10912:7;10888:22;10857:63;:::i;:::-;10847:73;;10957:2;11010:9;11006:22;2285:13;10965:73;;11075:2;11129:9;11125:22;5035:13;11083:74;;11194:2;11248:9;11244:22;5035:13;11202:74;;11332:63;11387:7;11313:3;11367:9;11363:22;11332:63;:::i;:::-;11322:73;;10750:661;;;;;;;;:::o;12935:94::-;29575:13;29568:21;12990:34;;12984:45::o;13471:347::-;;13616:5;28329:12;28666:6;28661:3;28654:19;13710:52;13755:6;28703:4;28698:3;28694:14;28703:4;13736:5;13732:16;13710:52;:::i;:::-;31431:7;31415:14;-1:-1;;31411:28;13774:39;;;;28703:4;13774:39;;13563:255;-1:-1;;13563:255::o;19374:275::-;;13988:5;28329:12;14100:52;14145:6;14140:3;14133:4;14126:5;14122:16;14100:52;:::i;:::-;14164:16;;;;;19510:139;-1:-1;;19510:139::o;19656:222::-;-1:-1;;;;;29123:54;;;;11767:37;;19783:2;19768:18;;19754:124::o;19885:744::-;-1:-1;;;;;29123:54;;;11767:37;;29123:54;;20303:2;20288:18;;11767:37;29134:42;20340:2;20325:18;;20318:48;;;19885:744;;20380:78;;20123:19;;20444:6;20380:78;:::i;:::-;20537:2;20522:18;;19325:37;;;;-1:-1;29575:13;;29568:21;20614:3;20599:19;;;12990:34;20372:86;20109:520;-1:-1;;;20109:520::o;20636:738::-;;20886:3;20875:9;20871:19;27217:18;;29134:42;;;;11797:5;29123:54;11774:3;11767:37;21051:2;29134:42;11797:5;29123:54;21051:2;21040:9;21036:18;11767:37;20886:3;21088:2;21077:9;21073:18;21066:48;-1:-1;21128:75;;14336:5;14330:12;14370:1;;14359:9;14355:17;14383:1;14378:248;;;;14637:1;14632:402;;;;14348:686;;14378:248;14475:71;14456:4;14452:1;14441:9;14437:17;14433:28;14534:3;14475:71;:::i;:::-;-1:-1;;14565:25;;14553:38;;14605:14;;;-1:-1;14378:248;;14632:402;14701:1;14690:9;14686:17;14717:71;14781:6;14776:3;14717:71;:::i;:::-;14810:38;14842:5;14810:38;:::i;:::-;-1:-1;14872:130;14886:6;14883:1;14880:13;14872:130;;;14945:14;;14932:11;;;14925:35;14979:15;;;;14901:12;;14872:130;;;15016:11;;;;;-1:-1;;;14348:686;;;;;21120:83;;;;;19355:5;21282:2;21271:9;21267:18;19325:37;21297:67;21359:3;21348:9;21344:19;21335:6;21297:67;:::i;:::-;20857:517;;;;;;;;:::o;21381:581::-;;21636:2;;21625:9;21621:18;27217;;29134:42;;;;11797:5;29123:54;11774:3;11767:37;21754:2;21636;21754;21743:9;21739:18;21732:48;21794:158;12312:5;28199:12;28666:6;28661:3;28654:19;28694:14;;;;21625:9;28694:14;12324:121;;27843:3;-1:-1;27833:14;21754:2;-1:-1;27862:18;-1:-1;12577:328;12602:6;12599:1;12596:13;12577:328;;;18647:16;18641:23;29134:42;18735:9;29123:54;11774:3;11767:37;29272:4;;18947:9;31647:3;31643:15;29261:16;29767:52;29813:5;29767:52;:::i;:::-;19028:14;;;13225:67;31761:3;31757:15;;;;29261:16;29575:13;29568:21;19211:14;;;12990:34;11678:14;;;;12624:1;28481:14;;;;12617:9;12577:328;;;-1:-1;21786:166;;21607:355;-1:-1;;;;;;;;;;21607:355::o;21969:466::-;-1:-1;;;;;29123:54;;11767:37;;22163:2;22148:18;;29767:52;29813:5;29767:52;:::i;:::-;30319:43;22344:2;22333:9;22329:18;13225:67;13017:5;29575:13;29568:21;22421:2;22410:9;22406:18;12990:34;22134:301;;;;;;:::o;22442:310::-;;22589:2;22610:17;22603:47;22664:78;22589:2;22578:9;22574:18;22728:6;22664:78;:::i;22759:416::-;22959:2;22973:47;;;15273:2;22944:18;;;28654:19;15309:34;28694:14;;;15289:55;-1:-1;;;15364:12;;;15357:30;15406:12;;;22930:245::o;23182:416::-;23382:2;23396:47;;;15657:2;23367:18;;;28654:19;15693:34;28694:14;;;15673:55;-1:-1;;;15748:12;;;15741:26;15786:12;;;23353:245::o;23605:416::-;23805:2;23819:47;;;16037:2;23790:18;;;28654:19;-1:-1;;;28694:14;;;16053:33;16105:12;;;23776:245::o;24028:416::-;24228:2;24242:47;;;16356:2;24213:18;;;28654:19;16392:28;28694:14;;;16372:49;16440:12;;;24199:245::o;24451:416::-;24651:2;24665:47;;;16691:2;24636:18;;;28654:19;16727:29;28694:14;;;16707:50;16776:12;;;24622:245::o;24874:416::-;25074:2;25088:47;;;17027:2;25059:18;;;28654:19;17063:34;28694:14;;;17043:55;-1:-1;;;17118:12;;;17111:41;17171:12;;;25045:245::o;25297:416::-;25497:2;25511:47;;;17422:2;25482:18;;;28654:19;17458:34;28694:14;;;17438:55;-1:-1;;;17513:12;;;17506:25;17550:12;;;25468:245::o;25720:416::-;25920:2;25934:47;;;25905:18;;;28654:19;17837:34;28694:14;;;17817:55;17891:12;;;25891:245::o;26143:416::-;26343:2;26357:47;;;18142:2;26328:18;;;28654:19;;;18178:34;28694:14;;;18158:55;18247:34;18233:12;;;18226:56;18301:12;;;26314:245::o;26566:222::-;19325:37;;;26693:2;26678:18;;26664:124::o;26795:256::-;26857:2;26851:9;26883:17;;;26958:18;26943:34;;26979:22;;;26940:62;26937:2;;;27015:1;;27005:12;26937:2;26857;27024:22;26835:216;;-1:-1;26835:216::o;27369:322::-;;27513:18;27505:6;27502:30;27499:2;;;-1:-1;;27535:12;27499:2;-1:-1;31431:7;27589:17;-1:-1;;27585:33;27676:4;27666:15;;27436:255::o;27698:198::-;;27833:14;;;27875:4;27862:18;;;27792:104::o;30529:268::-;30594:1;30601:101;30615:6;30612:1;30609:13;30601:101;;;30682:11;;;30676:18;30663:11;;;30656:39;30637:2;30630:10;30601:101;;;30717:6;30714:1;30711:13;30708:2;;;30594:1;30773:6;30768:3;30764:16;30757:27;30708:2;;30578:219;;;:::o;31790:110::-;31878:1;31871:5;31868:12;31858:2;;31884:9;31858:2;31852:48;:::o;31907:117::-;-1:-1;;;;;29123:54;;31966:35;;31956:2;;32015:1;;32005:12;32031:111;32112:5;29575:13;29568:21;32090:5;32087:32;32077:2;;32133:1;;32123:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1777600",
								"executionCost": "1869",
								"totalCost": "1779469"
							},
							"external": {
								"addOrUpdateChainLinkTokenEthPriceFeed(address[],address[])": "infinite",
								"addOrUpdateTokenConfigSource(address,uint256,address,uint8,bool)": "infinite",
								"addTokenConfig(address,address,string,uint256,bool,address[],uint8[])": "infinite",
								"chainLinkTokenEthPriceFeed(address)": "1355",
								"ethUsdPriceFeedAddress()": "1159",
								"getOracleSourcePrice(address,uint256)": "infinite",
								"getUnderlyingPrice(address)": "infinite",
								"oracleLength(address)": "1341",
								"oracles(address,uint256)": "infinite",
								"owner()": "1159",
								"renounceOwnership()": "24275",
								"setEthUsdPriceFeedAddress(address)": "22117",
								"tokenConfigs(address)": "infinite",
								"transferOwnership(address)": "24550",
								"updateTokenConfigBaseUnit(address,uint256)": "infinite",
								"updateTokenConfigFixedUsd(address,bool)": "infinite"
							},
							"internal": {
								"_getChainLinkEthBasePriceInternal(struct DeveloperLendPriceProviderV1.PriceOracle memory,struct DeveloperLendPriceProviderV1.TokenConfig memory)": "infinite",
								"_getChainlinkPriceInternal(struct DeveloperLendPriceProviderV1.PriceOracle memory,struct DeveloperLendPriceProviderV1.TokenConfig memory)": "infinite",
								"_getCompoundPriceInternal(struct DeveloperLendPriceProviderV1.PriceOracle memory,struct DeveloperLendPriceProviderV1.TokenConfig memory)": "infinite",
								"_getCustomerPriceInternal(struct DeveloperLendPriceProviderV1.PriceOracle memory,struct DeveloperLendPriceProviderV1.TokenConfig memory)": "infinite",
								"_getUnderlyingPriceInternal(address,struct DeveloperLendPriceProviderV1.TokenConfig memory,struct DeveloperLendPriceProviderV1.PriceOracle memory)": "infinite",
								"_getUniSwapPriceInternal(struct DeveloperLendPriceProviderV1.PriceOracle memory,struct DeveloperLendPriceProviderV1.TokenConfig memory)": "infinite",
								"compareStrings(string memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1756,
									"end": 12117,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1756,
									"end": 12117,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1756,
									"end": 12117,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2774,
									"end": 2802,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 2774,
									"end": 2802,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2774,
									"end": 2802,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2774,
									"end": 2802,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2774,
									"end": 2802,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2774,
									"end": 2802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2774,
									"end": 2802,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2774,
									"end": 2802,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2774,
									"end": 2802,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2774,
									"end": 2802,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2774,
									"end": 2802,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1756,
									"end": 12117,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1756,
									"end": 12117,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1756,
									"end": 12117,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1756,
									"end": 12117,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1756,
									"end": 12117,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1756,
									"end": 12117,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1756,
									"end": 12117,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201635b1f874a724e85bbb1d43084d7c921f6e5200139cb04174148fb03d462ac864736f6c634300060c0033",
									".code": [
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "98EE9A13"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "BEC69B4F"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "BEC69B4F"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "E316E297"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "FC57D4DF"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "98EE9A13"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "9E237B1C"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "A00A8B2C"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "A22E6EE3"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "71CC09A9"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "8341301A"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "E4230A0"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "1B69DC5F"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "43F5AE36"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "49B39FD6"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 12117,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8193,
											"end": 9413,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8193,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8193,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 8193,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 8193,
											"end": 9413,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 8193,
											"end": 9413,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8193,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8193,
											"end": 9413,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8193,
											"end": 9413,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 8193,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8193,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 8193,
											"end": 9413,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8193,
											"end": 9413,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 8193,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8193,
											"end": 9413,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10052,
											"end": 10438,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 10052,
											"end": 10438,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10052,
											"end": 10438,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 10052,
											"end": 10438,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 10052,
											"end": 10438,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 10052,
											"end": 10438,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10052,
											"end": 10438,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 10052,
											"end": 10438,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10052,
											"end": 10438,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 10052,
											"end": 10438,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10052,
											"end": 10438,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10052,
											"end": 10438,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2004,
											"end": 2152,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2004,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2004,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2004,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2004,
											"end": 2152,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10444,
											"end": 10827,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 10444,
											"end": 10827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10444,
											"end": 10827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 10444,
											"end": 10827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 10444,
											"end": 10827,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 10444,
											"end": 10827,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10444,
											"end": 10827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 10444,
											"end": 10827,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10444,
											"end": 10827,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 10444,
											"end": 10827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10444,
											"end": 10827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 10444,
											"end": 10827,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1353,
											"end": 1440,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1353,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1353,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1353,
											"end": 1440,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10965,
											"end": 11428,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 10965,
											"end": 11428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10965,
											"end": 11428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 10965,
											"end": 11428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 10965,
											"end": 11428,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 10965,
											"end": 11428,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10965,
											"end": 11428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 10965,
											"end": 11428,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10965,
											"end": 11428,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 10965,
											"end": 11428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10965,
											"end": 11428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 10965,
											"end": 11428,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11435,
											"end": 11752,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 11435,
											"end": 11752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 11435,
											"end": 11752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 11435,
											"end": 11752,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11752,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11435,
											"end": 11752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 11435,
											"end": 11752,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11435,
											"end": 11752,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 11435,
											"end": 11752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 11435,
											"end": 11752,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2540,
											"end": 2577,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2540,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2540,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2540,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2540,
											"end": 2577,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10833,
											"end": 10959,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 10833,
											"end": 10959,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10833,
											"end": 10959,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 10833,
											"end": 10959,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 10833,
											"end": 10959,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 10833,
											"end": 10959,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10833,
											"end": 10959,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 10833,
											"end": 10959,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10833,
											"end": 10959,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 10833,
											"end": 10959,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10833,
											"end": 10959,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 10833,
											"end": 10959,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9419,
											"end": 10046,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 9419,
											"end": 10046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 9419,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 9419,
											"end": 10046,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 10046,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9419,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 9419,
											"end": 10046,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9419,
											"end": 10046,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 9419,
											"end": 10046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 9419,
											"end": 10046,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2307,
											"end": 2551,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2307,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2307,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2307,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2307,
											"end": 2551,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2307,
											"end": 2551,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2307,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2307,
											"end": 2551,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2307,
											"end": 2551,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2307,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2307,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2307,
											"end": 2551,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2809,
											"end": 3734,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2809,
											"end": 3734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2809,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2809,
											"end": 3734,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 3734,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2809,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2809,
											"end": 3734,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2809,
											"end": 3734,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2809,
											"end": 3734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2809,
											"end": 3734,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8193,
											"end": 9413,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 8193,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1584,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1573,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8428,
											"end": 8442,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8442,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8464,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8464,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8420,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 8420,
											"end": 8518,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8420,
											"end": 8518,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8420,
											"end": 8518,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8420,
											"end": 8518,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8420,
											"end": 8518,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8420,
											"end": 8518,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8420,
											"end": 8518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8420,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 8420,
											"end": 8518,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8420,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 8420,
											"end": 8518,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8420,
											"end": 8518,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 8420,
											"end": 8518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8590,
											"end": 8610,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8610,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8610,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8556,
											"end": 8587,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8590,
											"end": 8610,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8610,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8610,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8602,
											"name": "PUSH",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 8590,
											"end": 8610,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8590,
											"end": 8610,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8610,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8590,
											"end": 8610,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8610,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8628,
											"end": 8646,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8628,
											"end": 8646,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8610,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8610,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8628,
											"end": 8646,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8628,
											"end": 8660,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8620,
											"end": 8675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 8620,
											"end": 8675,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8620,
											"end": 8675,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8620,
											"end": 8675,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8620,
											"end": 8675,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8620,
											"end": 8675,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8620,
											"end": 8675,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8620,
											"end": 8675,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8620,
											"end": 8675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 8620,
											"end": 8675,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8620,
											"end": 8675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 8620,
											"end": 8675,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8620,
											"end": 8675,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 8620,
											"end": 8675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8712,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8712,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8685,
											"end": 8712,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8712,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8712,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8685,
											"end": 8712,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8712,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8712,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8712,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8712,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8712,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8712,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8722,
											"end": 8744,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8722,
											"end": 8744,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8722,
											"end": 8757,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8722,
											"end": 8757,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8722,
											"end": 8757,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8722,
											"end": 8757,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 8722,
											"end": 8757,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8722,
											"end": 8757,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8722,
											"end": 8757,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8722,
											"end": 8757,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8722,
											"end": 8757,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8722,
											"end": 8757,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 8722,
											"end": 8757,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8722,
											"end": 8757,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8767,
											"end": 8814,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8767,
											"end": 8814,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8767,
											"end": 8814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 8767,
											"end": 8814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8767,
											"end": 8795,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 8767,
											"end": 8795,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8767,
											"end": 8795,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8767,
											"end": 8795,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8767,
											"end": 8814,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8767,
											"end": 8814,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 8767,
											"end": 8814,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8767,
											"end": 8814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8767,
											"end": 8814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8767,
											"end": 8814,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8767,
											"end": 8814,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 8767,
											"end": 8814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8824,
											"end": 8844,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8824,
											"end": 8844,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8824,
											"end": 8844,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8824,
											"end": 8855,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8824,
											"end": 8855,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8824,
											"end": 8855,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8885,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8865,
											"end": 8885,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8885,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8896,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8896,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8865,
											"end": 8896,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8896,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8896,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8896,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8896,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8896,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8896,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8943,
											"end": 8958,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 8943,
											"end": 8958,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8958,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8943,
											"end": 8958,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8943,
											"end": 8958,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8943,
											"end": 8950,
											"name": "PUSH",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 8943,
											"end": 8958,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8943,
											"end": 8958,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8943,
											"end": 8958,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8943,
											"end": 8958,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8943,
											"end": 8958,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8943,
											"end": 8965,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8935,
											"end": 8984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 8935,
											"end": 8984,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8935,
											"end": 8984,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8935,
											"end": 8984,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8935,
											"end": 8984,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8935,
											"end": 8984,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8935,
											"end": 8984,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8935,
											"end": 8984,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8935,
											"end": 8984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 8935,
											"end": 8984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8935,
											"end": 8984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 8935,
											"end": 8984,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8935,
											"end": 8984,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 8935,
											"end": 8984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8999,
											"end": 9005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8994,
											"end": 9261,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 8994,
											"end": 9261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9015,
											"end": 9022,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9015,
											"end": 9029,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9011,
											"end": 9012,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9011,
											"end": 9029,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9261,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 8994,
											"end": 9261,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9050,
											"end": 9076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9079,
											"end": 9086,
											"name": "PUSH",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 9079,
											"end": 9094,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9087,
											"end": 9093,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9079,
											"end": 9094,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9079,
											"end": 9094,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9079,
											"end": 9094,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9079,
											"end": 9094,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9079,
											"end": 9094,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9079,
											"end": 9094,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9079,
											"end": 9094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9079,
											"end": 9094,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9079,
											"end": 9094,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9079,
											"end": 9094,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9079,
											"end": 9094,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9079,
											"end": 9094,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9079,
											"end": 9094,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9050,
											"end": 9094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9050,
											"end": 9094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9112,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9153,
											"end": 9160,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 9161,
											"end": 9162,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9153,
											"end": 9163,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9153,
											"end": 9163,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9153,
											"end": 9163,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9153,
											"end": 9163,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9153,
											"end": 9163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 9153,
											"end": 9163,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9153,
											"end": 9163,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 9153,
											"end": 9163,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 9153,
											"end": 9163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9153,
											"end": 9163,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9153,
											"end": 9163,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9153,
											"end": 9163,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9153,
											"end": 9163,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9153,
											"end": 9163,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9153,
											"end": 9163,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9190,
											"end": 9201,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9190,
											"end": 9201,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9202,
											"end": 9203,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9190,
											"end": 9204,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9190,
											"end": 9204,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9190,
											"end": 9204,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9190,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 9190,
											"end": 9204,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9190,
											"end": 9204,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 9190,
											"end": 9204,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 9190,
											"end": 9204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9190,
											"end": 9204,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9190,
											"end": 9204,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9190,
											"end": 9204,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9190,
											"end": 9204,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9190,
											"end": 9204,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9190,
											"end": 9204,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9190,
											"end": 9204,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9190,
											"end": 9204,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9190,
											"end": 9204,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9190,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 9190,
											"end": 9204,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9190,
											"end": 9204,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9190,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 9190,
											"end": 9204,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9190,
											"end": 9204,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 9190,
											"end": 9204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9230,
											"end": 9234,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9249,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9250,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 9031,
											"end": 9034,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 8994,
											"end": 9261,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9261,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 8994,
											"end": 9261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9261,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9347,
											"name": "PUSH",
											"source": 6,
											"value": "7E55BC43E6F0111474264FD86152C4A3E172ABC29A15F5474298510CE6FF69EA"
										},
										{
											"begin": 9290,
											"end": 9296,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 9298,
											"end": 9308,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 9310,
											"end": 9326,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 9328,
											"end": 9336,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 9338,
											"end": 9346,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9347,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9276,
											"end": 9347,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 9276,
											"end": 9347,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9347,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9347,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9347,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9347,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9347,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 9276,
											"end": 9347,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9276,
											"end": 9347,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 9276,
											"end": 9347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9347,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9276,
											"end": 9347,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9347,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9347,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9347,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9347,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9389,
											"end": 9404,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 9389,
											"end": 9404,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9389,
											"end": 9404,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9389,
											"end": 9404,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9389,
											"end": 9404,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9389,
											"end": 9404,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "PUSH",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 9389,
											"end": 9404,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9389,
											"end": 9404,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9389,
											"end": 9404,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9389,
											"end": 9404,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9389,
											"end": 9404,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9389,
											"end": 9404,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9389,
											"end": 9404,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9362,
											"end": 9405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9362,
											"end": 9405,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9362,
											"end": 9405,
											"name": "PUSH",
											"source": 6,
											"value": "3305406BE9630A8E3735461DDFB1C43204CDC73F28649E8038CAFB44584D14BC"
										},
										{
											"begin": 9362,
											"end": 9405,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9362,
											"end": 9405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 9362,
											"end": 9405,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9381,
											"end": 9387,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 9381,
											"end": 9387,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9389,
											"end": 9404,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9362,
											"end": 9405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 9362,
											"end": 9405,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9362,
											"end": 9405,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 9362,
											"end": 9405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9362,
											"end": 9405,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9362,
											"end": 9405,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9362,
											"end": 9405,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9362,
											"end": 9405,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9362,
											"end": 9405,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9362,
											"end": 9405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9362,
											"end": 9405,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1645,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8193,
											"end": 9413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8193,
											"end": 9413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8193,
											"end": 9413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8193,
											"end": 9413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8193,
											"end": 9413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8193,
											"end": 9413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8193,
											"end": 9413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8193,
											"end": 9413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8193,
											"end": 9413,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2412,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12056,
											"end": 12071,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12056,
											"end": 12071,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12004,
											"end": 12008,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12056,
											"end": 12071,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12056,
											"end": 12071,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12056,
											"end": 12071,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12056,
											"end": 12063,
											"name": "PUSH",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 12056,
											"end": 12071,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12056,
											"end": 12071,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12056,
											"end": 12071,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12056,
											"end": 12071,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12056,
											"end": 12071,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 12088,
											"end": 12107,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11945,
											"end": 12114,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10052,
											"end": 10438,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10052,
											"end": 10438,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1584,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1573,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10182,
											"end": 10202,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10182,
											"end": 10202,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10182,
											"end": 10202,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10148,
											"end": 10179,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10182,
											"end": 10202,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10182,
											"end": 10202,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10182,
											"end": 10202,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10182,
											"end": 10194,
											"name": "PUSH",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 10182,
											"end": 10202,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10182,
											"end": 10202,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10182,
											"end": 10202,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10182,
											"end": 10202,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10182,
											"end": 10202,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10220,
											"end": 10238,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10220,
											"end": 10238,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10182,
											"end": 10202,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10182,
											"end": 10202,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10220,
											"end": 10238,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10267,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 10212,
											"end": 10267,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10267,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10212,
											"end": 10267,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10212,
											"end": 10267,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10267,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10267,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10212,
											"end": 10267,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10267,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 10212,
											"end": 10267,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10267,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 10212,
											"end": 10267,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10212,
											"end": 10267,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 10212,
											"end": 10267,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10277,
											"end": 10297,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 10277,
											"end": 10297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10277,
											"end": 10297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10277,
											"end": 10308,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10277,
											"end": 10308,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10277,
											"end": 10308,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10346,
											"end": 10368,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10346,
											"end": 10368,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10346,
											"end": 10368,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10346,
											"end": 10368,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10410,
											"end": 10430,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10410,
											"end": 10430,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10410,
											"end": 10430,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10410,
											"end": 10430,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10324,
											"end": 10431,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10324,
											"end": 10431,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10324,
											"end": 10431,
											"name": "PUSH",
											"source": 6,
											"value": "7E55BC43E6F0111474264FD86152C4A3E172ABC29A15F5474298510CE6FF69EA"
										},
										{
											"begin": 10324,
											"end": 10431,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10324,
											"end": 10431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 10324,
											"end": 10431,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10344,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10344,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10346,
											"end": 10368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10346,
											"end": 10368,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10346,
											"end": 10368,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10346,
											"end": 10368,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10370,
											"end": 10398,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 10370,
											"end": 10398,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10370,
											"end": 10398,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10370,
											"end": 10398,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10300,
											"end": 10308,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 10300,
											"end": 10308,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10410,
											"end": 10430,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 10410,
											"end": 10430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10410,
											"end": 10430,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10410,
											"end": 10430,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10410,
											"end": 10430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10324,
											"end": 10431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 10324,
											"end": 10431,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10324,
											"end": 10431,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 10324,
											"end": 10431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10324,
											"end": 10431,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10324,
											"end": 10431,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10324,
											"end": 10431,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10324,
											"end": 10431,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10324,
											"end": 10431,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10324,
											"end": 10431,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10324,
											"end": 10431,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1645,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10052,
											"end": 10438,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10052,
											"end": 10438,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10052,
											"end": 10438,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2004,
											"end": 2152,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2004,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1584,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1573,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2095,
											"end": 2101,
											"name": "PUSH",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2095,
											"end": 2101,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2114,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2114,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2112,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2111,
											"end": 2112,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2095,
											"end": 2101,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2095,
											"end": 2101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2114,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2074,
											"end": 2114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2112,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2112,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2114,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2125,
											"end": 2131,
											"name": "PUSH",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2125,
											"end": 2144,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2125,
											"end": 2144,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2125,
											"end": 2144,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2125,
											"end": 2144,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2125,
											"end": 2144,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2004,
											"end": 2152,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10444,
											"end": 10827,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 10444,
											"end": 10827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1584,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1573,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10571,
											"end": 10591,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10571,
											"end": 10591,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10571,
											"end": 10591,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10537,
											"end": 10568,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10571,
											"end": 10591,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10571,
											"end": 10591,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10571,
											"end": 10591,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "PUSH",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 10571,
											"end": 10591,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10571,
											"end": 10591,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10571,
											"end": 10591,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10571,
											"end": 10591,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10571,
											"end": 10591,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10609,
											"end": 10627,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10609,
											"end": 10627,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10571,
											"end": 10591,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10571,
											"end": 10591,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10609,
											"end": 10627,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 10601,
											"end": 10656,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10656,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10601,
											"end": 10656,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10601,
											"end": 10656,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10656,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10656,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10601,
											"end": 10656,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 10601,
											"end": 10656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 10601,
											"end": 10656,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10601,
											"end": 10656,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 10601,
											"end": 10656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10666,
											"end": 10686,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10666,
											"end": 10686,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10666,
											"end": 10686,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10666,
											"end": 10697,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10666,
											"end": 10697,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10666,
											"end": 10697,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10666,
											"end": 10697,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10666,
											"end": 10697,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10666,
											"end": 10697,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10666,
											"end": 10697,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 10666,
											"end": 10697,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10666,
											"end": 10697,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10789,
											"end": 10809,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 10789,
											"end": 10809,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10789,
											"end": 10809,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10789,
											"end": 10809,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10713,
											"end": 10820,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10713,
											"end": 10820,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10713,
											"end": 10820,
											"name": "PUSH",
											"source": 6,
											"value": "7E55BC43E6F0111474264FD86152C4A3E172ABC29A15F5474298510CE6FF69EA"
										},
										{
											"begin": 10713,
											"end": 10820,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10713,
											"end": 10820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 10713,
											"end": 10820,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10727,
											"end": 10733,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10727,
											"end": 10733,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10759,
											"end": 10787,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 10759,
											"end": 10787,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10759,
											"end": 10787,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10759,
											"end": 10787,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10789,
											"end": 10809,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10666,
											"end": 10697,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 10666,
											"end": 10697,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10713,
											"end": 10820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 10713,
											"end": 10820,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "PUSH",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2533,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1353,
											"end": 1440,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1353,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1426,
											"end": 1432,
											"name": "PUSH",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1426,
											"end": 1432,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1426,
											"end": 1432,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1440,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1440,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10965,
											"end": 11428,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 10965,
											"end": 11428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1584,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1573,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11136,
											"end": 11163,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11170,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11119,
											"end": 11125,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11119,
											"end": 11132,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11119,
											"end": 11170,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11111,
											"end": 11239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 11111,
											"end": 11239,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11111,
											"end": 11239,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11111,
											"end": 11239,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11111,
											"end": 11239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11111,
											"end": 11239,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11111,
											"end": 11239,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11111,
											"end": 11239,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11111,
											"end": 11239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 11111,
											"end": 11239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11111,
											"end": 11239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 11111,
											"end": 11239,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11111,
											"end": 11239,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 11111,
											"end": 11239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11255,
											"end": 11261,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11250,
											"end": 11421,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 11250,
											"end": 11421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11271,
											"end": 11277,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11271,
											"end": 11284,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11267,
											"end": 11268,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11267,
											"end": 11284,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11250,
											"end": 11421,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11250,
											"end": 11421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 11250,
											"end": 11421,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11305,
											"end": 11318,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11321,
											"end": 11327,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11328,
											"end": 11329,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11321,
											"end": 11330,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11321,
											"end": 11330,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11321,
											"end": 11330,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11321,
											"end": 11330,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11321,
											"end": 11330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 11321,
											"end": 11330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11321,
											"end": 11330,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 11321,
											"end": 11330,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 11321,
											"end": 11330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11321,
											"end": 11330,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11321,
											"end": 11330,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11321,
											"end": 11330,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11321,
											"end": 11330,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11321,
											"end": 11330,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11321,
											"end": 11330,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11305,
											"end": 11330,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11305,
											"end": 11330,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11380,
											"end": 11407,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11408,
											"end": 11409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11380,
											"end": 11410,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11380,
											"end": 11410,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11380,
											"end": 11410,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11380,
											"end": 11410,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11380,
											"end": 11410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 11380,
											"end": 11410,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11380,
											"end": 11410,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 11380,
											"end": 11410,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 11380,
											"end": 11410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11380,
											"end": 11410,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11380,
											"end": 11410,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11380,
											"end": 11410,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11380,
											"end": 11410,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11380,
											"end": 11410,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11380,
											"end": 11410,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11380,
											"end": 11410,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11380,
											"end": 11410,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11380,
											"end": 11410,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11380,
											"end": 11410,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11380,
											"end": 11410,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11344,
											"end": 11377,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11344,
											"end": 11377,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11344,
											"end": 11377,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11344,
											"end": 11377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11344,
											"end": 11377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11344,
											"end": 11377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11344,
											"end": 11377,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11344,
											"end": 11370,
											"name": "PUSH",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 11344,
											"end": 11377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11344,
											"end": 11377,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11344,
											"end": 11377,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11344,
											"end": 11377,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11344,
											"end": 11377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11344,
											"end": 11377,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11344,
											"end": 11377,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11344,
											"end": 11410,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11344,
											"end": 11410,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11344,
											"end": 11410,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11344,
											"end": 11410,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11344,
											"end": 11410,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11344,
											"end": 11410,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11344,
											"end": 11410,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11344,
											"end": 11410,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11344,
											"end": 11410,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11344,
											"end": 11410,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11344,
											"end": 11410,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 11344,
											"end": 11410,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11344,
											"end": 11410,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 11286,
											"end": 11289,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11250,
											"end": 11421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 11250,
											"end": 11421,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11250,
											"end": 11421,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 11250,
											"end": 11421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11250,
											"end": 11421,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10965,
											"end": 11428,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10965,
											"end": 11428,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10965,
											"end": 11428,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11435,
											"end": 11752,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 11435,
											"end": 11752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11570,
											"end": 11590,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11570,
											"end": 11590,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11570,
											"end": 11590,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11520,
											"end": 11524,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11570,
											"end": 11590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11570,
											"end": 11590,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11570,
											"end": 11590,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11570,
											"end": 11582,
											"name": "PUSH",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 11570,
											"end": 11590,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11570,
											"end": 11590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11570,
											"end": 11590,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11570,
											"end": 11590,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11570,
											"end": 11590,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11570,
											"end": 11590,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11570,
											"end": 11590,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11570,
											"end": 11590,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11637,
											"end": 11644,
											"name": "PUSH",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 11637,
											"end": 11652,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11637,
											"end": 11652,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11637,
											"end": 11652,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11637,
											"end": 11652,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11637,
											"end": 11652,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP11",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP11",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP11",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11520,
											"end": 11524,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 11520,
											"end": 11524,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 11570,
											"end": 11590,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 11570,
											"end": 11590,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 11637,
											"end": 11652,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11637,
											"end": 11652,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 11570,
											"end": 11590,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 11570,
											"end": 11590,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 11570,
											"end": 11590,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 11570,
											"end": 11590,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11719,
											"end": 11744,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11719,
											"end": 11744,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11719,
											"end": 11731,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11719,
											"end": 11731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11732,
											"end": 11743,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 11732,
											"end": 11743,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11719,
											"end": 11744,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11719,
											"end": 11744,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11719,
											"end": 11744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 11719,
											"end": 11744,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11719,
											"end": 11744,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 11719,
											"end": 11744,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 11719,
											"end": 11744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11719,
											"end": 11744,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11719,
											"end": 11744,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11719,
											"end": 11744,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11719,
											"end": 11744,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11719,
											"end": 11744,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11719,
											"end": 11744,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11719,
											"end": 11744,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11719,
											"end": 11744,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11719,
											"end": 11744,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11719,
											"end": 11744,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11719,
											"end": 11744,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11719,
											"end": 11744,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11719,
											"end": 11744,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 11670,
											"end": 11745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11663,
											"end": 11745,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11663,
											"end": 11745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11663,
											"end": 11745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11663,
											"end": 11745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11752,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 11435,
											"end": 11752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11752,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11752,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11752,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "PUSH",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2466,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2540,
											"end": 2577,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2540,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2540,
											"end": 2577,
											"name": "PUSH",
											"source": 6,
											"value": "9A"
										},
										{
											"begin": 2540,
											"end": 2577,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2540,
											"end": 2577,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2540,
											"end": 2577,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2540,
											"end": 2577,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10833,
											"end": 10959,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 10833,
											"end": 10959,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 1584,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 1573,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10916,
											"end": 10938,
											"name": "PUSH",
											"source": 6,
											"value": "9A"
										},
										{
											"begin": 10916,
											"end": 10952,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10916,
											"end": 10952,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10916,
											"end": 10952,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10916,
											"end": 10952,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10916,
											"end": 10952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10916,
											"end": 10952,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10916,
											"end": 10952,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10916,
											"end": 10952,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10916,
											"end": 10952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10916,
											"end": 10952,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10916,
											"end": 10952,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 10916,
											"end": 10952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10916,
											"end": 10952,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10833,
											"end": 10959,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9419,
											"end": 10046,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 9419,
											"end": 10046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 1584,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1573,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9606,
											"end": 9621,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9606,
											"end": 9621,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9603,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9606,
											"end": 9621,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9606,
											"end": 9621,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9606,
											"end": 9621,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9606,
											"end": 9613,
											"name": "PUSH",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 9606,
											"end": 9621,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9606,
											"end": 9621,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9606,
											"end": 9621,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9606,
											"end": 9621,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9606,
											"end": 9621,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9636,
											"end": 9647,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9636,
											"end": 9647,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9636,
											"end": 9655,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 9632,
											"end": 10039,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9632,
											"end": 10039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 9632,
											"end": 10039,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9684,
											"end": 9710,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9713,
											"end": 9717,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9718,
											"end": 9723,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9713,
											"end": 9724,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9713,
											"end": 9724,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9713,
											"end": 9724,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9713,
											"end": 9724,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9713,
											"end": 9724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 9713,
											"end": 9724,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9713,
											"end": 9724,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 9713,
											"end": 9724,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 9713,
											"end": 9724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9713,
											"end": 9724,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9713,
											"end": 9724,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9713,
											"end": 9724,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9713,
											"end": 9724,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9713,
											"end": 9724,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9713,
											"end": 9724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9713,
											"end": 9724,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9713,
											"end": 9724,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9713,
											"end": 9724,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9738,
											"end": 9760,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9738,
											"end": 9760,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9738,
											"end": 9760,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9738,
											"end": 9760,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9738,
											"end": 9760,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9738,
											"end": 9760,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9738,
											"end": 9760,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9738,
											"end": 9760,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9738,
											"end": 9760,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9713,
											"end": 9724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9713,
											"end": 9724,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9794,
											"end": 9805,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9794,
											"end": 9805,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9713,
											"end": 9724,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9713,
											"end": 9724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9774,
											"end": 9805,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9794,
											"end": 9805,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9774,
											"end": 9805,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9774,
											"end": 9805,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9774,
											"end": 9805,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9774,
											"end": 9805,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9774,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 9774,
											"end": 9805,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9774,
											"end": 9805,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 9774,
											"end": 9805,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 9774,
											"end": 9805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9774,
											"end": 9805,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9774,
											"end": 9805,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9774,
											"end": 9805,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9774,
											"end": 9805,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9819,
											"end": 9847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9819,
											"end": 9847,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9819,
											"end": 9847,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9819,
											"end": 9847,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9819,
											"end": 9847,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9819,
											"end": 9847,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9819,
											"end": 9847,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9819,
											"end": 9847,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9819,
											"end": 9847,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9819,
											"end": 9847,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9632,
											"end": 10039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 9632,
											"end": 10039,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9632,
											"end": 10039,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 9632,
											"end": 10039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9892,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9966,
											"end": 9977,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 10027,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 10028,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9632,
											"end": 10039,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 9632,
											"end": 10039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1645,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9419,
											"end": 10046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 10046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 10046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 10046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 10046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 10046,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2307,
											"end": 2551,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2307,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 1584,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 1573,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 1573,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 1565,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2396,
											"end": 2418,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2396,
											"end": 2418,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2388,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 2388,
											"end": 2461,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2388,
											"end": 2461,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2388,
											"end": 2461,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2388,
											"end": 2461,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2388,
											"end": 2461,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2388,
											"end": 2461,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2388,
											"end": 2461,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2388,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2388,
											"end": 2461,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2388,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 2388,
											"end": 2461,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2388,
											"end": 2461,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 2388,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2498,
											"end": 2504,
											"name": "PUSH",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2498,
											"end": 2504,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2498,
											"end": 2504,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2498,
											"end": 2504,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2498,
											"end": 2504,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2498,
											"end": 2504,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2532,
											"name": "PUSH",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2307,
											"end": 2551,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2809,
											"end": 3734,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2809,
											"end": 3734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 2881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3009,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2989,
											"end": 3009,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3009,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3009,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 2881,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 2881,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3009,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2989,
											"end": 3009,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3143,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2985,
											"end": 3143,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3111,
											"end": 3131,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3111,
											"end": 3131,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3111,
											"end": 3131,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3111,
											"end": 3131,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3070,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3069,
											"end": 3070,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3091,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 3091,
											"end": 3132,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 3069,
											"end": 3070,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3105,
											"name": "PUSH",
											"source": 6,
											"value": "C097CE7BC90715B34B9F1000000000"
										},
										{
											"begin": 3091,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3091,
											"end": 3106,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3091,
											"end": 3106,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 3091,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3110,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3091,
											"end": 3132,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3091,
											"end": 3132,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 3091,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3132,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3132,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3132,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3132,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3084,
											"end": 3132,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3143,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2985,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3190,
											"end": 3206,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3206,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3153,
											"end": 3187,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3190,
											"end": 3206,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3206,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3206,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3197,
											"name": "PUSH",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3190,
											"end": 3206,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3190,
											"end": 3206,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3206,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3190,
											"end": 3206,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3206,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3206,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3216,
											"end": 3613,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3216,
											"end": 3613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3259,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3236,
											"end": 3259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3236,
											"end": 3259,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3216,
											"end": 3613,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3216,
											"end": 3613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3216,
											"end": 3613,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3280,
											"end": 3311,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3314,
											"end": 3326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3327,
											"end": 3328,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3368,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3368,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3347,
											"end": 3368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3368,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3368,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3347,
											"end": 3368,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3376,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3376,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3372,
											"end": 3376,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3347,
											"end": 3376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3343,
											"end": 3603,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3343,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3343,
											"end": 3603,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3469,
											"end": 3476,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 3469,
											"end": 3476,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3491,
											"end": 3502,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3491,
											"end": 3502,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3503,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3525,
											"end": 3534,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3525,
											"end": 3534,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3521,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3521,
											"end": 3589,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3570,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3558,
											"end": 3570,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3558,
											"end": 3570,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3558,
											"end": 3570,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3558,
											"end": 3570,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3558,
											"end": 3570,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3558,
											"end": 3570,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3558,
											"end": 3570,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3558,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3558,
											"end": 3570,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3521,
											"end": 3589,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3521,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3261,
											"end": 3264,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3261,
											"end": 3264,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3216,
											"end": 3613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3216,
											"end": 3613,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3216,
											"end": 3613,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3216,
											"end": 3613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3216,
											"end": 3613,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3667,
											"end": 3672,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3667,
											"end": 3676,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3659,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3659,
											"end": 3708,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3659,
											"end": 3708,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3659,
											"end": 3708,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3659,
											"end": 3708,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3659,
											"end": 3708,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3659,
											"end": 3708,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3659,
											"end": 3708,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3659,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 3659,
											"end": 3708,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3659,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 3659,
											"end": 3708,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3659,
											"end": 3708,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3659,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3726,
											"end": 3727,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3726,
											"end": 3727,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 3734,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2809,
											"end": 3734,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 810,
											"end": 916,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 810,
											"end": 916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 898,
											"end": 908,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 810,
											"end": 916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 810,
											"end": 916,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3740,
											"end": 4942,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 3740,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3881,
											"end": 3885,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3897,
											"end": 3915,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3926,
											"end": 3968,
											"name": "PUSH",
											"source": 6,
											"value": "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
										},
										{
											"begin": 3897,
											"end": 3969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 3969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 4001,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4020,
											"end": 4027,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 4028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 4028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 4059,
											"end": 4065,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4059,
											"end": 4072,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4072,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4085,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4044,
											"end": 4085,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4085,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4085,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4044,
											"end": 4085,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4085,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4044,
											"end": 4085,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4085,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4085,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4044,
											"end": 4085,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4085,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4085,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4044,
											"end": 4085,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "704D41544943"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4044,
											"end": 4085,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4085,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 4044,
											"end": 4085,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4044,
											"end": 4085,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 4044,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 4039,
											"end": 4171,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4138,
											"end": 4145,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4122,
											"end": 4157,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4157,
											"name": "PUSH",
											"source": 6,
											"value": "6F307DC3"
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4101,
											"end": 4160,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4101,
											"end": 4160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4171,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 4039,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4181,
											"end": 4207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4246,
											"end": 4285,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4246,
											"end": 4285,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4246,
											"end": 4285,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4246,
											"end": 4285,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4246,
											"end": 4285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 4246,
											"end": 4285,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4246,
											"end": 4285,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 4246,
											"end": 4285,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 4246,
											"end": 4285,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4246,
											"end": 4285,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4242,
											"end": 4917,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4242,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4242,
											"end": 4917,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4308,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 4335,
											"end": 4346,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4348,
											"end": 4359,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4308,
											"end": 4334,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 4308,
											"end": 4360,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4308,
											"end": 4360,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 4308,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4301,
											"end": 4360,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4301,
											"end": 4360,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4301,
											"end": 4360,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4301,
											"end": 4360,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4301,
											"end": 4360,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4301,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 4301,
											"end": 4360,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4242,
											"end": 4917,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4242,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4419,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4382,
											"end": 4392,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4419,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4382,
											"end": 4419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4419,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4419,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 4382,
											"end": 4419,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4419,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4419,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 4382,
											"end": 4419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4419,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4917,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 4378,
											"end": 4917,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 4467,
											"end": 4478,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4480,
											"end": 4491,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 4442,
											"end": 4492,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4378,
											"end": 4917,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 4378,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4550,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4512,
											"end": 4522,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 4550,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4512,
											"end": 4550,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 4550,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 4550,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 4512,
											"end": 4550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 4550,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 4550,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 4512,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 4550,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 4917,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 4508,
											"end": 4917,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4573,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 4599,
											"end": 4610,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4612,
											"end": 4623,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4573,
											"end": 4598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 4573,
											"end": 4624,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4508,
											"end": 4917,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 4508,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4659,
											"end": 4683,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4645,
											"end": 4655,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4645,
											"end": 4683,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4645,
											"end": 4683,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4645,
											"end": 4683,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4645,
											"end": 4683,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4645,
											"end": 4683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 4645,
											"end": 4683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4645,
											"end": 4683,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 4645,
											"end": 4683,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 4645,
											"end": 4683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4645,
											"end": 4683,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4917,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 4641,
											"end": 4917,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 4732,
											"end": 4743,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4756,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 4706,
											"end": 4757,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4641,
											"end": 4917,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 4641,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4792,
											"end": 4824,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4778,
											"end": 4788,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4778,
											"end": 4824,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4778,
											"end": 4824,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4778,
											"end": 4824,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4778,
											"end": 4824,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4778,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 4778,
											"end": 4824,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4778,
											"end": 4824,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 4778,
											"end": 4824,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 4778,
											"end": 4824,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4778,
											"end": 4824,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4774,
											"end": 4917,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4774,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 4774,
											"end": 4917,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4847,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 4881,
											"end": 4892,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4894,
											"end": 4905,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4847,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 4847,
											"end": 4906,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4774,
											"end": 4917,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 4774,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4934,
											"end": 4935,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4927,
											"end": 4935,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4935,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4935,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4935,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4935,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 4942,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3740,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 4942,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 4942,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 4942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 4942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 4942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 4942,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3645,
											"end": 3865,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 3645,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3703,
											"end": 3710,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 3733,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3723,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 3723,
											"end": 3743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3742,
											"end": 3743,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3735,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3735,
											"end": 3743,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3723,
											"end": 3743,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 3723,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3766,
											"end": 3771,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3766,
											"end": 3771,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3766,
											"end": 3771,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3771,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3766,
											"end": 3767,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3766,
											"end": 3771,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3766,
											"end": 3767,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3790,
											"end": 3795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 3790,
											"end": 3795,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3790,
											"end": 3795,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 3790,
											"end": 3795,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 3790,
											"end": 3795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3790,
											"end": 3795,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3790,
											"end": 3800,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3782,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 3782,
											"end": 3838,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3782,
											"end": 3838,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3782,
											"end": 3838,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3782,
											"end": 3838,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3782,
											"end": 3838,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3782,
											"end": 3838,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3782,
											"end": 3838,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3782,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3782,
											"end": 3838,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3782,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 3782,
											"end": 3838,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4343,
											"end": 4496,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 4343,
											"end": 4496,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4434,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4430,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4487,
											"end": 4488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4483,
											"end": 4484,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4483,
											"end": 4488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4483,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 4483,
											"end": 4488,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4483,
											"end": 4488,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 4483,
											"end": 4488,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 4483,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4483,
											"end": 4488,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4483,
											"end": 4488,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4343,
											"end": 4496,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4343,
											"end": 4496,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11758,
											"end": 11939,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 11758,
											"end": 11939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11839,
											"end": 11843,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11927,
											"end": 11928,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11909,
											"end": 11930,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11909,
											"end": 11930,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11909,
											"end": 11930,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11909,
											"end": 11930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11909,
											"end": 11930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 11909,
											"end": 11930,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11909,
											"end": 11930,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11909,
											"end": 11930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 11909,
											"end": 11930,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11909,
											"end": 11930,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 11909,
											"end": 11930,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11909,
											"end": 11930,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11909,
											"end": 11930,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11909,
											"end": 11930,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11909,
											"end": 11930,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11909,
											"end": 11930,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11909,
											"end": 11930,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11909,
											"end": 11930,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11909,
											"end": 11930,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11909,
											"end": 11930,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11909,
											"end": 11930,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11909,
											"end": 11930,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11909,
											"end": 11930,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11899,
											"end": 11931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11899,
											"end": 11931,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11899,
											"end": 11931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11899,
											"end": 11931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11899,
											"end": 11931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11899,
											"end": 11931,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11891,
											"end": 11892,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11873,
											"end": 11894,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11873,
											"end": 11894,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11873,
											"end": 11894,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11873,
											"end": 11894,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11873,
											"end": 11894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 11873,
											"end": 11894,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11873,
											"end": 11894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11873,
											"end": 11894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 11873,
											"end": 11894,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11873,
											"end": 11894,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 11873,
											"end": 11894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11873,
											"end": 11894,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11873,
											"end": 11894,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11873,
											"end": 11894,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11873,
											"end": 11894,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11873,
											"end": 11894,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11873,
											"end": 11894,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11873,
											"end": 11894,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11873,
											"end": 11894,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11873,
											"end": 11894,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11873,
											"end": 11894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11873,
											"end": 11894,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11873,
											"end": 11894,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11863,
											"end": 11895,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11863,
											"end": 11895,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11863,
											"end": 11895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11863,
											"end": 11895,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11863,
											"end": 11895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11863,
											"end": 11895,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11863,
											"end": 11931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11855,
											"end": 11932,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11855,
											"end": 11932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11758,
											"end": 11939,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11758,
											"end": 11939,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11758,
											"end": 11939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11758,
											"end": 11939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11758,
											"end": 11939,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6716,
											"end": 7290,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 6716,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6839,
											"end": 6843,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6886,
											"end": 6887,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6863,
											"end": 6874,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6863,
											"end": 6887,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6855,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 6855,
											"end": 6926,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6855,
											"end": 6926,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6855,
											"end": 6926,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6855,
											"end": 6926,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6855,
											"end": 6926,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6855,
											"end": 6926,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6855,
											"end": 6926,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6855,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 6855,
											"end": 6926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6855,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 6855,
											"end": 6926,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6855,
											"end": 6926,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 6855,
											"end": 6926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6937,
											"end": 6968,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6993,
											"end": 7004,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6993,
											"end": 7011,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6993,
											"end": 7011,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6993,
											"end": 7011,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6937,
											"end": 7012,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6937,
											"end": 7012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7033,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7040,
											"end": 7049,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7040,
											"end": 7065,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7065,
											"name": "PUSH",
											"source": 6,
											"value": "FEAF968C"
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 7040,
											"end": 7067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7022,
											"end": 7067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7022,
											"end": 7067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7022,
											"end": 7067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7022,
											"end": 7067,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7022,
											"end": 7067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7022,
											"end": 7067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7091,
											"end": 7092,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7082,
											"end": 7087,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7092,
											"name": "SGT",
											"source": 6
										},
										{
											"begin": 7078,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 7078,
											"end": 7283,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7115,
											"end": 7116,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7108,
											"end": 7116,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7108,
											"end": 7116,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7108,
											"end": 7116,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7108,
											"end": 7116,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7108,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 7108,
											"end": 7116,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7078,
											"end": 7283,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 7078,
											"end": 7283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7271,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7251,
											"end": 7271,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7271,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7271,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7225,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 7225,
											"end": 7272,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7225,
											"end": 7246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 7230,
											"end": 7235,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7245,
											"name": "PUSH",
											"source": 6,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 7225,
											"end": 7240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 7225,
											"end": 7246,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7225,
											"end": 7272,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 7225,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7218,
											"end": 7272,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7218,
											"end": 7272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7218,
											"end": 7272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7218,
											"end": 7272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7218,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 7218,
											"end": 7272,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4948,
											"end": 5516,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 4948,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5120,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5120,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5272,
											"end": 5294,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5272,
											"end": 5294,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5272,
											"end": 5294,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5272,
											"end": 5294,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "141C631"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5069,
											"end": 5073,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5069,
											"end": 5073,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5120,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5120,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5120,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5069,
											"end": 5073,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5069,
											"end": 5073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5237,
											"end": 5271,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5271,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5271,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5271,
											"name": "PUSH",
											"source": 6,
											"value": "2838C620"
										},
										{
											"begin": 5237,
											"end": 5271,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 5237,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5224,
											"end": 5295,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5224,
											"end": 5295,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5319,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5309,
											"end": 5314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5309,
											"end": 5319,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5305,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 5305,
											"end": 5510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5342,
											"end": 5343,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5335,
											"end": 5343,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5335,
											"end": 5343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5335,
											"end": 5343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5335,
											"end": 5343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5335,
											"end": 5343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5335,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 5335,
											"end": 5343,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5305,
											"end": 5510,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 5305,
											"end": 5510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5478,
											"end": 5498,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5478,
											"end": 5498,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5478,
											"end": 5498,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5478,
											"end": 5498,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 5452,
											"end": 5499,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 5457,
											"end": 5462,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5468,
											"end": 5472,
											"name": "PUSH",
											"source": 6,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 5452,
											"end": 5467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5452,
											"end": 5499,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 5452,
											"end": 5499,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5499,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 5445,
											"end": 5499,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6142,
											"end": 6670,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 6142,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6297,
											"end": 6315,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6297,
											"end": 6315,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6264,
											"end": 6268,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6264,
											"end": 6268,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6297,
											"end": 6315,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6422,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 6422,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 6422,
											"end": 6474,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6422,
											"end": 6474,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 6422,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6548,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6520,
											"end": 6548,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6548,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6548,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6548,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13B6165D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6477,
											"end": 6519,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6519,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6519,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6519,
											"name": "PUSH",
											"source": 6,
											"value": "276C2CBA"
										},
										{
											"begin": 6477,
											"end": 6519,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6548,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6583,
											"end": 6593,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6583,
											"end": 6593,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC57D4DF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6422,
											"end": 6549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6422,
											"end": 6549,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6583,
											"end": 6593,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6610,
											"end": 6648,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6648,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6648,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6648,
											"name": "PUSH",
											"source": 6,
											"value": "FC57D4DF"
										},
										{
											"begin": 6610,
											"end": 6648,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6583,
											"end": 6593,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6583,
											"end": 6593,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6663,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 6142,
											"end": 6670,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6142,
											"end": 6670,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5522,
											"end": 6098,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 5522,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 5876,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5854,
											"end": 5876,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 5876,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 5876,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5825,
											"end": 5877,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5825,
											"end": 5877,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "41976E09"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5825,
											"end": 5877,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5825,
											"end": 5877,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5644,
											"end": 5648,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5648,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5644,
											"end": 5648,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5644,
											"end": 5648,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5825,
											"end": 5853,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5825,
											"end": 5853,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5825,
											"end": 5853,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5825,
											"end": 5853,
											"name": "PUSH",
											"source": 6,
											"value": "41976E09"
										},
										{
											"begin": 5825,
											"end": 5853,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5825,
											"end": 5877,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 5825,
											"end": 5877,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5825,
											"end": 5877,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5825,
											"end": 5877,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5825,
											"end": 5877,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 5825,
											"end": 5877,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7333,
											"end": 8187,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 7333,
											"end": 8187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7467,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7486,
											"end": 7497,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7486,
											"end": 7506,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7486,
											"end": 7506,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7486,
											"end": 7506,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7486,
											"end": 7510,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 7478,
											"end": 7549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7478,
											"end": 7549,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7478,
											"end": 7549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7549,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7478,
											"end": 7549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 7478,
											"end": 7549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 7478,
											"end": 7549,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7478,
											"end": 7549,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 7478,
											"end": 7549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7576,
											"end": 7598,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7576,
											"end": 7598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7576,
											"end": 7598,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7576,
											"end": 7598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7576,
											"end": 7598,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7672,
											"end": 7705,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7705,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7705,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7560,
											"end": 7573,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7672,
											"end": 7705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7705,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7705,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7698,
											"name": "PUSH",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 7672,
											"end": 7705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7705,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7705,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7705,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7672,
											"end": 7705,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7705,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7705,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7705,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3FABE5A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7576,
											"end": 7598,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7576,
											"end": 7598,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7705,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7705,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7705,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7705,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7705,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7775,
											"name": "PUSH",
											"source": 6,
											"value": "FEAF968C"
										},
										{
											"begin": 7742,
											"end": 7775,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7705,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 7742,
											"end": 7777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7716,
											"end": 7777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7716,
											"end": 7777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7716,
											"end": 7777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7716,
											"end": 7777,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7716,
											"end": 7777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7716,
											"end": 7777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7788,
											"end": 7825,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7850,
											"end": 7872,
											"name": "PUSH",
											"source": 6,
											"value": "9A"
										},
										{
											"begin": 7850,
											"end": 7872,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7850,
											"end": 7872,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7850,
											"end": 7872,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7850,
											"end": 7872,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7850,
											"end": 7872,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7850,
											"end": 7872,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7850,
											"end": 7872,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7850,
											"end": 7872,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7850,
											"end": 7872,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7788,
											"end": 7873,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7788,
											"end": 7873,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7885,
											"end": 7900,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7922,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7907,
											"end": 7938,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7938,
											"name": "PUSH",
											"source": 6,
											"value": "FEAF968C"
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 7907,
											"end": 7940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7883,
											"end": 7940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7883,
											"end": 7940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7883,
											"end": 7940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7883,
											"end": 7940,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7883,
											"end": 7940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7883,
											"end": 7940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7972,
											"end": 7973,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7955,
											"end": 7968,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7955,
											"end": 7973,
											"name": "SGT",
											"source": 6
										},
										{
											"begin": 7951,
											"end": 8181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 7951,
											"end": 8181,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7996,
											"end": 7997,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7989,
											"end": 7997,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 7989,
											"end": 7997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7989,
											"end": 7997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7989,
											"end": 7997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7989,
											"end": 7997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7989,
											"end": 7997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7989,
											"end": 7997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7989,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 7989,
											"end": 7997,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7951,
											"end": 8181,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 7951,
											"end": 8181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8149,
											"end": 8169,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8149,
											"end": 8169,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8149,
											"end": 8169,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8149,
											"end": 8169,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8092,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 8092,
											"end": 8170,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8092,
											"end": 8144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 8139,
											"end": 8143,
											"name": "PUSH",
											"source": 6,
											"value": "2540BE400"
										},
										{
											"begin": 8092,
											"end": 8134,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 8097,
											"end": 8110,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8121,
											"end": 8132,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8092,
											"end": 8115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 8092,
											"end": 8134,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8092,
											"end": 8134,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 8092,
											"end": 8134,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8092,
											"end": 8138,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8092,
											"end": 8138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 8092,
											"end": 8144,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8092,
											"end": 8170,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 8092,
											"end": 8170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8085,
											"end": 8170,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 8085,
											"end": 8170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8085,
											"end": 8170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8085,
											"end": 8170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8085,
											"end": 8170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8085,
											"end": 8170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8085,
											"end": 8170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8085,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 8085,
											"end": 8170,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7951,
											"end": 8181,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 7951,
											"end": 8181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7333,
											"end": 8187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7333,
											"end": 8187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7333,
											"end": 8187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7333,
											"end": 8187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7333,
											"end": 8187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7333,
											"end": 8187,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7333,
											"end": 8187,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7333,
											"end": 8187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7333,
											"end": 8187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7333,
											"end": 8187,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "348"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "350"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "348"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "350"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "349"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "350"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "349"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "350"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "351"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "352"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "351"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "308"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "352"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "354"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "351"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "354"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 142,
											"end": 276,
											"name": "tag",
											"source": -1,
											"value": "357"
										},
										{
											"begin": 142,
											"end": 276,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 220,
											"end": 233,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 220,
											"end": 233,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 238,
											"end": 271,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "160"
										},
										{
											"begin": 220,
											"end": 233,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 238,
											"end": 271,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "360"
										},
										{
											"begin": 238,
											"end": 271,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 301,
											"end": 1008,
											"name": "tag",
											"source": -1,
											"value": "361"
										},
										{
											"begin": 301,
											"end": 1008,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 301,
											"end": 1008,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 421,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 411,
											"end": 415,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 403,
											"end": 409,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 399,
											"end": 416,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 395,
											"end": 422,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 385,
											"end": 387,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "363"
										},
										{
											"begin": 385,
											"end": 387,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 426,
											"end": 438,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 385,
											"end": 387,
											"name": "tag",
											"source": -1,
											"value": "363"
										},
										{
											"begin": 385,
											"end": 387,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 473,
											"end": 479,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 460,
											"end": 480,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 27217,
											"end": 27235,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27209,
											"end": 27215,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27206,
											"end": 27236,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 27203,
											"end": 27205,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 27203,
											"end": 27205,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "364"
										},
										{
											"begin": 27203,
											"end": 27205,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 27239,
											"end": 27251,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 27203,
											"end": 27205,
											"name": "tag",
											"source": -1,
											"value": "364"
										},
										{
											"begin": 27203,
											"end": 27205,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 27284,
											"end": 27288,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 27284,
											"end": 27288,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 27276,
											"end": 27282,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 27272,
											"end": 27289,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 495,
											"end": 575,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "365"
										},
										{
											"begin": 27284,
											"end": 27288,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 27272,
											"end": 27289,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 27337,
											"end": 27352,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 495,
											"end": 575,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "366"
										},
										{
											"begin": 495,
											"end": 575,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 495,
											"end": 575,
											"name": "tag",
											"source": -1,
											"value": "365"
										},
										{
											"begin": 495,
											"end": 575,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 603,
											"end": 624,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 603,
											"end": 624,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 603,
											"end": 624,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 486,
											"end": 575,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 660,
											"end": 674,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 660,
											"end": 674,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 660,
											"end": 674,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 635,
											"end": 652,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 635,
											"end": 652,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 635,
											"end": 652,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 740,
											"end": 767,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 740,
											"end": 767,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 740,
											"end": 767,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 740,
											"end": 767,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 740,
											"end": 767,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 737,
											"end": 773,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 734,
											"end": 736,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 734,
											"end": 736,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "367"
										},
										{
											"begin": 734,
											"end": 736,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 786,
											"end": 787,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 787,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 776,
											"end": 788,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 734,
											"end": 736,
											"name": "tag",
											"source": -1,
											"value": "367"
										},
										{
											"begin": 734,
											"end": 736,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 811,
											"end": 812,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 812,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 802,
											"end": 812,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 796,
											"end": 1002,
											"name": "tag",
											"source": -1,
											"value": "368"
										},
										{
											"begin": 796,
											"end": 1002,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 818,
											"end": 819,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 815,
											"end": 828,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 796,
											"end": 1002,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 796,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "343"
										},
										{
											"begin": 796,
											"end": 1002,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "371"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "360"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "371"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 889,
											"end": 939,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 889,
											"end": 939,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 843,
											"end": 844,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 836,
											"end": 845,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 836,
											"end": 845,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 836,
											"end": 845,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 836,
											"end": 845,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 836,
											"end": 845,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 953,
											"end": 967,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 953,
											"end": 967,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 953,
											"end": 967,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 953,
											"end": 967,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 981,
											"end": 995,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 981,
											"end": 995,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 796,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "368"
										},
										{
											"begin": 796,
											"end": 1002,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1076,
											"end": 1447,
											"name": "tag",
											"source": -1,
											"value": "372"
										},
										{
											"begin": 1076,
											"end": 1447,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1076,
											"end": 1447,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1076,
											"end": 1447,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1225,
											"end": 1228,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1218,
											"end": 1222,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 1210,
											"end": 1216,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1206,
											"end": 1223,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1202,
											"end": 1229,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 1192,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "374"
										},
										{
											"begin": 1192,
											"end": 1194,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1233,
											"end": 1245,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1192,
											"end": 1194,
											"name": "tag",
											"source": -1,
											"value": "374"
										},
										{
											"begin": 1192,
											"end": 1194,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 1283,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 1283,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 1303,
											"end": 1321,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1291,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "375"
										},
										{
											"begin": 1289,
											"end": 1291,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1325,
											"end": 1337,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1291,
											"name": "tag",
											"source": -1,
											"value": "375"
										},
										{
											"begin": 1289,
											"end": 1291,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1369,
											"end": 1373,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1361,
											"end": 1367,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1357,
											"end": 1374,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1345,
											"end": 1374,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1345,
											"end": 1374,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1420,
											"end": 1423,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1369,
											"end": 1373,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1369,
											"end": 1373,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1404,
											"end": 1410,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1400,
											"end": 1417,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1361,
											"end": 1367,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1386,
											"end": 1418,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1386,
											"end": 1418,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1383,
											"end": 1424,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 1380,
											"end": 1382,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 1380,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "376"
										},
										{
											"begin": 1380,
											"end": 1382,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 1437,
											"end": 1438,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1437,
											"end": 1438,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1427,
											"end": 1439,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1380,
											"end": 1382,
											"name": "tag",
											"source": -1,
											"value": "376"
										},
										{
											"begin": 1380,
											"end": 1382,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1185,
											"end": 1447,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1185,
											"end": 1447,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1185,
											"end": 1447,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1185,
											"end": 1447,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1185,
											"end": 1447,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1185,
											"end": 1447,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 1455,
											"end": 1579,
											"name": "tag",
											"source": -1,
											"value": "377"
										},
										{
											"begin": 1455,
											"end": 1579,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1519,
											"end": 1539,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1519,
											"end": 1539,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 1544,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "160"
										},
										{
											"begin": 1519,
											"end": 1539,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1544,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "380"
										},
										{
											"begin": 1544,
											"end": 1574,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 1586,
											"end": 1714,
											"name": "tag",
											"source": -1,
											"value": "381"
										},
										{
											"begin": 1586,
											"end": 1714,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1661,
											"end": 1674,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1661,
											"end": 1674,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 1679,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "160"
										},
										{
											"begin": 1661,
											"end": 1674,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1679,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "380"
										},
										{
											"begin": 1679,
											"end": 1709,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 1862,
											"end": 2030,
											"name": "tag",
											"source": -1,
											"value": "384"
										},
										{
											"begin": 1862,
											"end": 2030,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1948,
											"end": 1968,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1948,
											"end": 1968,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 32361,
											"end": 32362,
											"name": "PUSH",
											"source": -1,
											"value": "5"
										},
										{
											"begin": 32351,
											"end": 32363,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 32351,
											"end": 32363,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 32341,
											"end": 32343,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "160"
										},
										{
											"begin": 32341,
											"end": 32343,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 32377,
											"end": 32378,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 32377,
											"end": 32378,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 32367,
											"end": 32379,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2037,
											"end": 2201,
											"name": "tag",
											"source": -1,
											"value": "387"
										},
										{
											"begin": 2037,
											"end": 2201,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2130,
											"end": 2143,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2130,
											"end": 2143,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 32477,
											"end": 32478,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": 32467,
											"end": 32479,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 32467,
											"end": 32479,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 32457,
											"end": 32459,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "160"
										},
										{
											"begin": 32457,
											"end": 32459,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 32493,
											"end": 32494,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 32493,
											"end": 32494,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 32483,
											"end": 32495,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2348,
											"end": 2790,
											"name": "tag",
											"source": -1,
											"value": "390"
										},
										{
											"begin": 2348,
											"end": 2790,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2348,
											"end": 2790,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2453,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2447,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2441,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2431,
											"end": 2448,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2427,
											"end": 2454,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 2417,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "392"
										},
										{
											"begin": 2417,
											"end": 2419,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2458,
											"end": 2470,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2417,
											"end": 2419,
											"name": "tag",
											"source": -1,
											"value": "392"
										},
										{
											"begin": 2417,
											"end": 2419,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2505,
											"end": 2511,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2492,
											"end": 2512,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 2527,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "393"
										},
										{
											"begin": 2542,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "394"
										},
										{
											"begin": 2584,
											"end": 2590,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2542,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "395"
										},
										{
											"begin": 2542,
											"end": 2591,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 2542,
											"end": 2591,
											"name": "tag",
											"source": -1,
											"value": "394"
										},
										{
											"begin": 2542,
											"end": 2591,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2527,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "366"
										},
										{
											"begin": 2527,
											"end": 2592,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 2527,
											"end": 2592,
											"name": "tag",
											"source": -1,
											"value": "393"
										},
										{
											"begin": 2527,
											"end": 2592,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2518,
											"end": 2592,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2518,
											"end": 2592,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2612,
											"end": 2618,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2605,
											"end": 2610,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2598,
											"end": 2619,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2716,
											"end": 2719,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2648,
											"end": 2652,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2707,
											"end": 2713,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2640,
											"end": 2646,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 2698,
											"end": 2714,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2698,
											"end": 2714,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2695,
											"end": 2720,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "396"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2723,
											"end": 2735,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "tag",
											"source": -1,
											"value": "396"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 30456,
											"end": 30462,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2648,
											"end": 2652,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2640,
											"end": 2646,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2636,
											"end": 2653,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2648,
											"end": 2652,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2674,
											"end": 2679,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2670,
											"end": 2686,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30433,
											"end": 30463,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 30512,
											"end": 30513,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 30494,
											"end": 30510,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 30494,
											"end": 30510,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 30494,
											"end": 30510,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2648,
											"end": 2652,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 30494,
											"end": 30510,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30487,
											"end": 30514,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2674,
											"end": 2679,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 2410,
											"end": 2790,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2410,
											"end": 2790,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 5098,
											"end": 5230,
											"name": "tag",
											"source": -1,
											"value": "397"
										},
										{
											"begin": 5098,
											"end": 5230,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5175,
											"end": 5188,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5175,
											"end": 5188,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 30188,
											"end": 30210,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30177,
											"end": 30211,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30177,
											"end": 30211,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 32813,
											"end": 32847,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 32813,
											"end": 32847,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 32803,
											"end": 32805,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "160"
										},
										{
											"begin": 32803,
											"end": 32805,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 32861,
											"end": 32862,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 32861,
											"end": 32862,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 32851,
											"end": 32863,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5237,
											"end": 5478,
											"name": "tag",
											"source": -1,
											"value": "28"
										},
										{
											"begin": 5237,
											"end": 5478,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5237,
											"end": 5478,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5343,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 5329,
											"end": 5338,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 5320,
											"end": 5327,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 5316,
											"end": 5339,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5312,
											"end": 5344,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 5309,
											"end": 5311,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5309,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "401"
										},
										{
											"begin": 5309,
											"end": 5311,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 5347,
											"end": 5359,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5309,
											"end": 5311,
											"name": "tag",
											"source": -1,
											"value": "401"
										},
										{
											"begin": 5309,
											"end": 5311,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "224"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "360"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 5485,
											"end": 5748,
											"name": "tag",
											"source": -1,
											"value": "237"
										},
										{
											"begin": 5485,
											"end": 5748,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5485,
											"end": 5748,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5602,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 5588,
											"end": 5597,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 5579,
											"end": 5586,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 5575,
											"end": 5598,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5571,
											"end": 5603,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 5568,
											"end": 5570,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5568,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "404"
										},
										{
											"begin": 5568,
											"end": 5570,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 5606,
											"end": 5618,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5568,
											"end": 5570,
											"name": "tag",
											"source": -1,
											"value": "404"
										},
										{
											"begin": 5568,
											"end": 5570,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 226,
											"end": 232,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 220,
											"end": 233,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 238,
											"end": 271,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "224"
										},
										{
											"begin": 265,
											"end": 270,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 238,
											"end": 271,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "360"
										},
										{
											"begin": 238,
											"end": 271,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 5755,
											"end": 7180,
											"name": "tag",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 5755,
											"end": 7180,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5755,
											"end": 7180,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5755,
											"end": 7180,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5755,
											"end": 7180,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5755,
											"end": 7180,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5755,
											"end": 7180,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5755,
											"end": 7180,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5755,
											"end": 7180,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5755,
											"end": 7180,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 6047,
											"end": 6050,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": 6035,
											"end": 6044,
											"name": "DUP10",
											"source": -1
										},
										{
											"begin": 6026,
											"end": 6033,
											"name": "DUP12",
											"source": -1
										},
										{
											"begin": 6022,
											"end": 6045,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6018,
											"end": 6051,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 6015,
											"end": 6017,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 6015,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "407"
										},
										{
											"begin": 6015,
											"end": 6017,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 6054,
											"end": 6066,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 6015,
											"end": 6017,
											"name": "tag",
											"source": -1,
											"value": "407"
										},
										{
											"begin": 6015,
											"end": 6017,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "408"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "360"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "408"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6106,
											"end": 6169,
											"name": "SWAP8",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6206,
											"end": 6208,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 6245,
											"end": 6267,
											"name": "DUP10",
											"source": -1
										},
										{
											"begin": 6245,
											"end": 6267,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "409"
										},
										{
											"begin": 72,
											"end": 92,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "360"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "409"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6214,
											"end": 6277,
											"name": "SWAP7",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6342,
											"end": 6344,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 6327,
											"end": 6345,
											"name": "DUP10",
											"source": -1
										},
										{
											"begin": 6327,
											"end": 6345,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6314,
											"end": 6346,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 6366,
											"end": 6384,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6355,
											"end": 6385,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 6355,
											"end": 6385,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 6355,
											"end": 6385,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 6352,
											"end": 6354,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 6352,
											"end": 6354,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "410"
										},
										{
											"begin": 6352,
											"end": 6354,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 6388,
											"end": 6400,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 6352,
											"end": 6354,
											"name": "tag",
											"source": -1,
											"value": "410"
										},
										{
											"begin": 6352,
											"end": 6354,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6418,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "411"
										},
										{
											"begin": 6473,
											"end": 6480,
											"name": "DUP13",
											"source": -1
										},
										{
											"begin": 6464,
											"end": 6470,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 6453,
											"end": 6462,
											"name": "DUP14",
											"source": -1
										},
										{
											"begin": 6449,
											"end": 6471,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6418,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "390"
										},
										{
											"begin": 6418,
											"end": 6481,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 6418,
											"end": 6481,
											"name": "tag",
											"source": -1,
											"value": "411"
										},
										{
											"begin": 6418,
											"end": 6481,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6408,
											"end": 6481,
											"name": "SWAP8",
											"source": -1
										},
										{
											"begin": 6408,
											"end": 6481,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6518,
											"end": 6520,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 6561,
											"end": 6570,
											"name": "DUP12",
											"source": -1
										},
										{
											"begin": 6557,
											"end": 6579,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4887,
											"end": 4907,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 6526,
											"end": 6589,
											"name": "SWAP7",
											"source": -1
										},
										{
											"begin": 6526,
											"end": 6589,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "412"
										},
										{
											"begin": 6687,
											"end": 6694,
											"name": "DUP13",
											"source": -1
										},
										{
											"begin": 6626,
											"end": 6629,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 6667,
											"end": 6676,
											"name": "DUP14",
											"source": -1
										},
										{
											"begin": 6663,
											"end": 6685,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "377"
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "tag",
											"source": -1,
											"value": "412"
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6635,
											"end": 6695,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 6635,
											"end": 6695,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6760,
											"end": 6763,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "DUP12",
											"source": -1
										},
										{
											"begin": 6745,
											"end": 6764,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6732,
											"end": 6765,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 6718,
											"end": 6765,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 6718,
											"end": 6765,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6366,
											"end": 6384,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 6777,
											"end": 6783,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 6771,
											"end": 6773,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 6771,
											"end": 6773,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "413"
										},
										{
											"begin": 6771,
											"end": 6773,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 6807,
											"end": 6819,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 6771,
											"end": 6773,
											"name": "tag",
											"source": -1,
											"value": "413"
										},
										{
											"begin": 6771,
											"end": 6773,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6837,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "414"
										},
										{
											"begin": 6907,
											"end": 6914,
											"name": "DUP13",
											"source": -1
										},
										{
											"begin": 6898,
											"end": 6904,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 6887,
											"end": 6896,
											"name": "DUP14",
											"source": -1
										},
										{
											"begin": 6883,
											"end": 6905,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6837,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "361"
										},
										{
											"begin": 6837,
											"end": 6915,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 6837,
											"end": 6915,
											"name": "tag",
											"source": -1,
											"value": "414"
										},
										{
											"begin": 6837,
											"end": 6915,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6827,
											"end": 6915,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 6827,
											"end": 6915,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6980,
											"end": 6983,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": 6969,
											"end": 6978,
											"name": "DUP12",
											"source": -1
										},
										{
											"begin": 6965,
											"end": 6984,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6952,
											"end": 6985,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 6938,
											"end": 6985,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 6938,
											"end": 6985,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6366,
											"end": 6384,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 6997,
											"end": 7003,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 6994,
											"end": 7024,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 6991,
											"end": 6993,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 6991,
											"end": 6993,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "415"
										},
										{
											"begin": 6991,
											"end": 6993,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 7027,
											"end": 7039,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 6991,
											"end": 6993,
											"name": "tag",
											"source": -1,
											"value": "415"
										},
										{
											"begin": 6991,
											"end": 6993,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6991,
											"end": 6993,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7065,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "416"
										},
										{
											"begin": 7156,
											"end": 7163,
											"name": "DUP12",
											"source": -1
										},
										{
											"begin": 7147,
											"end": 7153,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 7136,
											"end": 7145,
											"name": "DUP13",
											"source": -1
										},
										{
											"begin": 7132,
											"end": 7154,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7065,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "372"
										},
										{
											"begin": 7065,
											"end": 7164,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 7065,
											"end": 7164,
											"name": "tag",
											"source": -1,
											"value": "416"
										},
										{
											"begin": 7065,
											"end": 7164,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6009,
											"end": 7180,
											"name": "SWAP10",
											"source": -1
										},
										{
											"begin": 6009,
											"end": 7180,
											"name": "SWAP13",
											"source": -1
										},
										{
											"begin": 6009,
											"end": 7180,
											"name": "SWAP9",
											"source": -1
										},
										{
											"begin": 6009,
											"end": 7180,
											"name": "SWAP12",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6009,
											"end": 7180,
											"name": "SWAP7",
											"source": -1
										},
										{
											"begin": 6009,
											"end": 7180,
											"name": "SWAP10",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6009,
											"end": 7180,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 6009,
											"end": 7180,
											"name": "SWAP8",
											"source": -1
										},
										{
											"begin": 6009,
											"end": 7180,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 6009,
											"end": 7180,
											"name": "SWAP7",
											"source": -1
										},
										{
											"begin": 6009,
											"end": 7180,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 6009,
											"end": 7180,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 7047,
											"end": 7164,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6009,
											"end": 7180,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7187,
											"end": 7547,
											"name": "tag",
											"source": -1,
											"value": "45"
										},
										{
											"begin": 7187,
											"end": 7547,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7187,
											"end": 7547,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7187,
											"end": 7547,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 7305,
											"end": 7307,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 7293,
											"end": 7302,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 7284,
											"end": 7291,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 7280,
											"end": 7303,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7276,
											"end": 7308,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 7273,
											"end": 7275,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 7273,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "418"
										},
										{
											"begin": 7273,
											"end": 7275,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 7311,
											"end": 7323,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 7273,
											"end": 7275,
											"name": "tag",
											"source": -1,
											"value": "418"
										},
										{
											"begin": 7273,
											"end": 7275,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "419"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "360"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "419"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7363,
											"end": 7426,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7463,
											"end": 7465,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 7499,
											"end": 7521,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 7499,
											"end": 7521,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1519,
											"end": 1539,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 1544,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "420"
										},
										{
											"begin": 1519,
											"end": 1539,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1544,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "380"
										},
										{
											"begin": 1544,
											"end": 1574,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 1544,
											"end": 1574,
											"name": "tag",
											"source": -1,
											"value": "420"
										},
										{
											"begin": 1544,
											"end": 1574,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7471,
											"end": 7531,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 7471,
											"end": 7531,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 7471,
											"end": 7531,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7471,
											"end": 7531,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7267,
											"end": 7547,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 7267,
											"end": 7547,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7267,
											"end": 7547,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 7267,
											"end": 7547,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 7267,
											"end": 7547,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7267,
											"end": 7547,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7554,
											"end": 7920,
											"name": "tag",
											"source": -1,
											"value": "39"
										},
										{
											"begin": 7554,
											"end": 7920,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7554,
											"end": 7920,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7554,
											"end": 7920,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 7675,
											"end": 7677,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 7663,
											"end": 7672,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 7654,
											"end": 7661,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 7650,
											"end": 7673,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7646,
											"end": 7678,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 7643,
											"end": 7645,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 7643,
											"end": 7645,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "422"
										},
										{
											"begin": 7643,
											"end": 7645,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 7681,
											"end": 7693,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 7643,
											"end": 7645,
											"name": "tag",
											"source": -1,
											"value": "422"
										},
										{
											"begin": 7643,
											"end": 7645,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "423"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "360"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "423"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7733,
											"end": 7796,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 7833,
											"end": 7835,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 7872,
											"end": 7894,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 7872,
											"end": 7894,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 7872,
											"end": 7894,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 7872,
											"end": 7894,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4887,
											"end": 4907,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 4887,
											"end": 4907,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7637,
											"end": 7920,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7927,
											"end": 8702,
											"name": "tag",
											"source": -1,
											"value": "76"
										},
										{
											"begin": 7927,
											"end": 8702,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7927,
											"end": 8702,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7927,
											"end": 8702,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 7927,
											"end": 8702,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7927,
											"end": 8702,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 7927,
											"end": 8702,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8115,
											"end": 8118,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 8103,
											"end": 8112,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 8094,
											"end": 8101,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 8090,
											"end": 8113,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8086,
											"end": 8119,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 8083,
											"end": 8085,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8083,
											"end": 8085,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "425"
										},
										{
											"begin": 8083,
											"end": 8085,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 8122,
											"end": 8134,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8083,
											"end": 8085,
											"name": "tag",
											"source": -1,
											"value": "425"
										},
										{
											"begin": 8083,
											"end": 8085,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "426"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "360"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "426"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8174,
											"end": 8237,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8274,
											"end": 8276,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 8313,
											"end": 8335,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 8313,
											"end": 8335,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4887,
											"end": 4907,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 4887,
											"end": 4907,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8382,
											"end": 8384,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 8421,
											"end": 8443,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 8421,
											"end": 8443,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "427"
										},
										{
											"begin": 72,
											"end": 92,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "360"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "427"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8390,
											"end": 8453,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8508,
											"end": 8580,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "428"
										},
										{
											"begin": 8572,
											"end": 8579,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 8490,
											"end": 8492,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 8548,
											"end": 8570,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 8548,
											"end": 8570,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8508,
											"end": 8580,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "384"
										},
										{
											"begin": 8508,
											"end": 8580,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 8508,
											"end": 8580,
											"name": "tag",
											"source": -1,
											"value": "428"
										},
										{
											"begin": 8508,
											"end": 8580,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8498,
											"end": 8580,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 8498,
											"end": 8580,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8617,
											"end": 8620,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 8658,
											"end": 8667,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 8654,
											"end": 8676,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1519,
											"end": 1539,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 1544,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "429"
										},
										{
											"begin": 1568,
											"end": 1573,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1544,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "380"
										},
										{
											"begin": 1544,
											"end": 1574,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 1544,
											"end": 1574,
											"name": "tag",
											"source": -1,
											"value": "429"
										},
										{
											"begin": 1544,
											"end": 1574,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8626,
											"end": 8686,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 8626,
											"end": 8686,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 8626,
											"end": 8686,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8626,
											"end": 8686,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8077,
											"end": 8702,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 8077,
											"end": 8702,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 8077,
											"end": 8702,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8077,
											"end": 8702,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 8077,
											"end": 8702,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 8077,
											"end": 8702,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 8077,
											"end": 8702,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 8077,
											"end": 8702,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8077,
											"end": 8702,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 8709,
											"end": 9347,
											"name": "tag",
											"source": -1,
											"value": "57"
										},
										{
											"begin": 8709,
											"end": 9347,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8709,
											"end": 9347,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8709,
											"end": 9347,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 8880,
											"end": 8882,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 8868,
											"end": 8877,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 8859,
											"end": 8866,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 8855,
											"end": 8878,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8851,
											"end": 8883,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 8848,
											"end": 8850,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8848,
											"end": 8850,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "431"
										},
										{
											"begin": 8848,
											"end": 8850,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 8886,
											"end": 8898,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8848,
											"end": 8850,
											"name": "tag",
											"source": -1,
											"value": "431"
										},
										{
											"begin": 8848,
											"end": 8850,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8944,
											"end": 8961,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 8931,
											"end": 8962,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 8974,
											"end": 8980,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 8971,
											"end": 9001,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8968,
											"end": 8970,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8968,
											"end": 8970,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "432"
										},
										{
											"begin": 8968,
											"end": 8970,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 9004,
											"end": 9016,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8968,
											"end": 8970,
											"name": "tag",
											"source": -1,
											"value": "432"
										},
										{
											"begin": 8968,
											"end": 8970,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 9034,
											"end": 9112,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "433"
										},
										{
											"begin": 9104,
											"end": 9111,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 9095,
											"end": 9101,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 9084,
											"end": 9093,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 9080,
											"end": 9102,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9034,
											"end": 9112,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "361"
										},
										{
											"begin": 9034,
											"end": 9112,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 9034,
											"end": 9112,
											"name": "tag",
											"source": -1,
											"value": "433"
										},
										{
											"begin": 9034,
											"end": 9112,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 9024,
											"end": 9112,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 9024,
											"end": 9112,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9177,
											"end": 9179,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 9166,
											"end": 9175,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 9162,
											"end": 9180,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9149,
											"end": 9181,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 9135,
											"end": 9181,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 9135,
											"end": 9181,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 9193,
											"end": 9199,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 9190,
											"end": 9220,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 9187,
											"end": 9189,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 9187,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "434"
										},
										{
											"begin": 9187,
											"end": 9189,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 9223,
											"end": 9235,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 9187,
											"end": 9189,
											"name": "tag",
											"source": -1,
											"value": "434"
										},
										{
											"begin": 9187,
											"end": 9189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 9187,
											"end": 9189,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9253,
											"end": 9331,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "435"
										},
										{
											"begin": 9323,
											"end": 9330,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 9314,
											"end": 9320,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 9303,
											"end": 9312,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 9299,
											"end": 9321,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9253,
											"end": 9331,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "361"
										},
										{
											"begin": 9253,
											"end": 9331,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 9253,
											"end": 9331,
											"name": "tag",
											"source": -1,
											"value": "435"
										},
										{
											"begin": 9253,
											"end": 9331,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 9243,
											"end": 9331,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 9243,
											"end": 9331,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9243,
											"end": 9331,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8842,
											"end": 9347,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 8842,
											"end": 9347,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8842,
											"end": 9347,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 8842,
											"end": 9347,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 8842,
											"end": 9347,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8842,
											"end": 9347,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 9354,
											"end": 9633,
											"name": "tag",
											"source": -1,
											"value": "109"
										},
										{
											"begin": 9354,
											"end": 9633,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 9354,
											"end": 9633,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9477,
											"end": 9479,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 9465,
											"end": 9474,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 9456,
											"end": 9463,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 9452,
											"end": 9475,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9448,
											"end": 9480,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 9445,
											"end": 9447,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 9445,
											"end": 9447,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "437"
										},
										{
											"begin": 9445,
											"end": 9447,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 9483,
											"end": 9495,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 9445,
											"end": 9447,
											"name": "tag",
											"source": -1,
											"value": "437"
										},
										{
											"begin": 9445,
											"end": 9447,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 9545,
											"end": 9617,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "224"
										},
										{
											"begin": 9609,
											"end": 9616,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 9585,
											"end": 9607,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 9545,
											"end": 9617,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "384"
										},
										{
											"begin": 9545,
											"end": 9617,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 9640,
											"end": 10002,
											"name": "tag",
											"source": -1,
											"value": "230"
										},
										{
											"begin": 9640,
											"end": 10002,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 9640,
											"end": 10002,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9765,
											"end": 9767,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 9753,
											"end": 9762,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 9744,
											"end": 9751,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 9740,
											"end": 9763,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9736,
											"end": 9768,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 9733,
											"end": 9735,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 9733,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "440"
										},
										{
											"begin": 9733,
											"end": 9735,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 9771,
											"end": 9783,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 9733,
											"end": 9735,
											"name": "tag",
											"source": -1,
											"value": "440"
										},
										{
											"begin": 9733,
											"end": 9735,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 9822,
											"end": 9839,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 9816,
											"end": 9840,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 9860,
											"end": 9878,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9852,
											"end": 9858,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 9849,
											"end": 9879,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 9846,
											"end": 9848,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 9846,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "441"
										},
										{
											"begin": 9846,
											"end": 9848,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 9882,
											"end": 9894,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 9846,
											"end": 9848,
											"name": "tag",
											"source": -1,
											"value": "441"
										},
										{
											"begin": 9846,
											"end": 9848,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 9954,
											"end": 9976,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 9954,
											"end": 9976,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2905,
											"end": 2909,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 2893,
											"end": 2910,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2893,
											"end": 2910,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2889,
											"end": 2916,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 2879,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "442"
										},
										{
											"begin": 2879,
											"end": 2881,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2920,
											"end": 2932,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2879,
											"end": 2881,
											"name": "tag",
											"source": -1,
											"value": "442"
										},
										{
											"begin": 2879,
											"end": 2881,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2960,
											"end": 2966,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2954,
											"end": 2967,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 2982,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "443"
										},
										{
											"begin": 2997,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "394"
										},
										{
											"begin": 3039,
											"end": 3045,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2997,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "395"
										},
										{
											"begin": 2997,
											"end": 3046,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 2982,
											"end": 3047,
											"name": "tag",
											"source": -1,
											"value": "443"
										},
										{
											"begin": 2982,
											"end": 3047,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3067,
											"end": 3073,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3060,
											"end": 3065,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3053,
											"end": 3074,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3171,
											"end": 3174,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 9765,
											"end": 9767,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3162,
											"end": 3168,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3101,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 3153,
											"end": 3169,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3153,
											"end": 3169,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3150,
											"end": 3175,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 3147,
											"end": 3149,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3147,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "445"
										},
										{
											"begin": 3147,
											"end": 3149,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3178,
											"end": 3190,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3147,
											"end": 3149,
											"name": "tag",
											"source": -1,
											"value": "445"
										},
										{
											"begin": 3147,
											"end": 3149,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3198,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "446"
										},
										{
											"begin": 3230,
											"end": 3236,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 9765,
											"end": 9767,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3129,
											"end": 3134,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3125,
											"end": 3141,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9765,
											"end": 9767,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3101,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 3091,
											"end": 3108,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3198,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "447"
										},
										{
											"begin": 3198,
											"end": 3237,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 3198,
											"end": 3237,
											"name": "tag",
											"source": -1,
											"value": "446"
										},
										{
											"begin": 3198,
											"end": 3237,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 9902,
											"end": 9986,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 9727,
											"end": 10002,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9727,
											"end": 10002,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 10009,
											"end": 10331,
											"name": "tag",
											"source": -1,
											"value": "315"
										},
										{
											"begin": 10009,
											"end": 10331,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 10009,
											"end": 10331,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10153,
											"end": 10156,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 10153,
											"end": 10156,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 10141,
											"end": 10150,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 10132,
											"end": 10139,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 10128,
											"end": 10151,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10124,
											"end": 10157,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 10121,
											"end": 10123,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 10121,
											"end": 10123,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "449"
										},
										{
											"begin": 10121,
											"end": 10123,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 10160,
											"end": 10172,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 10121,
											"end": 10123,
											"name": "tag",
											"source": -1,
											"value": "449"
										},
										{
											"begin": 10121,
											"end": 10123,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3473,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "450"
										},
										{
											"begin": 10153,
											"end": 10156,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3473,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "366"
										},
										{
											"begin": 3473,
											"end": 3495,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 3473,
											"end": 3495,
											"name": "tag",
											"source": -1,
											"value": "450"
										},
										{
											"begin": 3473,
											"end": 3495,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3464,
											"end": 3495,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3464,
											"end": 3495,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 226,
											"end": 232,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 220,
											"end": 233,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 238,
											"end": 271,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "451"
										},
										{
											"begin": 265,
											"end": 270,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 238,
											"end": 271,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "360"
										},
										{
											"begin": 238,
											"end": 271,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 238,
											"end": 271,
											"name": "tag",
											"source": -1,
											"value": "451"
										},
										{
											"begin": 238,
											"end": 271,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3554,
											"end": 3640,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3554,
											"end": 3640,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3707,
											"end": 3709,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3772,
											"end": 3794,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3772,
											"end": 3794,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 220,
											"end": 233,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 238,
											"end": 271,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "452"
										},
										{
											"begin": 220,
											"end": 233,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 238,
											"end": 271,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "360"
										},
										{
											"begin": 238,
											"end": 271,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 238,
											"end": 271,
											"name": "tag",
											"source": -1,
											"value": "452"
										},
										{
											"begin": 238,
											"end": 271,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3740,
											"end": 3800,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3707,
											"end": 3709,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3726,
											"end": 3731,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3722,
											"end": 3738,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3715,
											"end": 3801,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3715,
											"end": 3801,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3868,
											"end": 3870,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 3937,
											"end": 3946,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3933,
											"end": 3955,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1799,
											"end": 1812,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 3868,
											"end": 3870,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 3887,
											"end": 3892,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3876,
											"end": 3962,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4027,
											"end": 4029,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 4096,
											"end": 4105,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 4092,
											"end": 4114,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5035,
											"end": 5048,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 4027,
											"end": 4029,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 4046,
											"end": 4051,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4042,
											"end": 4058,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4035,
											"end": 4121,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4223,
											"end": 4298,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "453"
										},
										{
											"begin": 4294,
											"end": 4297,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 4189,
											"end": 4192,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 4274,
											"end": 4283,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 4270,
											"end": 4292,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4223,
											"end": 4298,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "387"
										},
										{
											"begin": 4223,
											"end": 4298,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 4223,
											"end": 4298,
											"name": "tag",
											"source": -1,
											"value": "453"
										},
										{
											"begin": 4223,
											"end": 4298,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4189,
											"end": 4192,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 4209,
											"end": 4214,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4205,
											"end": 4221,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4198,
											"end": 4299,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4366,
											"end": 4369,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 4436,
											"end": 4445,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 4432,
											"end": 4454,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5035,
											"end": 5048,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 4366,
											"end": 4369,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 4386,
											"end": 4391,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4382,
											"end": 4398,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4375,
											"end": 4461,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4565,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "454"
										},
										{
											"begin": 4621,
											"end": 4624,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 4531,
											"end": 4534,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": 4601,
											"end": 4610,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 4597,
											"end": 4619,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4565,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "357"
										},
										{
											"begin": 4565,
											"end": 4625,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 4565,
											"end": 4625,
											"name": "tag",
											"source": -1,
											"value": "454"
										},
										{
											"begin": 4565,
											"end": 4625,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4531,
											"end": 4534,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": 4551,
											"end": 4556,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4547,
											"end": 4563,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4540,
											"end": 4626,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4734,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "455"
										},
										{
											"begin": 4787,
											"end": 4790,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 4700,
											"end": 4703,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": 4767,
											"end": 4776,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 4763,
											"end": 4785,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4734,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "381"
										},
										{
											"begin": 4734,
											"end": 4791,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 4734,
											"end": 4791,
											"name": "tag",
											"source": -1,
											"value": "455"
										},
										{
											"begin": 4734,
											"end": 4791,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4700,
											"end": 4703,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": 4716,
											"end": 4732,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4716,
											"end": 4732,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4709,
											"end": 4792,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4720,
											"end": 4725,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 10115,
											"end": 10331,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10115,
											"end": 10331,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 10338,
											"end": 10601,
											"name": "tag",
											"source": -1,
											"value": "301"
										},
										{
											"begin": 10338,
											"end": 10601,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 10338,
											"end": 10601,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10453,
											"end": 10455,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10441,
											"end": 10450,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 10432,
											"end": 10439,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 10428,
											"end": 10451,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10424,
											"end": 10456,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 10421,
											"end": 10423,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 10421,
											"end": 10423,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "457"
										},
										{
											"begin": 10421,
											"end": 10423,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 10459,
											"end": 10471,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 10421,
											"end": 10423,
											"name": "tag",
											"source": -1,
											"value": "457"
										},
										{
											"begin": 10421,
											"end": 10423,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5035,
											"end": 5048,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 5035,
											"end": 5048,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 10415,
											"end": 10601,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10415,
											"end": 10601,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 10608,
											"end": 11411,
											"name": "tag",
											"source": -1,
											"value": "290"
										},
										{
											"begin": 10608,
											"end": 11411,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 10608,
											"end": 11411,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10608,
											"end": 11411,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 10608,
											"end": 11411,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10608,
											"end": 11411,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 10608,
											"end": 11411,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10788,
											"end": 10791,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 10776,
											"end": 10785,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 10767,
											"end": 10774,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 10763,
											"end": 10786,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10759,
											"end": 10792,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 10756,
											"end": 10758,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 10756,
											"end": 10758,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "459"
										},
										{
											"begin": 10756,
											"end": 10758,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 10795,
											"end": 10807,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 10756,
											"end": 10758,
											"name": "tag",
											"source": -1,
											"value": "459"
										},
										{
											"begin": 10756,
											"end": 10758,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 10857,
											"end": 10920,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "460"
										},
										{
											"begin": 10912,
											"end": 10919,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 10888,
											"end": 10910,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 10857,
											"end": 10920,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "397"
										},
										{
											"begin": 10857,
											"end": 10920,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 10857,
											"end": 10920,
											"name": "tag",
											"source": -1,
											"value": "460"
										},
										{
											"begin": 10857,
											"end": 10920,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 10847,
											"end": 10920,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 10847,
											"end": 10920,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10957,
											"end": 10959,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 11010,
											"end": 11019,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 11006,
											"end": 11028,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2285,
											"end": 2298,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 10965,
											"end": 11038,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 10965,
											"end": 11038,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11075,
											"end": 11077,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 11129,
											"end": 11138,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 11125,
											"end": 11147,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5035,
											"end": 5048,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 11083,
											"end": 11157,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 11083,
											"end": 11157,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11194,
											"end": 11196,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 11248,
											"end": 11257,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11266,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5035,
											"end": 5048,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 11202,
											"end": 11276,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 11202,
											"end": 11276,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11332,
											"end": 11395,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "461"
										},
										{
											"begin": 11387,
											"end": 11394,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 11313,
											"end": 11316,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 11367,
											"end": 11376,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 11363,
											"end": 11385,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11332,
											"end": 11395,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "397"
										},
										{
											"begin": 11332,
											"end": 11395,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 11332,
											"end": 11395,
											"name": "tag",
											"source": -1,
											"value": "461"
										},
										{
											"begin": 11332,
											"end": 11395,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 11322,
											"end": 11395,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 11322,
											"end": 11395,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10750,
											"end": 11411,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 10750,
											"end": 11411,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 10750,
											"end": 11411,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10750,
											"end": 11411,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 10750,
											"end": 11411,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 10750,
											"end": 11411,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 10750,
											"end": 11411,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 10750,
											"end": 11411,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10750,
											"end": 11411,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 12935,
											"end": 13029,
											"name": "tag",
											"source": -1,
											"value": "462"
										},
										{
											"begin": 12935,
											"end": 13029,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 29575,
											"end": 29588,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 29568,
											"end": 29589,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 12990,
											"end": 13024,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 12990,
											"end": 13024,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12984,
											"end": 13029,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 13471,
											"end": 13818,
											"name": "tag",
											"source": -1,
											"value": "464"
										},
										{
											"begin": 13471,
											"end": 13818,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 13471,
											"end": 13818,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 13616,
											"end": 13621,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 28329,
											"end": 28341,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 28666,
											"end": 28672,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 28661,
											"end": 28664,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 28654,
											"end": 28673,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13710,
											"end": 13762,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "466"
										},
										{
											"begin": 13755,
											"end": 13761,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 28703,
											"end": 28707,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 28698,
											"end": 28701,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 28703,
											"end": 28707,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 13736,
											"end": 13741,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 13732,
											"end": 13748,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13710,
											"end": 13762,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "447"
										},
										{
											"begin": 13710,
											"end": 13762,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 13710,
											"end": 13762,
											"name": "tag",
											"source": -1,
											"value": "466"
										},
										{
											"begin": 13710,
											"end": 13762,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 31431,
											"end": 31438,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 31415,
											"end": 31429,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 31411,
											"end": 31439,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 13774,
											"end": 13813,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 13774,
											"end": 13813,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 13774,
											"end": 13813,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 13774,
											"end": 13813,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 28703,
											"end": 28707,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 13774,
											"end": 13813,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13774,
											"end": 13813,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 13563,
											"end": 13818,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13563,
											"end": 13818,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 19374,
											"end": 19649,
											"name": "tag",
											"source": -1,
											"value": "280"
										},
										{
											"begin": 19374,
											"end": 19649,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 19374,
											"end": 19649,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 13988,
											"end": 13993,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 28329,
											"end": 28341,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 14100,
											"end": 14152,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "468"
										},
										{
											"begin": 14145,
											"end": 14151,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 14140,
											"end": 14143,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 14133,
											"end": 14137,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 14126,
											"end": 14131,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 14122,
											"end": 14138,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14100,
											"end": 14152,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "447"
										},
										{
											"begin": 14100,
											"end": 14152,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 14100,
											"end": 14152,
											"name": "tag",
											"source": -1,
											"value": "468"
										},
										{
											"begin": 14100,
											"end": 14152,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 14164,
											"end": 14180,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 14164,
											"end": 14180,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 14164,
											"end": 14180,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 14164,
											"end": 14180,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14164,
											"end": 14180,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 19510,
											"end": 19649,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19510,
											"end": 19649,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 19656,
											"end": 19878,
											"name": "tag",
											"source": -1,
											"value": "51"
										},
										{
											"begin": 19656,
											"end": 19878,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29123,
											"end": 29177,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 29123,
											"end": 29177,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 29123,
											"end": 29177,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 29123,
											"end": 29177,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 11767,
											"end": 11804,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 11767,
											"end": 11804,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 19783,
											"end": 19785,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 19768,
											"end": 19786,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 19768,
											"end": 19786,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 19754,
											"end": 19878,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 19885,
											"end": 20629,
											"name": "tag",
											"source": -1,
											"value": "31"
										},
										{
											"begin": 19885,
											"end": 20629,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29123,
											"end": 29177,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 29123,
											"end": 29177,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 29123,
											"end": 29177,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 11767,
											"end": 11804,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 11767,
											"end": 11804,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 29123,
											"end": 29177,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 29123,
											"end": 29177,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 20303,
											"end": 20305,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 20288,
											"end": 20306,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 20288,
											"end": 20306,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11767,
											"end": 11804,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 29134,
											"end": 29176,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 20340,
											"end": 20342,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 20325,
											"end": 20343,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 20325,
											"end": 20343,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 20318,
											"end": 20366,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 20318,
											"end": 20366,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 20318,
											"end": 20366,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 19885,
											"end": 20629,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 19885,
											"end": 20629,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 20380,
											"end": 20458,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "471"
										},
										{
											"begin": 20380,
											"end": 20458,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 20123,
											"end": 20142,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 20123,
											"end": 20142,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 20444,
											"end": 20450,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 20380,
											"end": 20458,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "464"
										},
										{
											"begin": 20380,
											"end": 20458,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 20380,
											"end": 20458,
											"name": "tag",
											"source": -1,
											"value": "471"
										},
										{
											"begin": 20380,
											"end": 20458,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 20537,
											"end": 20539,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 20522,
											"end": 20540,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 20522,
											"end": 20540,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 19325,
											"end": 19362,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 19325,
											"end": 19362,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 19325,
											"end": 19362,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 19325,
											"end": 19362,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29575,
											"end": 29588,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 29575,
											"end": 29588,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 29568,
											"end": 29589,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 20614,
											"end": 20617,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 20599,
											"end": 20618,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 20599,
											"end": 20618,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 20599,
											"end": 20618,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12990,
											"end": 13024,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 20372,
											"end": 20458,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 20109,
											"end": 20629,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20109,
											"end": 20629,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 20636,
											"end": 21374,
											"name": "tag",
											"source": -1,
											"value": "129"
										},
										{
											"begin": 20636,
											"end": 21374,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 20636,
											"end": 21374,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 20886,
											"end": 20889,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 20875,
											"end": 20884,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 20871,
											"end": 20890,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 27217,
											"end": 27235,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 27217,
											"end": 27235,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 29134,
											"end": 29176,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 29134,
											"end": 29176,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29134,
											"end": 29176,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29134,
											"end": 29176,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 11797,
											"end": 11802,
											"name": "DUP10",
											"source": -1
										},
										{
											"begin": 29123,
											"end": 29177,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 11774,
											"end": 11777,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 11767,
											"end": 11804,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 21051,
											"end": 21053,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 29134,
											"end": 29176,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 11797,
											"end": 11802,
											"name": "DUP10",
											"source": -1
										},
										{
											"begin": 29123,
											"end": 29177,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 21051,
											"end": 21053,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 21040,
											"end": 21049,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 21036,
											"end": 21054,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11767,
											"end": 11804,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 20886,
											"end": 20889,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 21088,
											"end": 21090,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 21077,
											"end": 21086,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 21073,
											"end": 21091,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 21066,
											"end": 21114,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 21128,
											"end": 21203,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 21128,
											"end": 21203,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14336,
											"end": 14341,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 14330,
											"end": 14342,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": 14370,
											"end": 14371,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 14370,
											"end": 14371,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 14359,
											"end": 14368,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14355,
											"end": 14372,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 14383,
											"end": 14384,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 14378,
											"end": 14626,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 14378,
											"end": 14626,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 14378,
											"end": 14626,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "474"
										},
										{
											"begin": 14378,
											"end": 14626,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 14637,
											"end": 14638,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 14632,
											"end": 15034,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 14632,
											"end": 15034,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 14632,
											"end": 15034,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "475"
										},
										{
											"begin": 14632,
											"end": 15034,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 14348,
											"end": 15034,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "473"
										},
										{
											"begin": 14348,
											"end": 15034,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14378,
											"end": 14626,
											"name": "tag",
											"source": -1,
											"value": "474"
										},
										{
											"begin": 14378,
											"end": 14626,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 14475,
											"end": 14546,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "476"
										},
										{
											"begin": 14456,
											"end": 14460,
											"name": "PUSH",
											"source": -1,
											"value": "7F"
										},
										{
											"begin": 14452,
											"end": 14453,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": 14441,
											"end": 14450,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 14437,
											"end": 14454,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": 14433,
											"end": 14461,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 14534,
											"end": 14537,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 14475,
											"end": 14546,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "36"
										},
										{
											"begin": 14475,
											"end": 14546,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 14475,
											"end": 14546,
											"name": "tag",
											"source": -1,
											"value": "476"
										},
										{
											"begin": 14475,
											"end": 14546,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14565,
											"end": 14590,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 14565,
											"end": 14590,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 14553,
											"end": 14591,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 14553,
											"end": 14591,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14605,
											"end": 14619,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 14605,
											"end": 14619,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14605,
											"end": 14619,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14378,
											"end": 14626,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "473"
										},
										{
											"begin": 14378,
											"end": 14626,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14632,
											"end": 15034,
											"name": "tag",
											"source": -1,
											"value": "475"
										},
										{
											"begin": 14632,
											"end": 15034,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 14701,
											"end": 14702,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": 14690,
											"end": 14699,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 14686,
											"end": 14703,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": 14717,
											"end": 14788,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "478"
										},
										{
											"begin": 14781,
											"end": 14787,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 14776,
											"end": 14779,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 14717,
											"end": 14788,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "36"
										},
										{
											"begin": 14717,
											"end": 14788,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 14717,
											"end": 14788,
											"name": "tag",
											"source": -1,
											"value": "478"
										},
										{
											"begin": 14717,
											"end": 14788,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 14810,
											"end": 14848,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "479"
										},
										{
											"begin": 14842,
											"end": 14847,
											"name": "DUP14",
											"source": -1
										},
										{
											"begin": 14810,
											"end": 14848,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "480"
										},
										{
											"begin": 14810,
											"end": 14848,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 14810,
											"end": 14848,
											"name": "tag",
											"source": -1,
											"value": "479"
										},
										{
											"begin": 14810,
											"end": 14848,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP10",
											"source": -1
										},
										{
											"begin": 14872,
											"end": 15002,
											"name": "tag",
											"source": -1,
											"value": "481"
										},
										{
											"begin": 14872,
											"end": 15002,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 14886,
											"end": 14892,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 14883,
											"end": 14884,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 14880,
											"end": 14893,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 14872,
											"end": 15002,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 14872,
											"end": 15002,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "483"
										},
										{
											"begin": 14872,
											"end": 15002,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 14945,
											"end": 14959,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 14945,
											"end": 14959,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": 14932,
											"end": 14943,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 14932,
											"end": 14943,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14932,
											"end": 14943,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14925,
											"end": 14960,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14979,
											"end": 14994,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 14979,
											"end": 14994,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 14979,
											"end": 14994,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14979,
											"end": 14994,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 14901,
											"end": 14913,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 14901,
											"end": 14913,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14872,
											"end": 15002,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "481"
										},
										{
											"begin": 14872,
											"end": 15002,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14872,
											"end": 15002,
											"name": "tag",
											"source": -1,
											"value": "483"
										},
										{
											"begin": 14872,
											"end": 15002,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 15016,
											"end": 15027,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 15016,
											"end": 15027,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 15016,
											"end": 15027,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 15016,
											"end": 15027,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15016,
											"end": 15027,
											"name": "SWAP7",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14348,
											"end": 15034,
											"name": "tag",
											"source": -1,
											"value": "473"
										},
										{
											"begin": 14348,
											"end": 15034,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 14348,
											"end": 15034,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14348,
											"end": 15034,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14348,
											"end": 15034,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14348,
											"end": 15034,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21120,
											"end": 21203,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21120,
											"end": 21203,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 21120,
											"end": 21203,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21120,
											"end": 21203,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21120,
											"end": 21203,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19355,
											"end": 19360,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 21282,
											"end": 21284,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 21271,
											"end": 21280,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 21267,
											"end": 21285,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 19325,
											"end": 19362,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 21297,
											"end": 21364,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "484"
										},
										{
											"begin": 21359,
											"end": 21362,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 21348,
											"end": 21357,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 21344,
											"end": 21363,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 21335,
											"end": 21341,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 21297,
											"end": 21364,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "462"
										},
										{
											"begin": 21297,
											"end": 21364,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 21297,
											"end": 21364,
											"name": "tag",
											"source": -1,
											"value": "484"
										},
										{
											"begin": 21297,
											"end": 21364,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 20857,
											"end": 21374,
											"name": "SWAP7",
											"source": -1
										},
										{
											"begin": 20857,
											"end": 21374,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 20857,
											"end": 21374,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20857,
											"end": 21374,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20857,
											"end": 21374,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20857,
											"end": 21374,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20857,
											"end": 21374,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20857,
											"end": 21374,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20857,
											"end": 21374,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 21381,
											"end": 21962,
											"name": "tag",
											"source": -1,
											"value": "115"
										},
										{
											"begin": 21381,
											"end": 21962,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 21381,
											"end": 21962,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 21636,
											"end": 21638,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 21636,
											"end": 21638,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21625,
											"end": 21634,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 21621,
											"end": 21639,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 27217,
											"end": 27235,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 27217,
											"end": 27235,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 29134,
											"end": 29176,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 29134,
											"end": 29176,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29134,
											"end": 29176,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29134,
											"end": 29176,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 11797,
											"end": 11802,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 29123,
											"end": 29177,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 11774,
											"end": 11777,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 11767,
											"end": 11804,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 21754,
											"end": 21756,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 21636,
											"end": 21638,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 21754,
											"end": 21756,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 21743,
											"end": 21752,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 21739,
											"end": 21757,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 21732,
											"end": 21780,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 21794,
											"end": 21952,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 12312,
											"end": 12317,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 28199,
											"end": 28211,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": 28666,
											"end": 28672,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 28661,
											"end": 28664,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 28654,
											"end": 28673,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 21625,
											"end": 21634,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12324,
											"end": 12445,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 12324,
											"end": 12445,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27843,
											"end": 27846,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 27833,
											"end": 27847,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 21754,
											"end": 21756,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 27862,
											"end": 27880,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 12577,
											"end": 12905,
											"name": "tag",
											"source": -1,
											"value": "486"
										},
										{
											"begin": 12577,
											"end": 12905,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12602,
											"end": 12608,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 12599,
											"end": 12600,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 12596,
											"end": 12609,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 12577,
											"end": 12905,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 12577,
											"end": 12905,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "488"
										},
										{
											"begin": 12577,
											"end": 12905,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 18647,
											"end": 18663,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 18641,
											"end": 18664,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": 29134,
											"end": 29176,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 18735,
											"end": 18744,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 29123,
											"end": 29177,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 11774,
											"end": 11777,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 11767,
											"end": 11804,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 29272,
											"end": 29276,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": 29272,
											"end": 29276,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 18947,
											"end": 18956,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 31647,
											"end": 31650,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 31643,
											"end": 31658,
											"name": "SHR",
											"source": -1
										},
										{
											"begin": 29261,
											"end": 29277,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 29767,
											"end": 29819,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "489"
										},
										{
											"begin": 29813,
											"end": 29818,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 29767,
											"end": 29819,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "490"
										},
										{
											"begin": 29767,
											"end": 29819,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 29767,
											"end": 29819,
											"name": "tag",
											"source": -1,
											"value": "489"
										},
										{
											"begin": 29767,
											"end": 29819,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 19028,
											"end": 19042,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 19028,
											"end": 19042,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 19028,
											"end": 19042,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13225,
											"end": 13292,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 31761,
											"end": 31764,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": 31757,
											"end": 31772,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 31757,
											"end": 31772,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 31757,
											"end": 31772,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 31757,
											"end": 31772,
											"name": "SHR",
											"source": -1
										},
										{
											"begin": 29261,
											"end": 29277,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 29575,
											"end": 29588,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 29568,
											"end": 29589,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 19211,
											"end": 19225,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 19211,
											"end": 19225,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 19211,
											"end": 19225,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12990,
											"end": 13024,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11678,
											"end": 11692,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 11678,
											"end": 11692,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 11678,
											"end": 11692,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11678,
											"end": 11692,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 12624,
											"end": 12625,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 28481,
											"end": 28495,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 28481,
											"end": 28495,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 28481,
											"end": 28495,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 28481,
											"end": 28495,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 12617,
											"end": 12626,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12577,
											"end": 12905,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "486"
										},
										{
											"begin": 12577,
											"end": 12905,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 12577,
											"end": 12905,
											"name": "tag",
											"source": -1,
											"value": "488"
										},
										{
											"begin": 12577,
											"end": 12905,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21786,
											"end": 21952,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 21786,
											"end": 21952,
											"name": "SWAP11",
											"source": -1
										},
										{
											"begin": 21607,
											"end": 21962,
											"name": "SWAP10",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21607,
											"end": 21962,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 21969,
											"end": 22435,
											"name": "tag",
											"source": -1,
											"value": "67"
										},
										{
											"begin": 21969,
											"end": 22435,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29123,
											"end": 29177,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 29123,
											"end": 29177,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 11767,
											"end": 11804,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 11767,
											"end": 11804,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 22163,
											"end": 22165,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 22148,
											"end": 22166,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 22148,
											"end": 22166,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29767,
											"end": 29819,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "492"
										},
										{
											"begin": 29813,
											"end": 29818,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 29767,
											"end": 29819,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "490"
										},
										{
											"begin": 29767,
											"end": 29819,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 29767,
											"end": 29819,
											"name": "tag",
											"source": -1,
											"value": "492"
										},
										{
											"begin": 29767,
											"end": 29819,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 30319,
											"end": 30362,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 22344,
											"end": 22346,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 22333,
											"end": 22342,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 22329,
											"end": 22347,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13225,
											"end": 13292,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13017,
											"end": 13022,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29575,
											"end": 29588,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 29568,
											"end": 29589,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 22421,
											"end": 22423,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 22410,
											"end": 22419,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 22406,
											"end": 22424,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12990,
											"end": 13024,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 22134,
											"end": 22435,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 22134,
											"end": 22435,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 22134,
											"end": 22435,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22134,
											"end": 22435,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22134,
											"end": 22435,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22134,
											"end": 22435,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22134,
											"end": 22435,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 22442,
											"end": 22752,
											"name": "tag",
											"source": -1,
											"value": "310"
										},
										{
											"begin": 22442,
											"end": 22752,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 22442,
											"end": 22752,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 22589,
											"end": 22591,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 22610,
											"end": 22627,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22603,
											"end": 22650,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 22664,
											"end": 22742,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "224"
										},
										{
											"begin": 22589,
											"end": 22591,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 22578,
											"end": 22587,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 22574,
											"end": 22592,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 22728,
											"end": 22734,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 22664,
											"end": 22742,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "464"
										},
										{
											"begin": 22664,
											"end": 22742,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 22759,
											"end": 23175,
											"name": "tag",
											"source": -1,
											"value": "200"
										},
										{
											"begin": 22759,
											"end": 23175,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 22959,
											"end": 22961,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 22973,
											"end": 23020,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22973,
											"end": 23020,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22973,
											"end": 23020,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15273,
											"end": 15275,
											"name": "PUSH",
											"source": -1,
											"value": "26"
										},
										{
											"begin": 22944,
											"end": 22962,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22944,
											"end": 22962,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22944,
											"end": 22962,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 28654,
											"end": 28673,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15309,
											"end": 15343,
											"name": "PUSH",
											"source": -1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15289,
											"end": 15344,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15364,
											"end": 15376,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 15364,
											"end": 15376,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 15364,
											"end": 15376,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15357,
											"end": 15387,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15406,
											"end": 15418,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 15406,
											"end": 15418,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15406,
											"end": 15418,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22930,
											"end": 23175,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 23182,
											"end": 23598,
											"name": "tag",
											"source": -1,
											"value": "285"
										},
										{
											"begin": 23182,
											"end": 23598,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 23382,
											"end": 23384,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 23396,
											"end": 23443,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 23396,
											"end": 23443,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 23396,
											"end": 23443,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15657,
											"end": 15659,
											"name": "PUSH",
											"source": -1,
											"value": "22"
										},
										{
											"begin": 23367,
											"end": 23385,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 23367,
											"end": 23385,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 23367,
											"end": 23385,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 28654,
											"end": 28673,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15693,
											"end": 15727,
											"name": "PUSH",
											"source": -1,
											"value": "62617365556E6974206D7573742062652067726561746572207468616E207A65"
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15673,
											"end": 15728,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15748,
											"end": 15760,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 15748,
											"end": 15760,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 15748,
											"end": 15760,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15741,
											"end": 15767,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15786,
											"end": 15798,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 15786,
											"end": 15798,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15786,
											"end": 15798,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 23353,
											"end": 23598,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 23605,
											"end": 24021,
											"name": "tag",
											"source": -1,
											"value": "98"
										},
										{
											"begin": 23605,
											"end": 24021,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 23805,
											"end": 23807,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 23819,
											"end": 23866,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 23819,
											"end": 23866,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 23819,
											"end": 23866,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16037,
											"end": 16039,
											"name": "PUSH",
											"source": -1,
											"value": "A"
										},
										{
											"begin": 23790,
											"end": 23808,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 23790,
											"end": 23808,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 23790,
											"end": 23808,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 28654,
											"end": 28673,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62616420706172616D73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16053,
											"end": 16086,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16105,
											"end": 16117,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 16105,
											"end": 16117,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16105,
											"end": 16117,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 23776,
											"end": 24021,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 24028,
											"end": 24444,
											"name": "tag",
											"source": -1,
											"value": "276"
										},
										{
											"begin": 24028,
											"end": 24444,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 24228,
											"end": 24230,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 24242,
											"end": 24289,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24242,
											"end": 24289,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 24242,
											"end": 24289,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16356,
											"end": 16358,
											"name": "PUSH",
											"source": -1,
											"value": "1A"
										},
										{
											"begin": 24213,
											"end": 24231,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 24213,
											"end": 24231,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 24213,
											"end": 24231,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 28654,
											"end": 28673,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16392,
											"end": 16420,
											"name": "PUSH",
											"source": -1,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16372,
											"end": 16421,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16440,
											"end": 16452,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 16440,
											"end": 16452,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16440,
											"end": 16452,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 24199,
											"end": 24444,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 24451,
											"end": 24867,
											"name": "tag",
											"source": -1,
											"value": "222"
										},
										{
											"begin": 24451,
											"end": 24867,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 24651,
											"end": 24653,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 24665,
											"end": 24712,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24665,
											"end": 24712,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 24665,
											"end": 24712,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16691,
											"end": 16693,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": 24636,
											"end": 24654,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 24636,
											"end": 24654,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 24636,
											"end": 24654,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 28654,
											"end": 28673,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16727,
											"end": 16756,
											"name": "PUSH",
											"source": -1,
											"value": "7072696365206D75737420626967676572207468616E207A65726F0000000000"
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16707,
											"end": 16757,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16776,
											"end": 16788,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 16776,
											"end": 16788,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16776,
											"end": 16788,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 24622,
											"end": 24867,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 24874,
											"end": 25290,
											"name": "tag",
											"source": -1,
											"value": "95"
										},
										{
											"begin": 24874,
											"end": 25290,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 25074,
											"end": 25076,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 25088,
											"end": 25135,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 25088,
											"end": 25135,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 25088,
											"end": 25135,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17027,
											"end": 17029,
											"name": "PUSH",
											"source": -1,
											"value": "31"
										},
										{
											"begin": 25059,
											"end": 25077,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 25059,
											"end": 25077,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 25059,
											"end": 25077,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 28654,
											"end": 28673,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17063,
											"end": 17097,
											"name": "PUSH",
											"source": -1,
											"value": "736F7572636554797065732E6C656E677468206D75737420657175616C207468"
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17043,
											"end": 17098,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C2DC40E6DEEAE4C6CAE65CD8CADCCEE8D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17118,
											"end": 17130,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 17118,
											"end": 17130,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17118,
											"end": 17130,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17111,
											"end": 17152,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17171,
											"end": 17183,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 17171,
											"end": 17183,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17171,
											"end": 17183,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 25045,
											"end": 25290,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 25297,
											"end": 25713,
											"name": "tag",
											"source": -1,
											"value": "272"
										},
										{
											"begin": 25297,
											"end": 25713,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 25497,
											"end": 25499,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 25511,
											"end": 25558,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 25511,
											"end": 25558,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 25511,
											"end": 25558,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17422,
											"end": 17424,
											"name": "PUSH",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 25482,
											"end": 25500,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 25482,
											"end": 25500,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 25482,
											"end": 25500,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 28654,
											"end": 28673,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17458,
											"end": 17492,
											"name": "PUSH",
											"source": -1,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17438,
											"end": 17493,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17513,
											"end": 17525,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 17513,
											"end": 17525,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17513,
											"end": 17525,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17506,
											"end": 17531,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17550,
											"end": 17562,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 17550,
											"end": 17562,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17550,
											"end": 17562,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 25468,
											"end": 25713,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 25720,
											"end": 26136,
											"name": "tag",
											"source": -1,
											"value": "91"
										},
										{
											"begin": 25720,
											"end": 26136,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 25920,
											"end": 25922,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 25934,
											"end": 25981,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 25934,
											"end": 25981,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 25934,
											"end": 25981,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 25905,
											"end": 25923,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 25905,
											"end": 25923,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 25905,
											"end": 25923,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 28654,
											"end": 28673,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17837,
											"end": 17871,
											"name": "PUSH",
											"source": -1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17817,
											"end": 17872,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17891,
											"end": 17903,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 17891,
											"end": 17903,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17891,
											"end": 17903,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 25891,
											"end": 26136,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 26143,
											"end": 26559,
											"name": "tag",
											"source": -1,
											"value": "154"
										},
										{
											"begin": 26143,
											"end": 26559,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 26343,
											"end": 26345,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 26357,
											"end": 26404,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 26357,
											"end": 26404,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 26357,
											"end": 26404,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 18142,
											"end": 18144,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 26328,
											"end": 26346,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 26328,
											"end": 26346,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 26328,
											"end": 26346,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 28654,
											"end": 28673,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 28654,
											"end": 28673,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 28654,
											"end": 28673,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 18178,
											"end": 18212,
											"name": "PUSH",
											"source": -1,
											"value": "746F6B656E732E6C656E677468206D75737420657175616C207468616E206368"
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 28694,
											"end": 28708,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 18158,
											"end": 18213,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 18247,
											"end": 18281,
											"name": "PUSH",
											"source": -1,
											"value": "61696E4C696E6B546F6B656E457468507269636546656564732E6C656E677468"
										},
										{
											"begin": 18233,
											"end": 18245,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 18233,
											"end": 18245,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 18233,
											"end": 18245,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 18226,
											"end": 18282,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 18301,
											"end": 18313,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 18301,
											"end": 18313,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 18301,
											"end": 18313,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 26314,
											"end": 26559,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 26566,
											"end": 26788,
											"name": "tag",
											"source": -1,
											"value": "36"
										},
										{
											"begin": 26566,
											"end": 26788,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 19325,
											"end": 19362,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 19325,
											"end": 19362,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 19325,
											"end": 19362,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 26693,
											"end": 26695,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 26678,
											"end": 26696,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 26678,
											"end": 26696,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 26664,
											"end": 26788,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 26795,
											"end": 27051,
											"name": "tag",
											"source": -1,
											"value": "366"
										},
										{
											"begin": 26795,
											"end": 27051,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 26857,
											"end": 26859,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 26851,
											"end": 26860,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 26883,
											"end": 26900,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 26883,
											"end": 26900,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 26883,
											"end": 26900,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 26958,
											"end": 26976,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26943,
											"end": 26977,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 26943,
											"end": 26977,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 26979,
											"end": 27001,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 26979,
											"end": 27001,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 26979,
											"end": 27001,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 26940,
											"end": 27002,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 26937,
											"end": 26939,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 26937,
											"end": 26939,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "506"
										},
										{
											"begin": 26937,
											"end": 26939,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27015,
											"end": 27016,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 27015,
											"end": 27016,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 27005,
											"end": 27017,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 26937,
											"end": 26939,
											"name": "tag",
											"source": -1,
											"value": "506"
										},
										{
											"begin": 26937,
											"end": 26939,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 26857,
											"end": 26859,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 27024,
											"end": 27046,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 26835,
											"end": 27051,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 26835,
											"end": 27051,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26835,
											"end": 27051,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 27369,
											"end": 27691,
											"name": "tag",
											"source": -1,
											"value": "395"
										},
										{
											"begin": 27369,
											"end": 27691,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 27369,
											"end": 27691,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 27513,
											"end": 27531,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27505,
											"end": 27511,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 27502,
											"end": 27532,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 27499,
											"end": 27501,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 27499,
											"end": 27501,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "508"
										},
										{
											"begin": 27499,
											"end": 27501,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27535,
											"end": 27547,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 27499,
											"end": 27501,
											"name": "tag",
											"source": -1,
											"value": "508"
										},
										{
											"begin": 27499,
											"end": 27501,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31431,
											"end": 31438,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 27589,
											"end": 27606,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 27585,
											"end": 27618,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 27676,
											"end": 27680,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 27666,
											"end": 27681,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 27666,
											"end": 27681,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 27436,
											"end": 27691,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 27698,
											"end": 27896,
											"name": "tag",
											"source": -1,
											"value": "480"
										},
										{
											"begin": 27698,
											"end": 27896,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 27698,
											"end": 27896,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 27833,
											"end": 27847,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 27833,
											"end": 27847,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27833,
											"end": 27847,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 27875,
											"end": 27879,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 27862,
											"end": 27880,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 27862,
											"end": 27880,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": 27862,
											"end": 27880,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 27792,
											"end": 27896,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 30529,
											"end": 30797,
											"name": "tag",
											"source": -1,
											"value": "447"
										},
										{
											"begin": 30529,
											"end": 30797,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 30594,
											"end": 30595,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 30601,
											"end": 30702,
											"name": "tag",
											"source": -1,
											"value": "512"
										},
										{
											"begin": 30601,
											"end": 30702,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 30615,
											"end": 30621,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30612,
											"end": 30613,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30609,
											"end": 30622,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 30601,
											"end": 30702,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 30601,
											"end": 30702,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "514"
										},
										{
											"begin": 30601,
											"end": 30702,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 30682,
											"end": 30693,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30682,
											"end": 30693,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30682,
											"end": 30693,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30676,
											"end": 30694,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 30663,
											"end": 30674,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30663,
											"end": 30674,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 30663,
											"end": 30674,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30656,
											"end": 30695,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 30637,
											"end": 30639,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 30630,
											"end": 30640,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30601,
											"end": 30702,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "512"
										},
										{
											"begin": 30601,
											"end": 30702,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 30601,
											"end": 30702,
											"name": "tag",
											"source": -1,
											"value": "514"
										},
										{
											"begin": 30601,
											"end": 30702,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 30717,
											"end": 30723,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30714,
											"end": 30715,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30711,
											"end": 30724,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 30708,
											"end": 30710,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 30708,
											"end": 30710,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "515"
										},
										{
											"begin": 30708,
											"end": 30710,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 30594,
											"end": 30595,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 30773,
											"end": 30779,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 30768,
											"end": 30771,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 30764,
											"end": 30780,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30757,
											"end": 30784,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 30708,
											"end": 30710,
											"name": "tag",
											"source": -1,
											"value": "515"
										},
										{
											"begin": 30708,
											"end": 30710,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 30708,
											"end": 30710,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30578,
											"end": 30797,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30578,
											"end": 30797,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30578,
											"end": 30797,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30578,
											"end": 30797,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 31790,
											"end": 31900,
											"name": "tag",
											"source": -1,
											"value": "490"
										},
										{
											"begin": 31790,
											"end": 31900,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 31878,
											"end": 31879,
											"name": "PUSH",
											"source": -1,
											"value": "5"
										},
										{
											"begin": 31871,
											"end": 31876,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 31868,
											"end": 31880,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 31858,
											"end": 31860,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "517"
										},
										{
											"begin": 31858,
											"end": 31860,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31884,
											"end": 31893,
											"name": "INVALID",
											"source": -1
										},
										{
											"begin": 31858,
											"end": 31860,
											"name": "tag",
											"source": -1,
											"value": "517"
										},
										{
											"begin": 31858,
											"end": 31860,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 31852,
											"end": 31900,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31852,
											"end": 31900,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 31907,
											"end": 32024,
											"name": "tag",
											"source": -1,
											"value": "360"
										},
										{
											"begin": 31907,
											"end": 32024,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29123,
											"end": 29177,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 29123,
											"end": 29177,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 31966,
											"end": 32001,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 31966,
											"end": 32001,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 31956,
											"end": 31958,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "517"
										},
										{
											"begin": 31956,
											"end": 31958,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 32015,
											"end": 32016,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 32015,
											"end": 32016,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 32005,
											"end": 32017,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 32031,
											"end": 32142,
											"name": "tag",
											"source": -1,
											"value": "380"
										},
										{
											"begin": 32031,
											"end": 32142,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32112,
											"end": 32117,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 29575,
											"end": 29588,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 29568,
											"end": 29589,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 32090,
											"end": 32095,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 32087,
											"end": 32119,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 32077,
											"end": 32079,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "517"
										},
										{
											"begin": 32077,
											"end": 32079,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 32133,
											"end": 32134,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 32133,
											"end": 32134,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 32123,
											"end": 32135,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addOrUpdateChainLinkTokenEthPriceFeed(address[],address[])": "98ee9a13",
							"addOrUpdateTokenConfigSource(address,uint256,address,uint8,bool)": "e316e297",
							"addTokenConfig(address,address,string,uint256,bool,address[],uint8[])": "0e4230a0",
							"chainLinkTokenEthPriceFeed(address)": "8341301a",
							"ethUsdPriceFeedAddress()": "a22e6ee3",
							"getOracleSourcePrice(address,uint256)": "9e237b1c",
							"getUnderlyingPrice(address)": "fc57d4df",
							"oracleLength(address)": "43f5ae36",
							"oracles(address,uint256)": "a00a8b2c",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setEthUsdPriceFeedAddress(address)": "bec69b4f",
							"tokenConfigs(address)": "1b69dc5f",
							"transferOwnership(address)": "f2fde38b",
							"updateTokenConfigBaseUnit(address,uint256)": "49b39fd6",
							"updateTokenConfigFixedUsd(address,bool)": "71cc09a9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"underlyingSymbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseUnit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"fixedUsd\",\"type\":\"bool\"}],\"name\":\"ConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"internalType\":\"enum DeveloperLendPriceProviderV1.PriceOracleType\",\"name\":\"sourceType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"available\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct DeveloperLendPriceProviderV1.PriceOracle[]\",\"name\":\"oracles\",\"type\":\"tuple[]\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"chainLinkTokenEthPriceFeeds\",\"type\":\"address[]\"}],\"name\":\"addOrUpdateChainLinkTokenEthPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"internalType\":\"enum DeveloperLendPriceProviderV1.PriceOracleType\",\"name\":\"_sourceType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"available\",\"type\":\"bool\"}],\"name\":\"addOrUpdateTokenConfigSource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"underlyingSymbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"baseUnit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"fixedUsd\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"sources\",\"type\":\"address[]\"},{\"internalType\":\"enum DeveloperLendPriceProviderV1.PriceOracleType[]\",\"name\":\"sourceTypes\",\"type\":\"uint8[]\"}],\"name\":\"addTokenConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"chainLinkTokenEthPriceFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethUsdPriceFeedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sourceIndex\",\"type\":\"uint256\"}],\"name\":\"getOracleSourcePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pToken\",\"type\":\"address\"}],\"name\":\"getUnderlyingPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"}],\"name\":\"oracleLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"oracles\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"internalType\":\"enum DeveloperLendPriceProviderV1.PriceOracleType\",\"name\":\"sourceType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"available\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feedAddress\",\"type\":\"address\"}],\"name\":\"setEthUsdPriceFeedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenConfigs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"underlyingSymbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"baseUnit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"fixedUsd\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"baseUnit\",\"type\":\"uint256\"}],\"name\":\"updateTokenConfigBaseUnit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fixedUsd\",\"type\":\"bool\"}],\"name\":\"updateTokenConfigFixedUsd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"oracle/DeveloperLendPriceProviderV1.sol\":\"DeveloperLendPriceProviderV1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x8895ce4f46aba18ee3cdb7b1d180f79edb868225781f60993c7b2181e2ee2583\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4472c14df5f311d7a2eff1dfa55d9b4d39a21b0a0ff905fcbbf6913551086a4c\",\"dweb:/ipfs/QmQvwFk1SBaLMm4pmZCz7UEhfaXM8kUWu5VG71VFFuMxjF\"]},\"openzeppelin/ContextUpgradeable.sol\":{\"keccak256\":\"0xc29069c2b260183319e21559976a4edd6353a239df21132bf9db532799d22903\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ecc35cbe1827dc94d025e59c1ac18e27689433c444c3047b754a82d592dc6ed\",\"dweb:/ipfs/QmZL53cPxx8wk27PfdZTKYZ7PKKjTuQKnur351JwEPzq5f\"]},\"openzeppelin/Initializable.sol\":{\"keccak256\":\"0x158043e9a2bd106a5ccfd0cc2d87d705a9b2b0bcb7922db4a19ea8e404064956\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4f602e102ea8cf30c7d863c753323da6c63f93d74712f723cf12dc482f43cac\",\"dweb:/ipfs/QmNi7w2v2UvjsKMSjv1jLeyfQTXHBheJjNvRTGHpjfjm9G\"]},\"openzeppelin/OwnableUpgradeable.sol\":{\"keccak256\":\"0xce73c27b03716341ac65d1c47f118be94ac41736d381169e1152785f81eac535\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://013d397cf7035aa123b2849bfd1b2a15949e8f7b1e698eb2a0b5e93b8a74fd33\",\"dweb:/ipfs/QmZ4uzR9yhZpMC852qc9NibDsFmUggR8UfCNBTH1eC4iJ5\"]},\"openzeppelin/SafeMath.sol\":{\"keccak256\":\"0xa8bdeb6000645c8cd0d040fd429614de694ff281b8a1b78fb1f24ab899b2bec5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://635614feaf4b4a5467abb0231d4d5dd9d39597ea7f8af623dc60074495d1ae61\",\"dweb:/ipfs/QmNfJL51eQP4wjzebecJQxwC5FkqMz8cWQ61Cfx2xsN8yQ\"]},\"oracle/DeveloperLendPriceOracleInterface.sol\":{\"keccak256\":\"0x75f26c72d309971e6b75cff5e8d84409495636fd0b35f8cc0393d1d5dc676406\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2946f34e79c5e3fca762c77154c61085ddcc83b4d82f93a4e88315d733ebed95\",\"dweb:/ipfs/QmPdKriPao2ce48wyGrSZB47sk2GmJZghPRx6xrQgb6Urp\"]},\"oracle/DeveloperLendPriceProviderV1.sol\":{\"keccak256\":\"0x6e7822e837a2450cc701ac4910cb1f4206b6dee9af988744138c80babd2d5c7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b03ae3cd2d51a52d6cbf3c7d91366586cc7dffa9382a6556371c782e002ebf2\",\"dweb:/ipfs/QmbqvkSstejNDJ5Lf9GuwejorjJGXznMnTcDeuqEf8XDau\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 95,
								"contract": "oracle/DeveloperLendPriceProviderV1.sol:DeveloperLendPriceProviderV1",
								"label": "initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 98,
								"contract": "oracle/DeveloperLendPriceProviderV1.sol:DeveloperLendPriceProviderV1",
								"label": "initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 163,
								"contract": "oracle/DeveloperLendPriceProviderV1.sol:DeveloperLendPriceProviderV1",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 88,
								"contract": "oracle/DeveloperLendPriceProviderV1.sol:DeveloperLendPriceProviderV1",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 174,
								"contract": "oracle/DeveloperLendPriceProviderV1.sol:DeveloperLendPriceProviderV1",
								"label": "_owner",
								"offset": 0,
								"slot": "101",
								"type": "t_address"
							},
							{
								"astId": 293,
								"contract": "oracle/DeveloperLendPriceProviderV1.sol:DeveloperLendPriceProviderV1",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 769,
								"contract": "oracle/DeveloperLendPriceProviderV1.sol:DeveloperLendPriceProviderV1",
								"label": "tokenConfigs",
								"offset": 0,
								"slot": "151",
								"type": "t_mapping(t_address,t_struct(TokenConfig)765_storage)"
							},
							{
								"astId": 774,
								"contract": "oracle/DeveloperLendPriceProviderV1.sol:DeveloperLendPriceProviderV1",
								"label": "oracles",
								"offset": 0,
								"slot": "152",
								"type": "t_mapping(t_address,t_array(t_struct(PriceOracle)754_storage)dyn_storage)"
							},
							{
								"astId": 778,
								"contract": "oracle/DeveloperLendPriceProviderV1.sol:DeveloperLendPriceProviderV1",
								"label": "chainLinkTokenEthPriceFeed",
								"offset": 0,
								"slot": "153",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 780,
								"contract": "oracle/DeveloperLendPriceProviderV1.sol:DeveloperLendPriceProviderV1",
								"label": "ethUsdPriceFeedAddress",
								"offset": 0,
								"slot": "154",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(PriceOracle)754_storage)dyn_storage": {
								"base": "t_struct(PriceOracle)754_storage",
								"encoding": "dynamic_array",
								"label": "struct DeveloperLendPriceProviderV1.PriceOracle[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_enum(PriceOracleType)747": {
								"encoding": "inplace",
								"label": "enum DeveloperLendPriceProviderV1.PriceOracleType",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_array(t_struct(PriceOracle)754_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DeveloperLendPriceProviderV1.PriceOracle[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(PriceOracle)754_storage)dyn_storage"
							},
							"t_mapping(t_address,t_struct(TokenConfig)765_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DeveloperLendPriceProviderV1.TokenConfig)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenConfig)765_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(PriceOracle)754_storage": {
								"encoding": "inplace",
								"label": "struct DeveloperLendPriceProviderV1.PriceOracle",
								"members": [
									{
										"astId": 749,
										"contract": "oracle/DeveloperLendPriceProviderV1.sol:DeveloperLendPriceProviderV1",
										"label": "source",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 751,
										"contract": "oracle/DeveloperLendPriceProviderV1.sol:DeveloperLendPriceProviderV1",
										"label": "sourceType",
										"offset": 20,
										"slot": "0",
										"type": "t_enum(PriceOracleType)747"
									},
									{
										"astId": 753,
										"contract": "oracle/DeveloperLendPriceProviderV1.sol:DeveloperLendPriceProviderV1",
										"label": "available",
										"offset": 21,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(TokenConfig)765_storage": {
								"encoding": "inplace",
								"label": "struct DeveloperLendPriceProviderV1.TokenConfig",
								"members": [
									{
										"astId": 756,
										"contract": "oracle/DeveloperLendPriceProviderV1.sol:DeveloperLendPriceProviderV1",
										"label": "pToken",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 758,
										"contract": "oracle/DeveloperLendPriceProviderV1.sol:DeveloperLendPriceProviderV1",
										"label": "underlying",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 760,
										"contract": "oracle/DeveloperLendPriceProviderV1.sol:DeveloperLendPriceProviderV1",
										"label": "underlyingSymbol",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									},
									{
										"astId": 762,
										"contract": "oracle/DeveloperLendPriceProviderV1.sol:DeveloperLendPriceProviderV1",
										"label": "baseUnit",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 764,
										"contract": "oracle/DeveloperLendPriceProviderV1.sol:DeveloperLendPriceProviderV1",
										"label": "fixedUsd",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"PTokenInterface": {
					"abi": [
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "underlying",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"symbol()": "95d89b41",
							"underlying()": "6f307dc3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlying\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"oracle/DeveloperLendPriceProviderV1.sol\":\"PTokenInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x8895ce4f46aba18ee3cdb7b1d180f79edb868225781f60993c7b2181e2ee2583\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4472c14df5f311d7a2eff1dfa55d9b4d39a21b0a0ff905fcbbf6913551086a4c\",\"dweb:/ipfs/QmQvwFk1SBaLMm4pmZCz7UEhfaXM8kUWu5VG71VFFuMxjF\"]},\"openzeppelin/ContextUpgradeable.sol\":{\"keccak256\":\"0xc29069c2b260183319e21559976a4edd6353a239df21132bf9db532799d22903\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ecc35cbe1827dc94d025e59c1ac18e27689433c444c3047b754a82d592dc6ed\",\"dweb:/ipfs/QmZL53cPxx8wk27PfdZTKYZ7PKKjTuQKnur351JwEPzq5f\"]},\"openzeppelin/Initializable.sol\":{\"keccak256\":\"0x158043e9a2bd106a5ccfd0cc2d87d705a9b2b0bcb7922db4a19ea8e404064956\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4f602e102ea8cf30c7d863c753323da6c63f93d74712f723cf12dc482f43cac\",\"dweb:/ipfs/QmNi7w2v2UvjsKMSjv1jLeyfQTXHBheJjNvRTGHpjfjm9G\"]},\"openzeppelin/OwnableUpgradeable.sol\":{\"keccak256\":\"0xce73c27b03716341ac65d1c47f118be94ac41736d381169e1152785f81eac535\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://013d397cf7035aa123b2849bfd1b2a15949e8f7b1e698eb2a0b5e93b8a74fd33\",\"dweb:/ipfs/QmZ4uzR9yhZpMC852qc9NibDsFmUggR8UfCNBTH1eC4iJ5\"]},\"openzeppelin/SafeMath.sol\":{\"keccak256\":\"0xa8bdeb6000645c8cd0d040fd429614de694ff281b8a1b78fb1f24ab899b2bec5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://635614feaf4b4a5467abb0231d4d5dd9d39597ea7f8af623dc60074495d1ae61\",\"dweb:/ipfs/QmNfJL51eQP4wjzebecJQxwC5FkqMz8cWQ61Cfx2xsN8yQ\"]},\"oracle/DeveloperLendPriceOracleInterface.sol\":{\"keccak256\":\"0x75f26c72d309971e6b75cff5e8d84409495636fd0b35f8cc0393d1d5dc676406\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2946f34e79c5e3fca762c77154c61085ddcc83b4d82f93a4e88315d733ebed95\",\"dweb:/ipfs/QmPdKriPao2ce48wyGrSZB47sk2GmJZghPRx6xrQgb6Urp\"]},\"oracle/DeveloperLendPriceProviderV1.sol\":{\"keccak256\":\"0x6e7822e837a2450cc701ac4910cb1f4206b6dee9af988744138c80babd2d5c7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b03ae3cd2d51a52d6cbf3c7d91366586cc7dffa9382a6556371c782e002ebf2\",\"dweb:/ipfs/QmbqvkSstejNDJ5Lf9GuwejorjJGXznMnTcDeuqEf8XDau\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"UniSwapPriceOracleInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getUniSwapPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getUniSwapPrice(address)": "2838c620"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getUniSwapPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"oracle/DeveloperLendPriceProviderV1.sol\":\"UniSwapPriceOracleInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x8895ce4f46aba18ee3cdb7b1d180f79edb868225781f60993c7b2181e2ee2583\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4472c14df5f311d7a2eff1dfa55d9b4d39a21b0a0ff905fcbbf6913551086a4c\",\"dweb:/ipfs/QmQvwFk1SBaLMm4pmZCz7UEhfaXM8kUWu5VG71VFFuMxjF\"]},\"openzeppelin/ContextUpgradeable.sol\":{\"keccak256\":\"0xc29069c2b260183319e21559976a4edd6353a239df21132bf9db532799d22903\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ecc35cbe1827dc94d025e59c1ac18e27689433c444c3047b754a82d592dc6ed\",\"dweb:/ipfs/QmZL53cPxx8wk27PfdZTKYZ7PKKjTuQKnur351JwEPzq5f\"]},\"openzeppelin/Initializable.sol\":{\"keccak256\":\"0x158043e9a2bd106a5ccfd0cc2d87d705a9b2b0bcb7922db4a19ea8e404064956\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4f602e102ea8cf30c7d863c753323da6c63f93d74712f723cf12dc482f43cac\",\"dweb:/ipfs/QmNi7w2v2UvjsKMSjv1jLeyfQTXHBheJjNvRTGHpjfjm9G\"]},\"openzeppelin/OwnableUpgradeable.sol\":{\"keccak256\":\"0xce73c27b03716341ac65d1c47f118be94ac41736d381169e1152785f81eac535\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://013d397cf7035aa123b2849bfd1b2a15949e8f7b1e698eb2a0b5e93b8a74fd33\",\"dweb:/ipfs/QmZ4uzR9yhZpMC852qc9NibDsFmUggR8UfCNBTH1eC4iJ5\"]},\"openzeppelin/SafeMath.sol\":{\"keccak256\":\"0xa8bdeb6000645c8cd0d040fd429614de694ff281b8a1b78fb1f24ab899b2bec5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://635614feaf4b4a5467abb0231d4d5dd9d39597ea7f8af623dc60074495d1ae61\",\"dweb:/ipfs/QmNfJL51eQP4wjzebecJQxwC5FkqMz8cWQ61Cfx2xsN8yQ\"]},\"oracle/DeveloperLendPriceOracleInterface.sol\":{\"keccak256\":\"0x75f26c72d309971e6b75cff5e8d84409495636fd0b35f8cc0393d1d5dc676406\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2946f34e79c5e3fca762c77154c61085ddcc83b4d82f93a4e88315d733ebed95\",\"dweb:/ipfs/QmPdKriPao2ce48wyGrSZB47sk2GmJZghPRx6xrQgb6Urp\"]},\"oracle/DeveloperLendPriceProviderV1.sol\":{\"keccak256\":\"0x6e7822e837a2450cc701ac4910cb1f4206b6dee9af988744138c80babd2d5c7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b03ae3cd2d51a52d6cbf3c7d91366586cc7dffa9382a6556371c782e002ebf2\",\"dweb:/ipfs/QmbqvkSstejNDJ5Lf9GuwejorjJGXznMnTcDeuqEf8XDau\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "openzeppelin/ContextUpgradeable.sol: Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.6.12;\"\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.6.12;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "openzeppelin/ContextUpgradeable.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "oracle/DeveloperLendPriceProviderV1.sol:193:48: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function _getChainLinkEthBasePriceInternal(PriceOracle memory priceOracle, TokenConfig memory tokenConfig) internal view returns (uint){\n                                               ^----------------------------^\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 7406,
					"file": "oracle/DeveloperLendPriceProviderV1.sol",
					"start": 7376
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "111:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 6,
												"src": "156:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "156:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "148:19:0"
									},
									"scope": 45,
									"src": "94:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "192:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 11,
												"src": "237:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "237:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "229:27:0"
									},
									"scope": 45,
									"src": "172:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "277:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 16,
												"src": "322:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "314:21:0"
									},
									"scope": 45,
									"src": "261:75:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "578:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "578:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "572:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "640:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "640:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "662:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "662:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "683:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "708:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "733:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "733:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "632:129:0"
									},
									"scope": 45,
									"src": "551:211:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "790:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "835:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "835:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "857:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "857:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "878:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "903:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "928:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "928:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "827:129:0"
									},
									"scope": 45,
									"src": "766:191:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:903:0"
						}
					],
					"src": "32:929:0"
				},
				"id": 0
			},
			"openzeppelin/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "openzeppelin/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							89
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"absolutePath": "openzeppelin/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 47,
							"nodeType": "ImportDirective",
							"scope": 90,
							"sourceUnit": 165,
							"src": "545:29:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 48,
										"name": "Initializable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 164,
										"src": "618:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Initializable_$164",
											"typeString": "contract Initializable"
										}
									},
									"id": 49,
									"nodeType": "InheritanceSpecifier",
									"src": "618:13:1"
								}
							],
							"contractDependencies": [
								164
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89,
								164
							],
							"name": "ContextUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "686:45:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 54,
														"name": "__Context_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "697:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "697:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "697:26:1"
											}
										]
									},
									"documentation": null,
									"id": 58,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 52,
											"modifierName": {
												"argumentTypes": null,
												"id": 51,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 137,
												"src": "674:11:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "674:11:1"
										}
									],
									"name": "__Context_init",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:2:1"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "686:0:1"
									},
									"scope": 89,
									"src": "639:92:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "796:8:1",
										"statements": []
									},
									"documentation": null,
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 61,
											"modifierName": {
												"argumentTypes": null,
												"id": 60,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 137,
												"src": "784:11:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "784:11:1"
										}
									],
									"name": "__Context_init_unchained",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "772:2:1"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:0:1"
									},
									"scope": 89,
									"src": "739:65:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "880:36:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 69,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "898:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "898:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 68,
												"id": 71,
												"nodeType": "Return",
												"src": "891:17:1"
											}
										]
									},
									"documentation": null,
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "829:2:1"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 73,
												"src": "863:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "863:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "862:17:1"
									},
									"scope": 89,
									"src": "810:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "989:168:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 78,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "1000:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ContextUpgradeable_$89",
														"typeString": "contract ContextUpgradeable"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "1000:4:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 80,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "1141:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1141:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 77,
												"id": 82,
												"nodeType": "Return",
												"src": "1134:15:1"
											}
										]
									},
									"documentation": null,
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "941:2:1"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 84,
												"src": "975:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 75,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "975:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "974:14:1"
									},
									"scope": 89,
									"src": "924:233:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 88,
									"mutability": "mutable",
									"name": "__gap",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 89,
									"src": "1163:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 85,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1163:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 87,
										"length": {
											"argumentTypes": null,
											"hexValue": "3530",
											"id": 86,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1171:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1163:11:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"value": null,
									"visibility": "private"
								}
							],
							"scope": 90,
							"src": "578:614:1"
						}
					],
					"src": "545:647:1"
				},
				"id": 1
			},
			"openzeppelin/Initializable.sol": {
				"ast": {
					"absolutePath": "openzeppelin/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							164
						]
					},
					"id": 165,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 91,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 92,
								"nodeType": "StructuredDocumentation",
								"src": "60:632:2",
								"text": " @title Initializable\n @dev Helper contract to support initializer functions. To use it, replace\n the constructor with a function that has the `initializer` modifier.\n WARNING: Unlike constructors, initializer functions must be manually\n invoked. This applies both to deploying an Initializable contract, as well\n as extending an Initializable contract via inheritance.\n WARNING: When used with inheritance, manual care must be taken to not invoke\n a parent initializer twice, or ensure that all initializers are idempotent,\n because this is not dealt with automatically as with constructors."
							},
							"fullyImplemented": true,
							"id": 164,
							"linearizedBaseContracts": [
								164
							],
							"name": "Initializable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "726:73:2",
										"text": " @dev Indicates that the contract has been initialized."
									},
									"id": 95,
									"mutability": "mutable",
									"name": "initialized",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 164,
									"src": "805:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 94,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "805:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "838:91:2",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 98,
									"mutability": "mutable",
									"name": "initializing",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 164,
									"src": "935:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 97,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "935:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "1080:375:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 102,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "1099:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 103,
																		"name": "isConstructor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 159,
																		"src": "1115:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																			"typeString": "function () view returns (bool)"
																		}
																	},
																	"id": 104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1115:15:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1099:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "1134:12:2",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 106,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 95,
																	"src": "1135:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1099:47:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564",
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1148:48:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
																"typeString": "literal_string \"Contract instance has already been initialized\""
															},
															"value": "Contract instance has already been initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
																"typeString": "literal_string \"Contract instance has already been initialized\""
															}
														],
														"id": 101,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1091:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1091:106:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "1091:106:2"
											},
											{
												"assignments": [
													113
												],
												"declarations": [
													{
														"constant": false,
														"id": 113,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 136,
														"src": "1210:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 112,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1210:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 116,
												"initialValue": {
													"argumentTypes": null,
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1232:13:2",
													"subExpression": {
														"argumentTypes": null,
														"id": 114,
														"name": "initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "1233:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1210:35:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 117,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 113,
													"src": "1260:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 127,
												"nodeType": "IfStatement",
												"src": "1256:99:2",
												"trueBody": {
													"id": 126,
													"nodeType": "Block",
													"src": "1276:79:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 118,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "1291:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1306:4:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1291:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 121,
															"nodeType": "ExpressionStatement",
															"src": "1291:19:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 122,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 95,
																	"src": "1325:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1339:4:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1325:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 125,
															"nodeType": "ExpressionStatement",
															"src": "1325:18:2"
														}
													]
												}
											},
											{
												"id": 128,
												"nodeType": "PlaceholderStatement",
												"src": "1367:1:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 129,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 113,
													"src": "1385:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 135,
												"nodeType": "IfStatement",
												"src": "1381:67:2",
												"trueBody": {
													"id": 134,
													"nodeType": "Block",
													"src": "1401:47:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 130,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "1416:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "66616c7365",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1431:5:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "1416:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 133,
															"nodeType": "ExpressionStatement",
															"src": "1416:20:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "969:82:2",
										"text": " @dev Modifier to use in the initializer function of a contract."
									},
									"id": 137,
									"name": "initializer",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1077:2:2"
									},
									"src": "1057:398:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "1601:493:2",
										"statements": [
											{
												"assignments": [
													144
												],
												"declarations": [
													{
														"constant": false,
														"id": 144,
														"mutability": "mutable",
														"name": "self",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 158,
														"src": "1966:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 143,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1966:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 147,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -28,
															"src": "1989:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Initializable_$164",
																"typeString": "contract Initializable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_Initializable_$164",
																"typeString": "contract Initializable"
															}
														],
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1981:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 145,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1981:7:2",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1966:28:2"
											},
											{
												"assignments": [
													151
												],
												"declarations": [
													{
														"constant": false,
														"id": 151,
														"mutability": "mutable",
														"name": "cs",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 158,
														"src": "2005:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 150,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2005:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 152,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "2005:10:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2035:27:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2037:23:2",
															"value": {
																"arguments": [
																	{
																		"name": "self",
																		"nodeType": "YulIdentifier",
																		"src": "2055:4:2"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "2043:11:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2043:17:2"
															},
															"variableNames": [
																{
																	"name": "cs",
																	"nodeType": "YulIdentifier",
																	"src": "2037:2:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 151,
														"isOffset": false,
														"isSlot": false,
														"src": "2037:2:2",
														"valueSize": 1
													},
													{
														"declaration": 144,
														"isOffset": false,
														"isSlot": false,
														"src": "2055:4:2",
														"valueSize": 1
													}
												],
												"id": 153,
												"nodeType": "InlineAssembly",
												"src": "2026:36:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 154,
														"name": "cs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "2079:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 155,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2085:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2079:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 142,
												"id": 157,
												"nodeType": "Return",
												"src": "2072:14:2"
											}
										]
									},
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "1463:79:2",
										"text": "@dev Returns true if and only if the function is running in the constructor"
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isConstructor",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1570:2:2"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 159,
												"src": "1595:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 140,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1595:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1594:6:2"
									},
									"scope": 164,
									"src": "1548:546:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 163,
									"mutability": "mutable",
									"name": "______gap",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 164,
									"src": "2176:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 160,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2176:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 162,
										"length": {
											"argumentTypes": null,
											"hexValue": "3530",
											"id": 161,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2184:2:2",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "2176:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"value": null,
									"visibility": "private"
								}
							],
							"scope": 165,
							"src": "694:1515:2"
						}
					],
					"src": "33:2176:2"
				},
				"id": 2
			},
			"openzeppelin/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "openzeppelin/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"OwnableUpgradeable": [
							294
						]
					},
					"id": 295,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 166,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "542:23:3"
						},
						{
							"absolutePath": "openzeppelin/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 167,
							"nodeType": "ImportDirective",
							"scope": 295,
							"sourceUnit": 165,
							"src": "567:29:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin/ContextUpgradeable.sol",
							"file": "./ContextUpgradeable.sol",
							"id": 168,
							"nodeType": "ImportDirective",
							"scope": 295,
							"sourceUnit": 90,
							"src": "598:34:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 169,
										"name": "Initializable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 164,
										"src": "676:13:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Initializable_$164",
											"typeString": "contract Initializable"
										}
									},
									"id": 170,
									"nodeType": "InheritanceSpecifier",
									"src": "676:13:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 171,
										"name": "ContextUpgradeable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 89,
										"src": "691:18:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ContextUpgradeable_$89",
											"typeString": "contract ContextUpgradeable"
										}
									},
									"id": 172,
									"nodeType": "InheritanceSpecifier",
									"src": "691:18:3"
								}
							],
							"contractDependencies": [
								89,
								164
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 294,
							"linearizedBaseContracts": [
								294,
								89,
								164
							],
							"name": "OwnableUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 174,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 294,
									"src": "717:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 173,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "717:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 180,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 180,
												"src": "775:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "775:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 180,
												"src": "806:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "806:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "774:57:3"
									},
									"src": "748:84:3"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "986:82:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 186,
														"name": "__Context_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "997:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "997:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "997:26:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 189,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "1034:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1034:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "1034:26:3"
											}
										]
									},
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "840:93:3",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 184,
											"modifierName": {
												"argumentTypes": null,
												"id": 183,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 137,
												"src": "974:11:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "974:11:3"
										}
									],
									"name": "__Ownable_init",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "962:2:3"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:3"
									},
									"scope": 294,
									"src": "939:129:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "1133:139:3",
										"statements": [
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 215,
														"src": "1144:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 198,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1144:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 200,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "1164:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1164:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1144:32:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 203,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1187:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 204,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "1196:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1187:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "1187:18:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1250:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1242:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 208,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1242:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1242:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 212,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "1254:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 207,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "1221:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1221:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 214,
												"nodeType": "EmitStatement",
												"src": "1216:48:3"
											}
										]
									},
									"documentation": null,
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 196,
											"modifierName": {
												"argumentTypes": null,
												"id": 195,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 137,
												"src": "1121:11:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1121:11:3"
										}
									],
									"name": "__Ownable_init_unchained",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1109:2:3"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1133:0:3"
									},
									"scope": 294,
									"src": "1076:196:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "1408:32:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 222,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 174,
													"src": "1426:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 221,
												"id": 223,
												"nodeType": "Return",
												"src": "1419:13:3"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "1280:67:3",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1367:2:3"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 225,
												"src": "1399:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1399:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1398:9:3"
									},
									"scope": 294,
									"src": "1353:87:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1554:99:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 229,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "1573:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1573:7:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 231,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 73,
																	"src": "1584:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1584:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1573:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1598:34:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 228,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1565:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1565:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "1565:68:3"
											},
											{
												"id": 237,
												"nodeType": "PlaceholderStatement",
												"src": "1644:1:3"
											}
										]
									},
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "1448:79:3",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 239,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1551:2:3"
									},
									"src": "1533:120:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "2058:94:3",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 246,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "2095:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2111:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2103:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 247,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2103:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2103:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 245,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "2074:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2074:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 252,
												"nodeType": "EmitStatement",
												"src": "2069:45:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 253,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "2125:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2142:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2134:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 254,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2134:7:3",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2134:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2125:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "2125:19:3"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1661:337:3",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 243,
											"modifierName": {
												"argumentTypes": null,
												"id": 242,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 239,
												"src": "2048:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2048:9:3"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2030:2:3"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2058:0:3"
									},
									"scope": 294,
									"src": "2004:148:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "2377:174:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 270,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "2396:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2416:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2408:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 271,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2408:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2408:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2396:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2420:40:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2388:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2388:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 278,
												"nodeType": "ExpressionStatement",
												"src": "2388:73:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 280,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "2498:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 281,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "2506:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 279,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "2477:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2477:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 283,
												"nodeType": "EmitStatement",
												"src": "2472:43:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 284,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "2526:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 285,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "2535:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2526:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "2526:17:3"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "2160:141:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 267,
											"modifierName": {
												"argumentTypes": null,
												"id": 266,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 239,
												"src": "2367:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2367:9:3"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 289,
												"src": "2334:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2334:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2333:18:3"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2377:0:3"
									},
									"scope": 294,
									"src": "2307:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 293,
									"mutability": "mutable",
									"name": "__gap",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 294,
									"src": "2557:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 290,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2557:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 292,
										"length": {
											"argumentTypes": null,
											"hexValue": "3439",
											"id": 291,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2565:2:3",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "2557:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"value": null,
									"visibility": "private"
								}
							],
							"scope": 295,
							"src": "636:1950:3"
						}
					],
					"src": "542:2044:3"
				},
				"id": 3
			},
			"openzeppelin/SafeMath.sol": {
				"ast": {
					"absolutePath": "openzeppelin/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							648
						]
					},
					"id": 649,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 296,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "612:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 648,
							"linearizedBaseContracts": [
								648
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "880:102:4",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 326,
														"src": "891:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 308,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "891:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 313,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 310,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "903:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 311,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "907:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "903:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "891:17:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 314,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "923:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 315,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "927:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "923:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 321,
												"nodeType": "IfStatement",
												"src": "919:28:4",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "938:5:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "945:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 319,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "937:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 307,
													"id": 320,
													"nodeType": "Return",
													"src": "930:17:4"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "966:4:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 323,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "972:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 324,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "965:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 307,
												"id": 325,
												"nodeType": "Return",
												"src": "958:16:4"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "663:135:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 327,
												"src": "820:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 327,
												"src": "831:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "819:22:4"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 327,
												"src": "865:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 303,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "865:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 327,
												"src": "871:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "871:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "864:15:4"
									},
									"scope": 648,
									"src": "804:178:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "1211:78:4",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 339,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "1226:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 340,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "1230:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1226:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 346,
												"nodeType": "IfStatement",
												"src": "1222:28:4",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1241:5:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1248:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 344,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1240:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 338,
													"id": 345,
													"nodeType": "Return",
													"src": "1233:17:4"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1269:4:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 348,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "1275:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 349,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "1279:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1275:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 351,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1268:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 338,
												"id": 352,
												"nodeType": "Return",
												"src": "1261:20:4"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "990:139:4",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 354,
												"src": "1151:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 354,
												"src": "1162:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1162:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1150:22:4"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 354,
												"src": "1196:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 334,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1196:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 354,
												"src": "1202:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1195:15:4"
									},
									"scope": 648,
									"src": "1135:154:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "1520:367:4",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 366,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "1756:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1761:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1756:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 373,
												"nodeType": "IfStatement",
												"src": "1752:28:4",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1772:4:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1778:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 371,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1771:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 365,
													"id": 372,
													"nodeType": "Return",
													"src": "1764:16:4"
												}
											},
											{
												"assignments": [
													375
												],
												"declarations": [
													{
														"constant": false,
														"id": 375,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 394,
														"src": "1791:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 374,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1791:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 376,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "1803:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 377,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "1807:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1803:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1791:17:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 380,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "1823:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 381,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "1827:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1823:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 383,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "1832:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1823:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 389,
												"nodeType": "IfStatement",
												"src": "1819:33:4",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1843:5:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1850:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 387,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1842:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 365,
													"id": 388,
													"nodeType": "Return",
													"src": "1835:17:4"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1871:4:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 391,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "1877:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 392,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1870:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 365,
												"id": 393,
												"nodeType": "Return",
												"src": "1863:16:4"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "1297:141:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 395,
												"src": "1460:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1460:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 395,
												"src": "1471:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1459:22:4"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 395,
												"src": "1505:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1505:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 395,
												"src": "1511:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1504:15:4"
									},
									"scope": 648,
									"src": "1444:443:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "2119:79:4",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 407,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "2134:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2139:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2134:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 414,
												"nodeType": "IfStatement",
												"src": "2130:29:4",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2150:5:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2157:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 412,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2149:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 406,
													"id": 413,
													"nodeType": "Return",
													"src": "2142:17:4"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2178:4:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 416,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "2184:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 417,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "2188:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2184:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 419,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2177:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 406,
												"id": 420,
												"nodeType": "Return",
												"src": "2170:20:4"
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "1895:142:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 422,
												"src": "2059:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 422,
												"src": "2070:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2070:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2058:22:4"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 422,
												"src": "2104:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2104:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 422,
												"src": "2110:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2110:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2103:15:4"
									},
									"scope": 648,
									"src": "2043:155:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "2440:79:4",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 434,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "2455:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2460:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2455:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 441,
												"nodeType": "IfStatement",
												"src": "2451:29:4",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2471:5:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2478:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 439,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2470:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 433,
													"id": 440,
													"nodeType": "Return",
													"src": "2463:17:4"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2499:4:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 443,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "2505:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 444,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "2509:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2505:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 446,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2498:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 433,
												"id": 447,
												"nodeType": "Return",
												"src": "2491:20:4"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "2206:152:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 449,
												"src": "2380:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2380:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 449,
												"src": "2391:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2391:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2379:22:4"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 449,
												"src": "2425:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 429,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2425:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 449,
												"src": "2431:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2424:15:4"
									},
									"scope": 648,
									"src": "2364:155:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "2833:112:4",
										"statements": [
											{
												"assignments": [
													460
												],
												"declarations": [
													{
														"constant": false,
														"id": 460,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 474,
														"src": "2844:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 459,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2844:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 461,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "2856:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 462,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "2860:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2856:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2844:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 466,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "2880:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 467,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "2885:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2880:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2888:29:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 465,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2872:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2872:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "2872:46:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 472,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 460,
													"src": "2936:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 458,
												"id": 473,
												"nodeType": "Return",
												"src": "2929:8:4"
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "2527:233:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 475,
												"src": "2779:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 475,
												"src": "2790:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2790:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2778:22:4"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 475,
												"src": "2824:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2824:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2823:9:4"
									},
									"scope": 648,
									"src": "2766:179:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "3295:91:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 486,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "3314:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 487,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "3319:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3314:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3322:32:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 485,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3306:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3306:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "3306:49:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 492,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "3373:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 493,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "3377:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3373:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 484,
												"id": 495,
												"nodeType": "Return",
												"src": "3366:12:4"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "2953:269:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 497,
												"src": "3241:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3241:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 497,
												"src": "3252:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3252:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3240:22:4"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 497,
												"src": "3286:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3286:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3285:9:4"
									},
									"scope": 648,
									"src": "3228:158:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "3712:153:4",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 507,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "3727:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3732:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3727:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 512,
												"nodeType": "IfStatement",
												"src": "3723:20:4",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3742:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 506,
													"id": 511,
													"nodeType": "Return",
													"src": "3735:8:4"
												}
											},
											{
												"assignments": [
													514
												],
												"declarations": [
													{
														"constant": false,
														"id": 514,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 530,
														"src": "3754:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 513,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3754:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 518,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 515,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "3766:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 516,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "3770:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3766:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3754:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 520,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "3790:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 521,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 500,
																	"src": "3794:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3790:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 523,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "3799:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3790:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3802:35:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 519,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3782:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3782:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "3782:56:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 528,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 514,
													"src": "3856:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 506,
												"id": 529,
												"nodeType": "Return",
												"src": "3849:8:4"
											}
										]
									},
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "3394:245:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 531,
												"src": "3658:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3658:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 531,
												"src": "3669:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3669:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3657:22:4"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 531,
												"src": "3703:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3703:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3702:9:4"
									},
									"scope": 648,
									"src": "3645:220:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "4410:86:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 542,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 536,
																"src": "4429:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4433:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4429:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4436:28:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4421:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4421:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "4421:44:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 548,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "4483:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 549,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "4487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 540,
												"id": 551,
												"nodeType": "Return",
												"src": "4476:12:4"
											}
										]
									},
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "3873:464:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 553,
												"src": "4356:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4356:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 553,
												"src": "4367:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4367:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4355:22:4"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 553,
												"src": "4401:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4401:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4400:9:4"
									},
									"scope": 648,
									"src": "4343:153:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "5030:84:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 564,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "5049:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5053:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5049:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5056:26:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 563,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5041:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5041:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "5041:42:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 570,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "5101:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 571,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "5105:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5101:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 562,
												"id": 573,
												"nodeType": "Return",
												"src": "5094:12:4"
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "4504:453:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 575,
												"src": "4976:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4976:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 575,
												"src": "4987:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4987:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4975:22:4"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 575,
												"src": "5021:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5021:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5020:9:4"
									},
									"scope": 648,
									"src": "4963:151:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "5688:71:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 588,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 580,
																"src": "5707:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 589,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 578,
																"src": "5712:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5707:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 591,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "5715:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 587,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5699:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5699:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "5699:29:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 594,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "5746:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 595,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "5750:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5746:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 586,
												"id": 597,
												"nodeType": "Return",
												"src": "5739:12:4"
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "5122:465:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 599,
												"src": "5606:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5606:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 599,
												"src": "5617:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5617:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 599,
												"src": "5628:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 581,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5628:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5605:50:4"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 599,
												"src": "5679:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5679:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5678:9:4"
									},
									"scope": 648,
									"src": "5593:166:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "6528:70:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 612,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "6547:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6551:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6547:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 615,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "6554:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 611,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6539:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6539:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "6539:28:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 618,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "6585:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 619,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 604,
														"src": "6589:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6585:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 610,
												"id": 621,
												"nodeType": "Return",
												"src": "6578:12:4"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "5767:660:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 623,
												"src": "6446:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 623,
												"src": "6457:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 623,
												"src": "6468:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 605,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6468:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6445:50:4"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 623,
												"src": "6519:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6519:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6518:9:4"
									},
									"scope": 648,
									"src": "6433:165:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 646,
										"nodeType": "Block",
										"src": "7356:70:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 636,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "7375:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7379:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7375:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 639,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "7382:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 635,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7367:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7367:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "7367:28:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 642,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "7413:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 643,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "7417:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7413:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 634,
												"id": 645,
												"nodeType": "Return",
												"src": "7406:12:4"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "6606:649:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 647,
												"src": "7274:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7274:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 647,
												"src": "7285:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7285:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 647,
												"src": "7296:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 629,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7296:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7273:50:4"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 647,
												"src": "7347:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7347:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7346:9:4"
									},
									"scope": 648,
									"src": "7261:165:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 649,
							"src": "639:6790:4"
						}
					],
					"src": "612:6817:4"
				},
				"id": 4
			},
			"oracle/DeveloperLendPriceOracleInterface.sol": {
				"ast": {
					"absolutePath": "oracle/DeveloperLendPriceOracleInterface.sol",
					"exportedSymbols": {
						"DeveloperLendPriceOracleInterface": [
							667
						]
					},
					"id": 668,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 650,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 667,
							"linearizedBaseContracts": [
								667
							],
							"name": "DeveloperLendPriceOracleInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "41976e09",
									"id": 657,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 657,
												"src": "126:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "126:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "125:15:5"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 657,
												"src": "164:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "164:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "163:6:5"
									},
									"scope": 667,
									"src": "108:62:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "2caf02d0",
									"id": 666,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPrice",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 666,
												"src": "194:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "194:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "price",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 666,
												"src": "209:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "209:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "force",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 666,
												"src": "221:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 662,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "221:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "193:39:5"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "241:0:5"
									},
									"scope": 667,
									"src": "176:66:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 668,
							"src": "57:188:5"
						}
					],
					"src": "32:213:5"
				},
				"id": 5
			},
			"oracle/DeveloperLendPriceProviderV1.sol": {
				"ast": {
					"absolutePath": "oracle/DeveloperLendPriceProviderV1.sol",
					"exportedSymbols": {
						"CompoundPriceOracleInterface": [
							736
						],
						"DeveloperLendPriceProviderV1": [
							1697
						],
						"PTokenInterface": [
							685
						],
						"UniSwapPriceOracleInterface": [
							693
						]
					},
					"id": 1698,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 669,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"id": 670,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "56:33:6"
						},
						{
							"absolutePath": "oracle/DeveloperLendPriceOracleInterface.sol",
							"file": "./DeveloperLendPriceOracleInterface.sol",
							"id": 671,
							"nodeType": "ImportDirective",
							"scope": 1698,
							"sourceUnit": 668,
							"src": "91:49:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin/SafeMath.sol",
							"file": "../openzeppelin/SafeMath.sol",
							"id": 672,
							"nodeType": "ImportDirective",
							"scope": 1698,
							"sourceUnit": 649,
							"src": "201:38:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
							"id": 673,
							"nodeType": "ImportDirective",
							"scope": 1698,
							"sourceUnit": 46,
							"src": "240:76:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin/OwnableUpgradeable.sol",
							"file": "../openzeppelin/OwnableUpgradeable.sol",
							"id": 674,
							"nodeType": "ImportDirective",
							"scope": 1698,
							"sourceUnit": 295,
							"src": "372:48:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 685,
							"linearizedBaseContracts": [
								685
							],
							"name": "PTokenInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "6f307dc3",
									"id": 679,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "underlying",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "473:2:6"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 679,
												"src": "499:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "498:9:6"
									},
									"scope": 685,
									"src": "454:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "95d89b41",
									"id": 684,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "529:2:6"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 684,
												"src": "555:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 681,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "555:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "554:15:6"
									},
									"scope": 685,
									"src": "514:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1698,
							"src": "422:150:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 693,
							"linearizedBaseContracts": [
								693
							],
							"name": "UniSwapPriceOracleInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "2838c620",
									"id": 692,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUniSwapPrice",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 692,
												"src": "644:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "643:15:6"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 692,
												"src": "682:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "682:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "681:6:6"
									},
									"scope": 693,
									"src": "619:69:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1698,
							"src": "574:117:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 736,
							"linearizedBaseContracts": [
								736
							],
							"name": "CompoundPriceOracleInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "CompoundPriceOracleInterface.PriceSource",
									"id": 697,
									"members": [
										{
											"id": 694,
											"name": "FIXED_ETH",
											"nodeType": "EnumValue",
											"src": "765:9:6"
										},
										{
											"id": 695,
											"name": "FIXED_USD",
											"nodeType": "EnumValue",
											"src": "866:9:6"
										},
										{
											"id": 696,
											"name": "REPORTER",
											"nodeType": "EnumValue",
											"src": "965:8:6"
										}
									],
									"name": "PriceSource",
									"nodeType": "EnumDefinition",
									"src": "738:288:6"
								},
								{
									"canonicalName": "CompoundPriceOracleInterface.CTokenConfig",
									"id": 714,
									"members": [
										{
											"constant": false,
											"id": 699,
											"mutability": "mutable",
											"name": "cToken",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 714,
											"src": "1236:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 698,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1236:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 701,
											"mutability": "mutable",
											"name": "underlying",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 714,
											"src": "1260:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 700,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1260:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 703,
											"mutability": "mutable",
											"name": "symbolHash",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 714,
											"src": "1288:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 702,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1288:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 705,
											"mutability": "mutable",
											"name": "baseUnit",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 714,
											"src": "1316:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 704,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1316:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 707,
											"mutability": "mutable",
											"name": "priceSource",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 714,
											"src": "1342:23:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_PriceSource_$697",
												"typeString": "enum CompoundPriceOracleInterface.PriceSource"
											},
											"typeName": {
												"contractScope": null,
												"id": 706,
												"name": "PriceSource",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 697,
												"src": "1342:11:6",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PriceSource_$697",
													"typeString": "enum CompoundPriceOracleInterface.PriceSource"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 709,
											"mutability": "mutable",
											"name": "fixedPrice",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 714,
											"src": "1375:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 708,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1375:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 711,
											"mutability": "mutable",
											"name": "uniswapMarket",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 714,
											"src": "1403:21:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 710,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1403:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 713,
											"mutability": "mutable",
											"name": "isUniswapReversed",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 714,
											"src": "1434:22:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 712,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1434:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "CTokenConfig",
									"nodeType": "StructDefinition",
									"scope": 736,
									"src": "1206:257:6",
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "fc57d4df",
									"id": 721,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUnderlyingPrice",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "cToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 721,
												"src": "1497:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1497:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1496:16:6"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 721,
												"src": "1536:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1536:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1535:6:6"
									},
									"scope": 736,
									"src": "1469:73:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "4da21942",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenConfigByUnderlying",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "underlying",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 728,
												"src": "1584:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1584:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1583:20:6"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 728,
												"src": "1627:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CTokenConfig_$714_memory_ptr",
													"typeString": "struct CompoundPriceOracleInterface.CTokenConfig"
												},
												"typeName": {
													"contractScope": null,
													"id": 725,
													"name": "CTokenConfig",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 714,
													"src": "1627:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CTokenConfig_$714_storage_ptr",
														"typeString": "struct CompoundPriceOracleInterface.CTokenConfig"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1626:21:6"
									},
									"scope": 736,
									"src": "1548:100:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "276c2cba",
									"id": 735,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenConfigBySymbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 735,
												"src": "1686:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 729,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1686:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1685:22:6"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 735,
												"src": "1731:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CTokenConfig_$714_memory_ptr",
													"typeString": "struct CompoundPriceOracleInterface.CTokenConfig"
												},
												"typeName": {
													"contractScope": null,
													"id": 732,
													"name": "CTokenConfig",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 714,
													"src": "1731:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CTokenConfig_$714_storage_ptr",
														"typeString": "struct CompoundPriceOracleInterface.CTokenConfig"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1730:21:6"
									},
									"scope": 736,
									"src": "1654:98:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1698,
							"src": "693:1061:6"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 737,
										"name": "OwnableUpgradeable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 294,
										"src": "1797:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_OwnableUpgradeable_$294",
											"typeString": "contract OwnableUpgradeable"
										}
									},
									"id": 738,
									"nodeType": "InheritanceSpecifier",
									"src": "1797:18:6"
								}
							],
							"contractDependencies": [
								89,
								164,
								294
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1697,
							"linearizedBaseContracts": [
								1697,
								294,
								89,
								164
							],
							"name": "DeveloperLendPriceProviderV1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 741,
									"libraryName": {
										"contractScope": null,
										"id": 739,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 648,
										"src": "1829:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$648",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1823:27:6",
									"typeName": {
										"id": 740,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1842:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "DeveloperLendPriceProviderV1.PriceOracleType",
									"id": 747,
									"members": [
										{
											"id": 742,
											"name": "ChainLink",
											"nodeType": "EnumValue",
											"src": "1886:9:6"
										},
										{
											"id": 743,
											"name": "UniSwap",
											"nodeType": "EnumValue",
											"src": "1905:7:6"
										},
										{
											"id": 744,
											"name": "Compound",
											"nodeType": "EnumValue",
											"src": "1922:8:6"
										},
										{
											"id": 745,
											"name": "Customer",
											"nodeType": "EnumValue",
											"src": "1940:8:6"
										},
										{
											"id": 746,
											"name": "ChainLinkEthBase",
											"nodeType": "EnumValue",
											"src": "1958:16:6"
										}
									],
									"name": "PriceOracleType",
									"nodeType": "EnumDefinition",
									"src": "1856:124:6"
								},
								{
									"canonicalName": "DeveloperLendPriceProviderV1.PriceOracle",
									"id": 754,
									"members": [
										{
											"constant": false,
											"id": 749,
											"mutability": "mutable",
											"name": "source",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 754,
											"src": "2015:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 748,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2015:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 751,
											"mutability": "mutable",
											"name": "sourceType",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 754,
											"src": "2039:26:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_PriceOracleType_$747",
												"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
											},
											"typeName": {
												"contractScope": null,
												"id": 750,
												"name": "PriceOracleType",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 747,
												"src": "2039:15:6",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PriceOracleType_$747",
													"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 753,
											"mutability": "mutable",
											"name": "available",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 754,
											"src": "2075:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 752,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2075:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "PriceOracle",
									"nodeType": "StructDefinition",
									"scope": 1697,
									"src": "1986:110:6",
									"visibility": "public"
								},
								{
									"canonicalName": "DeveloperLendPriceProviderV1.TokenConfig",
									"id": 765,
									"members": [
										{
											"constant": false,
											"id": 756,
											"mutability": "mutable",
											"name": "pToken",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 765,
											"src": "2155:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 755,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2155:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 758,
											"mutability": "mutable",
											"name": "underlying",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 765,
											"src": "2179:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 757,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2179:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 760,
											"mutability": "mutable",
											"name": "underlyingSymbol",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 765,
											"src": "2207:23:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 759,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2207:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 762,
											"mutability": "mutable",
											"name": "baseUnit",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 765,
											"src": "2255:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 761,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2255:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 764,
											"mutability": "mutable",
											"name": "fixedUsd",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 765,
											"src": "2297:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 763,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2297:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "TokenConfig",
									"nodeType": "StructDefinition",
									"scope": 1697,
									"src": "2126:228:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1b69dc5f",
									"id": 769,
									"mutability": "mutable",
									"name": "tokenConfigs",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1697,
									"src": "2361:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenConfig_$765_storage_$",
										"typeString": "mapping(address => struct DeveloperLendPriceProviderV1.TokenConfig)"
									},
									"typeName": {
										"id": 768,
										"keyType": {
											"id": 766,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2369:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2361:31:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenConfig_$765_storage_$",
											"typeString": "mapping(address => struct DeveloperLendPriceProviderV1.TokenConfig)"
										},
										"valueType": {
											"contractScope": null,
											"id": 767,
											"name": "TokenConfig",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 765,
											"src": "2380:11:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
												"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a00a8b2c",
									"id": 774,
									"mutability": "mutable",
									"name": "oracles",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1697,
									"src": "2418:48:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct DeveloperLendPriceProviderV1.PriceOracle[])"
									},
									"typeName": {
										"id": 773,
										"keyType": {
											"id": 770,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2426:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2418:33:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct DeveloperLendPriceProviderV1.PriceOracle[])"
										},
										"valueType": {
											"baseType": {
												"contractScope": null,
												"id": 771,
												"name": "PriceOracle",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 754,
												"src": "2437:11:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PriceOracle_$754_storage_ptr",
													"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle"
												}
											},
											"id": 772,
											"length": null,
											"nodeType": "ArrayTypeName",
											"src": "2437:13:6",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_ptr",
												"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle[]"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8341301a",
									"id": 778,
									"mutability": "mutable",
									"name": "chainLinkTokenEthPriceFeed",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1697,
									"src": "2472:61:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 777,
										"keyType": {
											"id": 775,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2480:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2472:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 776,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2491:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a22e6ee3",
									"id": 780,
									"mutability": "mutable",
									"name": "ethUsdPriceFeedAddress",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1697,
									"src": "2540:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 779,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2540:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 792,
									"name": "ConfigUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"indexed": false,
												"mutability": "mutable",
												"name": "pToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 792,
												"src": "2604:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2604:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"indexed": false,
												"mutability": "mutable",
												"name": "underlying",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 792,
												"src": "2620:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2620:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"indexed": false,
												"mutability": "mutable",
												"name": "underlyingSymbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 792,
												"src": "2640:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 785,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2640:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"indexed": false,
												"mutability": "mutable",
												"name": "baseUnit",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 792,
												"src": "2665:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2665:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"indexed": false,
												"mutability": "mutable",
												"name": "fixedUsd",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 792,
												"src": "2683:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 789,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2683:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2603:94:6"
									},
									"src": "2584:114:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 799,
									"name": "PriceOracleUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"indexed": false,
												"mutability": "mutable",
												"name": "pToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 799,
												"src": "2728:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2728:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"indexed": false,
												"mutability": "mutable",
												"name": "oracles",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 799,
												"src": "2744:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle[]"
												},
												"typeName": {
													"baseType": {
														"contractScope": null,
														"id": 795,
														"name": "PriceOracle",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 754,
														"src": "2744:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriceOracle_$754_storage_ptr",
															"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle"
														}
													},
													"id": 796,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2744:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_ptr",
														"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2727:39:6"
									},
									"src": "2703:64:6"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "2795:7:6",
										"statements": []
									},
									"documentation": null,
									"id": 803,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2785:2:6"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2795:0:6"
									},
									"scope": 1697,
									"src": "2774:28:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "2882:852:6",
										"statements": [
											{
												"assignments": [
													811
												],
												"declarations": [
													{
														"constant": false,
														"id": 811,
														"mutability": "mutable",
														"name": "price",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 894,
														"src": "2893:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 810,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2893:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 813,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2909:1:6",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2893:17:6"
											},
											{
												"assignments": [
													815
												],
												"declarations": [
													{
														"constant": false,
														"id": 815,
														"mutability": "mutable",
														"name": "tokenConfig",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 894,
														"src": "2920:31:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
															"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig"
														},
														"typeName": {
															"contractScope": null,
															"id": 814,
															"name": "TokenConfig",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 765,
															"src": "2920:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
																"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 819,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 816,
														"name": "tokenConfigs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "2954:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenConfig_$765_storage_$",
															"typeString": "mapping(address => struct DeveloperLendPriceProviderV1.TokenConfig storage ref)"
														}
													},
													"id": 818,
													"indexExpression": {
														"argumentTypes": null,
														"id": 817,
														"name": "_pToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "2967:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenConfig_$765_storage",
														"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2920:55:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 820,
														"name": "tokenConfig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "2989:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
															"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig storage pointer"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "fixedUsd",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 764,
													"src": "2989:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 836,
												"nodeType": "IfStatement",
												"src": "2985:158:6",
												"trueBody": {
													"id": 835,
													"nodeType": "Block",
													"src": "3011:132:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 822,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "3061:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3069:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3061:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 825,
															"nodeType": "ExpressionStatement",
															"src": "3061:9:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 831,
																			"name": "tokenConfig",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 815,
																			"src": "3111:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
																				"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig storage pointer"
																			}
																		},
																		"id": 832,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "baseUnit",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 762,
																		"src": "3111:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "31653336",
																				"id": 828,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3101:4:6",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																					"typeString": "int_const 1000...(29 digits omitted)...0000"
																				},
																				"value": "1e36"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																					"typeString": "int_const 1000...(29 digits omitted)...0000"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 826,
																				"name": "price",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 811,
																				"src": "3091:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 827,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 531,
																			"src": "3091:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3091:15:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 553,
																	"src": "3091:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3091:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 809,
															"id": 834,
															"nodeType": "Return",
															"src": "3084:48:6"
														}
													]
												}
											},
											{
												"assignments": [
													840
												],
												"declarations": [
													{
														"constant": false,
														"id": 840,
														"mutability": "mutable",
														"name": "priceOracles",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 894,
														"src": "3153:34:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_ptr",
															"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle[]"
														},
														"typeName": {
															"baseType": {
																"contractScope": null,
																"id": 838,
																"name": "PriceOracle",
																"nodeType": "UserDefinedTypeName",
																"referencedDeclaration": 754,
																"src": "3153:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PriceOracle_$754_storage_ptr",
																	"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle"
																}
															},
															"id": 839,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "3153:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_ptr",
																"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 844,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 841,
														"name": "oracles",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "3190:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct DeveloperLendPriceProviderV1.PriceOracle storage ref[] storage ref)"
														}
													},
													"id": 843,
													"indexExpression": {
														"argumentTypes": null,
														"id": 842,
														"name": "_pToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "3198:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3190:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage",
														"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3153:53:6"
											},
											{
												"body": {
													"id": 883,
													"nodeType": "Block",
													"src": "3266:347:6",
													"statements": [
														{
															"assignments": [
																857
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 857,
																	"mutability": "mutable",
																	"name": "priceOracle",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 883,
																	"src": "3280:31:6",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PriceOracle_$754_storage_ptr",
																		"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle"
																	},
																	"typeName": {
																		"contractScope": null,
																		"id": 856,
																		"name": "PriceOracle",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 754,
																		"src": "3280:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PriceOracle_$754_storage_ptr",
																			"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 861,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 858,
																	"name": "priceOracles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "3314:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_ptr",
																		"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle storage ref[] storage pointer"
																	}
																},
																"id": 860,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 859,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "3327:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3314:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PriceOracle_$754_storage",
																	"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3280:49:6"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 862,
																		"name": "priceOracle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 857,
																		"src": "3347:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PriceOracle_$754_storage_ptr",
																			"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle storage pointer"
																		}
																	},
																	"id": 863,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "available",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 753,
																	"src": "3347:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3372:4:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3347:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 882,
															"nodeType": "IfStatement",
															"src": "3343:260:6",
															"trueBody": {
																"id": 881,
																"nodeType": "Block",
																"src": "3378:225:6",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 872,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 866,
																				"name": "price",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 811,
																				"src": "3433:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 868,
																						"name": "_pToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 805,
																						"src": "3469:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"id": 869,
																						"name": "tokenConfig",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 815,
																						"src": "3478:11:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
																							"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig storage pointer"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"id": 870,
																						"name": "priceOracle",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 857,
																						"src": "3491:11:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PriceOracle_$754_storage_ptr",
																							"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle storage pointer"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
																							"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig storage pointer"
																						},
																						{
																							"typeIdentifier": "t_struct$_PriceOracle_$754_storage_ptr",
																							"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle storage pointer"
																						}
																					],
																					"id": 867,
																					"name": "_getUnderlyingPriceInternal",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1002,
																					"src": "3441:27:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_TokenConfig_$765_memory_ptr_$_t_struct$_PriceOracle_$754_memory_ptr_$returns$_t_uint256_$",
																						"typeString": "function (address,struct DeveloperLendPriceProviderV1.TokenConfig memory,struct DeveloperLendPriceProviderV1.PriceOracle memory) view returns (uint256)"
																					}
																				},
																				"id": 871,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3441:62:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3433:70:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 873,
																		"nodeType": "ExpressionStatement",
																		"src": "3433:70:6"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 876,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 874,
																				"name": "price",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 811,
																				"src": "3525:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 875,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3533:1:6",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "3525:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 880,
																		"nodeType": "IfStatement",
																		"src": "3521:68:6",
																		"trueBody": {
																			"id": 879,
																			"nodeType": "Block",
																			"src": "3536:53:6",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 877,
																						"name": "price",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 811,
																						"src": "3565:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 809,
																					"id": 878,
																					"nodeType": "Return",
																					"src": "3558:12:6"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 849,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "3236:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 850,
															"name": "priceOracles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "3240:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_ptr",
																"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle storage ref[] storage pointer"
															}
														},
														"id": 851,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3240:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3236:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 884,
												"initializationExpression": {
													"assignments": [
														846
													],
													"declarations": [
														{
															"constant": false,
															"id": 846,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 884,
															"src": "3221:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 845,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3221:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 848,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 847,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3233:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3221:13:6"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 854,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3261:3:6",
														"subExpression": {
															"argumentTypes": null,
															"id": 853,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "3261:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 855,
													"nodeType": "ExpressionStatement",
													"src": "3261:3:6"
												},
												"nodeType": "ForStatement",
												"src": "3216:397:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 886,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "3667:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3675:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3667:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7072696365206d75737420626967676572207468616e207a65726f",
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3678:29:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_83c65d06f3b8dca52d8c1dc23c36cd7153a6697b7a8e0cd7f5a997c4d63a10c0",
																"typeString": "literal_string \"price must bigger than zero\""
															},
															"value": "price must bigger than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_83c65d06f3b8dca52d8c1dc23c36cd7153a6697b7a8e0cd7f5a997c4d63a10c0",
																"typeString": "literal_string \"price must bigger than zero\""
															}
														],
														"id": 885,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3659:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3659:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "ExpressionStatement",
												"src": "3659:49:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3726:1:6",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 809,
												"id": 893,
												"nodeType": "Return",
												"src": "3719:8:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "fc57d4df",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUnderlyingPrice",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "_pToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 895,
												"src": "2837:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2837:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2836:17:6"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 895,
												"src": "2877:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2877:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2876:6:6"
									},
									"scope": 1697,
									"src": "2809:925:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1001,
										"nodeType": "Block",
										"src": "3886:1056:6",
										"statements": [
											{
												"assignments": [
													907
												],
												"declarations": [
													{
														"constant": false,
														"id": 907,
														"mutability": "mutable",
														"name": "underlying",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1001,
														"src": "3897:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 906,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3897:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 912,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3926:42:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3918:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 908,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3918:7:6",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3918:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3897:72:6"
											},
											{
												"assignments": [
													914
												],
												"declarations": [
													{
														"constant": false,
														"id": 914,
														"mutability": "mutable",
														"name": "pToken",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1001,
														"src": "3979:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PTokenInterface_$685",
															"typeString": "contract PTokenInterface"
														},
														"typeName": {
															"contractScope": null,
															"id": 913,
															"name": "PTokenInterface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 685,
															"src": "3979:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PTokenInterface_$685",
																"typeString": "contract PTokenInterface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 918,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 916,
															"name": "_pToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "4020:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 915,
														"name": "PTokenInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 685,
														"src": "4004:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_PTokenInterface_$685_$",
															"typeString": "type(contract PTokenInterface)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4004:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_PTokenInterface_$685",
														"typeString": "contract PTokenInterface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3979:49:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4043:42:6",
													"subExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"id": 920,
																		"name": "pToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 914,
																		"src": "4059:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_PTokenInterface_$685",
																			"typeString": "contract PTokenInterface"
																		}
																	},
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "symbol",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 684,
																	"src": "4059:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () view external returns (string memory)"
																	}
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4059:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "704d41544943",
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4076:8:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_ed29aff69a8af583c0122e518e356ea454ce436c8e3507f84252a9c3ee302d3f",
																	"typeString": "literal_string \"pMATIC\""
																},
																"value": "pMATIC"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_stringliteral_ed29aff69a8af583c0122e518e356ea454ce436c8e3507f84252a9c3ee302d3f",
																	"typeString": "literal_string \"pMATIC\""
																}
															],
															"id": 919,
															"name": "compareStrings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1677,
															"src": "4044:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (string memory,string memory) pure returns (bool)"
															}
														},
														"id": 924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4044:41:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 938,
												"nodeType": "IfStatement",
												"src": "4039:132:6",
												"trueBody": {
													"id": 937,
													"nodeType": "Block",
													"src": "4087:84:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 926,
																	"name": "underlying",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "4101:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 930,
																							"name": "_pToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 897,
																							"src": "4138:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 929,
																						"name": "PTokenInterface",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 685,
																						"src": "4122:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_PTokenInterface_$685_$",
																							"typeString": "type(contract PTokenInterface)"
																						}
																					},
																					"id": 931,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4122:24:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_PTokenInterface_$685",
																						"typeString": "contract PTokenInterface"
																					}
																				},
																				"id": 932,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "underlying",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 679,
																				"src": "4122:35:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																					"typeString": "function () view external returns (address)"
																				}
																			},
																			"id": 933,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4122:37:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4114:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 927,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4114:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4114:46:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4101:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 936,
															"nodeType": "ExpressionStatement",
															"src": "4101:59:6"
														}
													]
												}
											},
											{
												"assignments": [
													940
												],
												"declarations": [
													{
														"constant": false,
														"id": 940,
														"mutability": "mutable",
														"name": "sourceType",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1001,
														"src": "4181:26:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PriceOracleType_$747",
															"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
														},
														"typeName": {
															"contractScope": null,
															"id": 939,
															"name": "PriceOracleType",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 747,
															"src": "4181:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_PriceOracleType_$747",
																"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 943,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 941,
														"name": "priceOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "4210:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriceOracle_$754_memory_ptr",
															"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle memory"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sourceType",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 751,
													"src": "4210:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PriceOracleType_$747",
														"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4181:51:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_enum$_PriceOracleType_$747",
														"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 944,
														"name": "sourceType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "4246:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PriceOracleType_$747",
															"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 945,
															"name": "PriceOracleType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "4260:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_PriceOracleType_$747_$",
																"typeString": "type(enum DeveloperLendPriceProviderV1.PriceOracleType)"
															}
														},
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "ChainLink",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4260:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PriceOracleType_$747",
															"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
														}
													},
													"src": "4246:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_enum$_PriceOracleType_$747",
															"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 954,
															"name": "sourceType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "4382:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_PriceOracleType_$747",
																"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 955,
																"name": "PriceOracleType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "4396:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_PriceOracleType_$747_$",
																	"typeString": "type(enum DeveloperLendPriceProviderV1.PriceOracleType)"
																}
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "UniSwap",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4396:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_PriceOracleType_$747",
																"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
															}
														},
														"src": "4382:37:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_PriceOracleType_$747",
																"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
															},
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 964,
																"name": "sourceType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "4512:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PriceOracleType_$747",
																	"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 965,
																	"name": "PriceOracleType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "4526:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_PriceOracleType_$747_$",
																		"typeString": "type(enum DeveloperLendPriceProviderV1.PriceOracleType)"
																	}
																},
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Compound",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4526:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PriceOracleType_$747",
																	"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
																}
															},
															"src": "4512:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_enum$_PriceOracleType_$747",
																	"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 974,
																	"name": "sourceType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "4645:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_PriceOracleType_$747",
																		"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 975,
																		"name": "PriceOracleType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 747,
																		"src": "4659:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_PriceOracleType_$747_$",
																			"typeString": "type(enum DeveloperLendPriceProviderV1.PriceOracleType)"
																		}
																	},
																	"id": 976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "Customer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4659:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_PriceOracleType_$747",
																		"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
																	}
																},
																"src": "4645:38:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_enum$_PriceOracleType_$747",
																		"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
																	},
																	"id": 987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 984,
																		"name": "sourceType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "4778:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_PriceOracleType_$747",
																			"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 985,
																			"name": "PriceOracleType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "4792:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_PriceOracleType_$747_$",
																				"typeString": "type(enum DeveloperLendPriceProviderV1.PriceOracleType)"
																			}
																		},
																		"id": 986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "ChainLinkEthBase",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "4792:32:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_PriceOracleType_$747",
																			"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
																		}
																	},
																	"src": "4778:46:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": null,
																"id": 994,
																"nodeType": "IfStatement",
																"src": "4774:143:6",
																"trueBody": {
																	"id": 993,
																	"nodeType": "Block",
																	"src": "4826:91:6",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 989,
																						"name": "priceOracle",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 901,
																						"src": "4881:11:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PriceOracle_$754_memory_ptr",
																							"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle memory"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"id": 990,
																						"name": "tokenConfig",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 899,
																						"src": "4894:11:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TokenConfig_$765_memory_ptr",
																							"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_struct$_PriceOracle_$754_memory_ptr",
																							"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle memory"
																						},
																						{
																							"typeIdentifier": "t_struct$_TokenConfig_$765_memory_ptr",
																							"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig memory"
																						}
																					],
																					"id": 988,
																					"name": "_getChainLinkEthBasePriceInternal",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1267,
																					"src": "4847:33:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_struct$_PriceOracle_$754_memory_ptr_$_t_struct$_TokenConfig_$765_memory_ptr_$returns$_t_uint256_$",
																						"typeString": "function (struct DeveloperLendPriceProviderV1.PriceOracle memory,struct DeveloperLendPriceProviderV1.TokenConfig memory) view returns (uint256)"
																					}
																				},
																				"id": 991,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4847:59:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"functionReturnParameters": 905,
																			"id": 992,
																			"nodeType": "Return",
																			"src": "4840:66:6"
																		}
																	]
																}
															},
															"id": 995,
															"nodeType": "IfStatement",
															"src": "4641:276:6",
															"trueBody": {
																"id": 983,
																"nodeType": "Block",
																"src": "4685:83:6",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 979,
																					"name": "priceOracle",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 901,
																					"src": "4732:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PriceOracle_$754_memory_ptr",
																						"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle memory"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 980,
																					"name": "tokenConfig",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 899,
																					"src": "4745:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenConfig_$765_memory_ptr",
																						"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_PriceOracle_$754_memory_ptr",
																						"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle memory"
																					},
																					{
																						"typeIdentifier": "t_struct$_TokenConfig_$765_memory_ptr",
																						"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig memory"
																					}
																				],
																				"id": 978,
																				"name": "_getCustomerPriceInternal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1100,
																				"src": "4706:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_PriceOracle_$754_memory_ptr_$_t_struct$_TokenConfig_$765_memory_ptr_$returns$_t_uint256_$",
																					"typeString": "function (struct DeveloperLendPriceProviderV1.PriceOracle memory,struct DeveloperLendPriceProviderV1.TokenConfig memory) view returns (uint256)"
																				}
																			},
																			"id": 981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4706:51:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 905,
																		"id": 982,
																		"nodeType": "Return",
																		"src": "4699:58:6"
																	}
																]
															}
														},
														"id": 996,
														"nodeType": "IfStatement",
														"src": "4508:409:6",
														"trueBody": {
															"id": 973,
															"nodeType": "Block",
															"src": "4552:83:6",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 969,
																				"name": "priceOracle",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 901,
																				"src": "4599:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PriceOracle_$754_memory_ptr",
																					"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 970,
																				"name": "tokenConfig",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 899,
																				"src": "4612:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenConfig_$765_memory_ptr",
																					"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_struct$_PriceOracle_$754_memory_ptr",
																					"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle memory"
																				},
																				{
																					"typeIdentifier": "t_struct$_TokenConfig_$765_memory_ptr",
																					"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig memory"
																				}
																			],
																			"id": 968,
																			"name": "_getCompoundPriceInternal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1141,
																			"src": "4573:25:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_struct$_PriceOracle_$754_memory_ptr_$_t_struct$_TokenConfig_$765_memory_ptr_$returns$_t_uint256_$",
																				"typeString": "function (struct DeveloperLendPriceProviderV1.PriceOracle memory,struct DeveloperLendPriceProviderV1.TokenConfig memory) view returns (uint256)"
																			}
																		},
																		"id": 971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4573:51:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 905,
																	"id": 972,
																	"nodeType": "Return",
																	"src": "4566:58:6"
																}
															]
														}
													},
													"id": 997,
													"nodeType": "IfStatement",
													"src": "4378:539:6",
													"trueBody": {
														"id": 963,
														"nodeType": "Block",
														"src": "4421:82:6",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 959,
																			"name": "priceOracle",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 901,
																			"src": "4467:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PriceOracle_$754_memory_ptr",
																				"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle memory"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 960,
																			"name": "tokenConfig",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 899,
																			"src": "4480:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenConfig_$765_memory_ptr",
																				"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_PriceOracle_$754_memory_ptr",
																				"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle memory"
																			},
																			{
																				"typeIdentifier": "t_struct$_TokenConfig_$765_memory_ptr",
																				"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig memory"
																			}
																		],
																		"id": 958,
																		"name": "_getUniSwapPriceInternal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1051,
																		"src": "4442:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_PriceOracle_$754_memory_ptr_$_t_struct$_TokenConfig_$765_memory_ptr_$returns$_t_uint256_$",
																			"typeString": "function (struct DeveloperLendPriceProviderV1.PriceOracle memory,struct DeveloperLendPriceProviderV1.TokenConfig memory) view returns (uint256)"
																		}
																	},
																	"id": 961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4442:50:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 905,
																"id": 962,
																"nodeType": "Return",
																"src": "4435:57:6"
															}
														]
													}
												},
												"id": 998,
												"nodeType": "IfStatement",
												"src": "4242:675:6",
												"trueBody": {
													"id": 953,
													"nodeType": "Block",
													"src": "4287:84:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 949,
																		"name": "priceOracle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 901,
																		"src": "4335:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PriceOracle_$754_memory_ptr",
																			"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle memory"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 950,
																		"name": "tokenConfig",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 899,
																		"src": "4348:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenConfig_$765_memory_ptr",
																			"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_PriceOracle_$754_memory_ptr",
																			"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle memory"
																		},
																		{
																			"typeIdentifier": "t_struct$_TokenConfig_$765_memory_ptr",
																			"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig memory"
																		}
																	],
																	"id": 948,
																	"name": "_getChainlinkPriceInternal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "4308:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_PriceOracle_$754_memory_ptr_$_t_struct$_TokenConfig_$765_memory_ptr_$returns$_t_uint256_$",
																		"typeString": "function (struct DeveloperLendPriceProviderV1.PriceOracle memory,struct DeveloperLendPriceProviderV1.TokenConfig memory) view returns (uint256)"
																	}
																},
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4308:52:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 905,
															"id": 952,
															"nodeType": "Return",
															"src": "4301:59:6"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4934:1:6",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 905,
												"id": 1000,
												"nodeType": "Return",
												"src": "4927:8:6"
											}
										]
									},
									"documentation": null,
									"id": 1002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getUnderlyingPriceInternal",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "_pToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1002,
												"src": "3777:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "tokenConfig",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1002,
												"src": "3794:30:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenConfig_$765_memory_ptr",
													"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig"
												},
												"typeName": {
													"contractScope": null,
													"id": 898,
													"name": "TokenConfig",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 765,
													"src": "3794:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
														"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "priceOracle",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1002,
												"src": "3826:30:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PriceOracle_$754_memory_ptr",
													"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle"
												},
												"typeName": {
													"contractScope": null,
													"id": 900,
													"name": "PriceOracle",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 754,
													"src": "3826:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PriceOracle_$754_storage_ptr",
														"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3776:81:6"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1002,
												"src": "3881:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3881:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3880:6:6"
									},
									"scope": 1697,
									"src": "3740:1202:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "5075:441:6",
										"statements": [
											{
												"assignments": [
													1012
												],
												"declarations": [
													{
														"constant": false,
														"id": 1012,
														"mutability": "mutable",
														"name": "source",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1050,
														"src": "5085:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1011,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5085:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1015,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1013,
														"name": "priceOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "5102:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriceOracle_$754_memory_ptr",
															"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle memory"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "source",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 749,
													"src": "5102:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5085:35:6"
											},
											{
												"assignments": [
													1017
												],
												"declarations": [
													{
														"constant": false,
														"id": 1017,
														"mutability": "mutable",
														"name": "uniSwapPriceOracle",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1050,
														"src": "5130:46:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_UniSwapPriceOracleInterface_$693",
															"typeString": "contract UniSwapPriceOracleInterface"
														},
														"typeName": {
															"contractScope": null,
															"id": 1016,
															"name": "UniSwapPriceOracleInterface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 693,
															"src": "5130:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_UniSwapPriceOracleInterface_$693",
																"typeString": "contract UniSwapPriceOracleInterface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1021,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1019,
															"name": "source",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "5207:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1018,
														"name": "UniSwapPriceOracleInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "5179:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_UniSwapPriceOracleInterface_$693_$",
															"typeString": "type(contract UniSwapPriceOracleInterface)"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5179:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_UniSwapPriceOracleInterface_$693",
														"typeString": "contract UniSwapPriceOracleInterface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5130:84:6"
											},
											{
												"assignments": [
													1023
												],
												"declarations": [
													{
														"constant": false,
														"id": 1023,
														"mutability": "mutable",
														"name": "price",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1050,
														"src": "5224:10:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1022,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5224:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1029,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1026,
																"name": "tokenConfig",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1006,
																"src": "5272:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenConfig_$765_memory_ptr",
																	"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig memory"
																}
															},
															"id": 1027,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "underlying",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 758,
															"src": "5272:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1024,
															"name": "uniSwapPriceOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "5237:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_UniSwapPriceOracleInterface_$693",
																"typeString": "contract UniSwapPriceOracleInterface"
															}
														},
														"id": 1025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getUniSwapPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 692,
														"src": "5237:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5237:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5224:71:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1030,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "5309:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1031,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5318:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5309:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1048,
													"nodeType": "Block",
													"src": "5360:150:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1044,
																			"name": "tokenConfig",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1006,
																			"src": "5478:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenConfig_$765_memory_ptr",
																				"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig memory"
																			}
																		},
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "baseUnit",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 762,
																		"src": "5478:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "31653238",
																				"id": 1041,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5468:4:6",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
																					"typeString": "int_const 10000000000000000000000000000"
																				},
																				"value": "1e28"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
																					"typeString": "int_const 10000000000000000000000000000"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1038,
																						"name": "price",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1023,
																						"src": "5457:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1037,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "5452:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1036,
																						"name": "uint",
																						"nodeType": "ElementaryTypeName",
																						"src": "5452:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": null,
																							"typeString": null
																						}
																					}
																				},
																				"id": 1039,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5452:11:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 531,
																			"src": "5452:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5452:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 553,
																	"src": "5452:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5452:47:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1010,
															"id": 1047,
															"nodeType": "Return",
															"src": "5445:54:6"
														}
													]
												},
												"id": 1049,
												"nodeType": "IfStatement",
												"src": "5305:205:6",
												"trueBody": {
													"id": 1035,
													"nodeType": "Block",
													"src": "5321:33:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5342:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1010,
															"id": 1034,
															"nodeType": "Return",
															"src": "5335:8:6"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getUniSwapPriceInternal",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "priceOracle",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1051,
												"src": "4982:30:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PriceOracle_$754_memory_ptr",
													"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle"
												},
												"typeName": {
													"contractScope": null,
													"id": 1003,
													"name": "PriceOracle",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 754,
													"src": "4982:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PriceOracle_$754_storage_ptr",
														"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "tokenConfig",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1051,
												"src": "5014:30:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenConfig_$765_memory_ptr",
													"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig"
												},
												"typeName": {
													"contractScope": null,
													"id": 1005,
													"name": "TokenConfig",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 765,
													"src": "5014:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
														"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4981:64:6"
									},
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1051,
												"src": "5069:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5069:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5068:6:6"
									},
									"scope": 1697,
									"src": "4948:568:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "5650:448:6",
										"statements": [
											{
												"assignments": [
													1061
												],
												"declarations": [
													{
														"constant": false,
														"id": 1061,
														"mutability": "mutable",
														"name": "source",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1099,
														"src": "5660:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1060,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5660:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1064,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1062,
														"name": "priceOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "5677:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriceOracle_$754_memory_ptr",
															"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle memory"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "source",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 749,
													"src": "5677:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5660:35:6"
											},
											{
												"assignments": [
													1066
												],
												"declarations": [
													{
														"constant": false,
														"id": 1066,
														"mutability": "mutable",
														"name": "customerPriceOracle",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1099,
														"src": "5705:53:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_DeveloperLendPriceOracleInterface_$667",
															"typeString": "contract DeveloperLendPriceOracleInterface"
														},
														"typeName": {
															"contractScope": null,
															"id": 1065,
															"name": "DeveloperLendPriceOracleInterface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 667,
															"src": "5705:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_DeveloperLendPriceOracleInterface_$667",
																"typeString": "contract DeveloperLendPriceOracleInterface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1070,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1068,
															"name": "source",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "5795:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1067,
														"name": "DeveloperLendPriceOracleInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "5761:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_DeveloperLendPriceOracleInterface_$667_$",
															"typeString": "type(contract DeveloperLendPriceOracleInterface)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5761:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_DeveloperLendPriceOracleInterface_$667",
														"typeString": "contract DeveloperLendPriceOracleInterface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5705:97:6"
											},
											{
												"assignments": [
													1072
												],
												"declarations": [
													{
														"constant": false,
														"id": 1072,
														"mutability": "mutable",
														"name": "price",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1099,
														"src": "5812:10:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1071,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5812:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1078,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1075,
																"name": "tokenConfig",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1055,
																"src": "5854:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenConfig_$765_memory_ptr",
																	"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig memory"
																}
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "underlying",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 758,
															"src": "5854:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1073,
															"name": "customerPriceOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "5825:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_DeveloperLendPriceOracleInterface_$667",
																"typeString": "contract DeveloperLendPriceOracleInterface"
															}
														},
														"id": 1074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 657,
														"src": "5825:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5825:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5812:65:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1079,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "5891:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1080,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5900:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5891:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1097,
													"nodeType": "Block",
													"src": "5942:150:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1093,
																			"name": "tokenConfig",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1055,
																			"src": "6060:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenConfig_$765_memory_ptr",
																				"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig memory"
																			}
																		},
																		"id": 1094,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "baseUnit",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 762,
																		"src": "6060:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "31653238",
																				"id": 1090,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6050:4:6",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
																					"typeString": "int_const 10000000000000000000000000000"
																				},
																				"value": "1e28"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
																					"typeString": "int_const 10000000000000000000000000000"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1087,
																						"name": "price",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1072,
																						"src": "6039:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1086,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6034:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1085,
																						"name": "uint",
																						"nodeType": "ElementaryTypeName",
																						"src": "6034:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": null,
																							"typeString": null
																						}
																					}
																				},
																				"id": 1088,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6034:11:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 531,
																			"src": "6034:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6034:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 553,
																	"src": "6034:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6034:47:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1059,
															"id": 1096,
															"nodeType": "Return",
															"src": "6027:54:6"
														}
													]
												},
												"id": 1098,
												"nodeType": "IfStatement",
												"src": "5887:205:6",
												"trueBody": {
													"id": 1084,
													"nodeType": "Block",
													"src": "5903:33:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5924:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1059,
															"id": 1083,
															"nodeType": "Return",
															"src": "5917:8:6"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getCustomerPriceInternal",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "priceOracle",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1100,
												"src": "5557:30:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PriceOracle_$754_memory_ptr",
													"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle"
												},
												"typeName": {
													"contractScope": null,
													"id": 1052,
													"name": "PriceOracle",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 754,
													"src": "5557:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PriceOracle_$754_storage_ptr",
														"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "tokenConfig",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1100,
												"src": "5589:30:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenConfig_$765_memory_ptr",
													"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig"
												},
												"typeName": {
													"contractScope": null,
													"id": 1054,
													"name": "TokenConfig",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 765,
													"src": "5589:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
														"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5556:64:6"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1100,
												"src": "5644:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5644:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5643:6:6"
									},
									"scope": 1697,
									"src": "5522:576:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1140,
										"nodeType": "Block",
										"src": "6270:400:6",
										"statements": [
											{
												"assignments": [
													1110
												],
												"declarations": [
													{
														"constant": false,
														"id": 1110,
														"mutability": "mutable",
														"name": "source",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1140,
														"src": "6280:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6280:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1113,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1111,
														"name": "priceOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "6297:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriceOracle_$754_memory_ptr",
															"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle memory"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "source",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 749,
													"src": "6297:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6280:35:6"
											},
											{
												"assignments": [
													1115
												],
												"declarations": [
													{
														"constant": false,
														"id": 1115,
														"mutability": "mutable",
														"name": "compoundPriceOracle",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1140,
														"src": "6325:48:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CompoundPriceOracleInterface_$736",
															"typeString": "contract CompoundPriceOracleInterface"
														},
														"typeName": {
															"contractScope": null,
															"id": 1114,
															"name": "CompoundPriceOracleInterface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 736,
															"src": "6325:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CompoundPriceOracleInterface_$736",
																"typeString": "contract CompoundPriceOracleInterface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1119,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1117,
															"name": "source",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "6405:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1116,
														"name": "CompoundPriceOracleInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "6376:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_CompoundPriceOracleInterface_$736_$",
															"typeString": "type(contract CompoundPriceOracleInterface)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6376:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_CompoundPriceOracleInterface_$736",
														"typeString": "contract CompoundPriceOracleInterface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6325:87:6"
											},
											{
												"assignments": [
													1123
												],
												"declarations": [
													{
														"constant": false,
														"id": 1123,
														"mutability": "mutable",
														"name": "ctc",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1140,
														"src": "6422:52:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CTokenConfig_$714_memory_ptr",
															"typeString": "struct CompoundPriceOracleInterface.CTokenConfig"
														},
														"typeName": {
															"contractScope": null,
															"id": 1122,
															"name": "CompoundPriceOracleInterface.CTokenConfig",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 714,
															"src": "6422:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CTokenConfig_$714_storage_ptr",
																"typeString": "struct CompoundPriceOracleInterface.CTokenConfig"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1129,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1126,
																"name": "tokenConfig",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "6520:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenConfig_$765_memory_ptr",
																	"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig memory"
																}
															},
															"id": 1127,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "underlyingSymbol",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 760,
															"src": "6520:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1124,
															"name": "compoundPriceOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "6477:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CompoundPriceOracleInterface_$736",
																"typeString": "contract CompoundPriceOracleInterface"
															}
														},
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getTokenConfigBySymbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 735,
														"src": "6477:42:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_struct$_CTokenConfig_$714_memory_ptr_$",
															"typeString": "function (string memory) view external returns (struct CompoundPriceOracleInterface.CTokenConfig memory)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6477:72:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CTokenConfig_$714_memory_ptr",
														"typeString": "struct CompoundPriceOracleInterface.CTokenConfig memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6422:127:6"
											},
											{
												"assignments": [
													1131
												],
												"declarations": [
													{
														"constant": false,
														"id": 1131,
														"mutability": "mutable",
														"name": "cTokenAddress",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1140,
														"src": "6559:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1130,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6559:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1134,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1132,
														"name": "ctc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "6583:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CTokenConfig_$714_memory_ptr",
															"typeString": "struct CompoundPriceOracleInterface.CTokenConfig memory"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "cToken",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 699,
													"src": "6583:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6559:34:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1137,
															"name": "cTokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "6649:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1135,
															"name": "compoundPriceOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "6610:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CompoundPriceOracleInterface_$736",
																"typeString": "contract CompoundPriceOracleInterface"
															}
														},
														"id": 1136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getUnderlyingPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 721,
														"src": "6610:38:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6610:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1108,
												"id": 1139,
												"nodeType": "Return",
												"src": "6603:60:6"
											}
										]
									},
									"documentation": null,
									"id": 1141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getCompoundPriceInternal",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "priceOracle",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1141,
												"src": "6177:30:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PriceOracle_$754_memory_ptr",
													"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle"
												},
												"typeName": {
													"contractScope": null,
													"id": 1101,
													"name": "PriceOracle",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 754,
													"src": "6177:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PriceOracle_$754_storage_ptr",
														"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "tokenConfig",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1141,
												"src": "6209:30:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenConfig_$765_memory_ptr",
													"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig"
												},
												"typeName": {
													"contractScope": null,
													"id": 1103,
													"name": "TokenConfig",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 765,
													"src": "6209:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
														"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6176:64:6"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1141,
												"src": "6264:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6264:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6263:6:6"
									},
									"scope": 1697,
									"src": "6142:528:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "6844:446:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1151,
																	"name": "tokenConfig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1145,
																	"src": "6863:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenConfig_$765_memory_ptr",
																		"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig memory"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "baseUnit",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 762,
																"src": "6863:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6886:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6863:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "62617365556e6974206d7573742062652067726561746572207468616e207a65726f",
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6889:36:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_26c43426bdd4669a6fb3b68bef9c9cb5db82092d45429c4ecf23b6be711d62b5",
																"typeString": "literal_string \"baseUnit must be greater than zero\""
															},
															"value": "baseUnit must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_26c43426bdd4669a6fb3b68bef9c9cb5db82092d45429c4ecf23b6be711d62b5",
																"typeString": "literal_string \"baseUnit must be greater than zero\""
															}
														],
														"id": 1150,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6855:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6855:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1157,
												"nodeType": "ExpressionStatement",
												"src": "6855:71:6"
											},
											{
												"assignments": [
													1159
												],
												"declarations": [
													{
														"constant": false,
														"id": 1159,
														"mutability": "mutable",
														"name": "priceFeed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1191,
														"src": "6937:31:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														},
														"typeName": {
															"contractScope": null,
															"id": 1158,
															"name": "AggregatorV3Interface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 45,
															"src": "6937:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1164,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1161,
																"name": "priceOracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1143,
																"src": "6993:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PriceOracle_$754_memory_ptr",
																	"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle memory"
																}
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "source",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 749,
															"src": "6993:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1160,
														"name": "AggregatorV3Interface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "6971:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
															"typeString": "type(contract AggregatorV3Interface)"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6971:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6937:75:6"
											},
											{
												"assignments": [
													null,
													1166,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1166,
														"mutability": "mutable",
														"name": "price",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1191,
														"src": "7024:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1165,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "7024:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1170,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 1167,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "7040:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "7040:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7040:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7022:45:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1171,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "7082:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1172,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7091:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7082:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1189,
													"nodeType": "Block",
													"src": "7133:150:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1185,
																			"name": "tokenConfig",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "7251:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenConfig_$765_memory_ptr",
																				"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig memory"
																			}
																		},
																		"id": 1186,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "baseUnit",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 762,
																		"src": "7251:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "31653238",
																				"id": 1182,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7241:4:6",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
																					"typeString": "int_const 10000000000000000000000000000"
																				},
																				"value": "1e28"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
																					"typeString": "int_const 10000000000000000000000000000"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1179,
																						"name": "price",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1166,
																						"src": "7230:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1178,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7225:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1177,
																						"name": "uint",
																						"nodeType": "ElementaryTypeName",
																						"src": "7225:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": null,
																							"typeString": null
																						}
																					}
																				},
																				"id": 1180,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7225:11:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 531,
																			"src": "7225:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7225:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 553,
																	"src": "7225:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7225:47:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1149,
															"id": 1188,
															"nodeType": "Return",
															"src": "7218:54:6"
														}
													]
												},
												"id": 1190,
												"nodeType": "IfStatement",
												"src": "7078:205:6",
												"trueBody": {
													"id": 1176,
													"nodeType": "Block",
													"src": "7094:33:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7115:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1149,
															"id": 1175,
															"nodeType": "Return",
															"src": "7108:8:6"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getChainlinkPriceInternal",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "priceOracle",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1192,
												"src": "6752:30:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PriceOracle_$754_memory_ptr",
													"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle"
												},
												"typeName": {
													"contractScope": null,
													"id": 1142,
													"name": "PriceOracle",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 754,
													"src": "6752:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PriceOracle_$754_storage_ptr",
														"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "tokenConfig",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1192,
												"src": "6784:30:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenConfig_$765_memory_ptr",
													"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig"
												},
												"typeName": {
													"contractScope": null,
													"id": 1144,
													"name": "TokenConfig",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 765,
													"src": "6784:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
														"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6751:64:6"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1192,
												"src": "6839:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6839:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6838:6:6"
									},
									"scope": 1697,
									"src": "6716:574:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1266,
										"nodeType": "Block",
										"src": "7468:719:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1202,
																	"name": "tokenConfig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "7486:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenConfig_$765_memory_ptr",
																		"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig memory"
																	}
																},
																"id": 1203,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "baseUnit",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 762,
																"src": "7486:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7509:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7486:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "62617365556e6974206d7573742062652067726561746572207468616e207a65726f",
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7512:36:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_26c43426bdd4669a6fb3b68bef9c9cb5db82092d45429c4ecf23b6be711d62b5",
																"typeString": "literal_string \"baseUnit must be greater than zero\""
															},
															"value": "baseUnit must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_26c43426bdd4669a6fb3b68bef9c9cb5db82092d45429c4ecf23b6be711d62b5",
																"typeString": "literal_string \"baseUnit must be greater than zero\""
															}
														],
														"id": 1201,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7478:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7478:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1208,
												"nodeType": "ExpressionStatement",
												"src": "7478:71:6"
											},
											{
												"assignments": [
													1210
												],
												"declarations": [
													{
														"constant": false,
														"id": 1210,
														"mutability": "mutable",
														"name": "token",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1266,
														"src": "7560:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1209,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7560:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1213,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1211,
														"name": "tokenConfig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1196,
														"src": "7576:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenConfig_$765_memory_ptr",
															"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig memory"
														}
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "underlying",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 758,
													"src": "7576:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7560:38:6"
											},
											{
												"assignments": [
													1215
												],
												"declarations": [
													{
														"constant": false,
														"id": 1215,
														"mutability": "mutable",
														"name": "tokenEthPriceFeed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1266,
														"src": "7608:39:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														},
														"typeName": {
															"contractScope": null,
															"id": 1214,
															"name": "AggregatorV3Interface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 45,
															"src": "7608:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1221,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1217,
																"name": "chainLinkTokenEthPriceFeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 778,
																"src": "7672:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 1219,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1218,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1210,
																"src": "7699:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7672:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1216,
														"name": "AggregatorV3Interface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "7650:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
															"typeString": "type(contract AggregatorV3Interface)"
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7650:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7608:98:6"
											},
											{
												"assignments": [
													null,
													1223,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1223,
														"mutability": "mutable",
														"name": "tokenEthPrice",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1266,
														"src": "7718:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1222,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "7718:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1227,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 1224,
															"name": "tokenEthPriceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "7742:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "7742:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7742:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7716:61:6"
											},
											{
												"assignments": [
													1229
												],
												"declarations": [
													{
														"constant": false,
														"id": 1229,
														"mutability": "mutable",
														"name": "ethUsdPriceFeed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1266,
														"src": "7788:37:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														},
														"typeName": {
															"contractScope": null,
															"id": 1228,
															"name": "AggregatorV3Interface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 45,
															"src": "7788:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1233,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1231,
															"name": "ethUsdPriceFeedAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "7850:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1230,
														"name": "AggregatorV3Interface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "7828:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
															"typeString": "type(contract AggregatorV3Interface)"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7828:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7788:85:6"
											},
											{
												"assignments": [
													null,
													1235,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1235,
														"mutability": "mutable",
														"name": "ethUsdPrice",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1266,
														"src": "7885:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1234,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "7885:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1239,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 1236,
															"name": "ethUsdPriceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "7907:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "7907:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7907:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7883:57:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1240,
														"name": "tokenEthPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "7955:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7972:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7955:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1264,
													"nodeType": "Block",
													"src": "8014:167:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1260,
																			"name": "tokenConfig",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1196,
																			"src": "8149:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenConfig_$765_memory_ptr",
																				"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig memory"
																			}
																		},
																		"id": 1261,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "baseUnit",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 762,
																		"src": "8149:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "31653130",
																				"id": 1257,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8139:4:6",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000000000_by_1",
																					"typeString": "int_const 10000000000"
																				},
																				"value": "1e10"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_10000000000_by_1",
																					"typeString": "int_const 10000000000"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 1253,
																								"name": "ethUsdPrice",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1235,
																								"src": "8121:11:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								}
																							],
																							"id": 1252,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "8116:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1251,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "8116:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": null,
																									"typeString": null
																								}
																							}
																						},
																						"id": 1254,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "8116:17:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 1248,
																								"name": "tokenEthPrice",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1223,
																								"src": "8097:13:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								}
																							],
																							"id": 1247,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "8092:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1246,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "8092:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": null,
																									"typeString": null
																								}
																							}
																						},
																						"id": 1249,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "8092:19:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1250,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 531,
																					"src": "8092:23:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1255,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8092:42:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1256,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 531,
																			"src": "8092:46:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8092:52:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 553,
																	"src": "8092:56:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8092:78:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1200,
															"id": 1263,
															"nodeType": "Return",
															"src": "8085:85:6"
														}
													]
												},
												"id": 1265,
												"nodeType": "IfStatement",
												"src": "7951:230:6",
												"trueBody": {
													"id": 1245,
													"nodeType": "Block",
													"src": "7975:33:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7996:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1200,
															"id": 1244,
															"nodeType": "Return",
															"src": "7989:8:6"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getChainLinkEthBasePriceInternal",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "priceOracle",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1267,
												"src": "7376:30:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PriceOracle_$754_memory_ptr",
													"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle"
												},
												"typeName": {
													"contractScope": null,
													"id": 1193,
													"name": "PriceOracle",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 754,
													"src": "7376:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PriceOracle_$754_storage_ptr",
														"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "tokenConfig",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1267,
												"src": "7408:30:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenConfig_$765_memory_ptr",
													"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig"
												},
												"typeName": {
													"contractScope": null,
													"id": 1195,
													"name": "TokenConfig",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 765,
													"src": "7408:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
														"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7375:64:6"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1267,
												"src": "7463:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7463:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7462:6:6"
									},
									"scope": 1697,
									"src": "7333:854:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1404,
										"nodeType": "Block",
										"src": "8409:1004:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1289,
																	"name": "sources",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1280,
																	"src": "8428:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "8428:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1291,
																	"name": "sourceTypes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "8446:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_enum$_PriceOracleType_$747_$dyn_calldata_ptr",
																		"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType[] calldata"
																	}
																},
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "8446:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8428:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "736f7572636554797065732e6c656e677468206d75737420657175616c207468616e20736f75726365732e6c656e677468",
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8466:51:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b8f8657d9e427d2d5cb5e607901bb726770ea79b354038c5269a26beb4fb19a",
																"typeString": "literal_string \"sourceTypes.length must equal than sources.length\""
															},
															"value": "sourceTypes.length must equal than sources.length"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b8f8657d9e427d2d5cb5e607901bb726770ea79b354038c5269a26beb4fb19a",
																"typeString": "literal_string \"sourceTypes.length must equal than sources.length\""
															}
														],
														"id": 1288,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8420:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8420:98:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1296,
												"nodeType": "ExpressionStatement",
												"src": "8420:98:6"
											},
											{
												"assignments": [
													1298
												],
												"declarations": [
													{
														"constant": false,
														"id": 1298,
														"mutability": "mutable",
														"name": "tokenConfig",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1404,
														"src": "8556:31:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
															"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig"
														},
														"typeName": {
															"contractScope": null,
															"id": 1297,
															"name": "TokenConfig",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 765,
															"src": "8556:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
																"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1302,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1299,
														"name": "tokenConfigs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "8590:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenConfig_$765_storage_$",
															"typeString": "mapping(address => struct DeveloperLendPriceProviderV1.TokenConfig storage ref)"
														}
													},
													"id": 1301,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1300,
														"name": "pToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1269,
														"src": "8603:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8590:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenConfig_$765_storage",
														"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8556:54:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1304,
																	"name": "tokenConfig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1298,
																	"src": "8628:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
																		"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig storage pointer"
																	}
																},
																"id": 1305,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "pToken",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 756,
																"src": "8628:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8658:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8650:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1306,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8650:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8650:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8628:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "62616420706172616d73",
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8662:12:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_297d8e1f9f35243be441afa6ee90a2edad43706fc019a4dd01b3018b46b1121b",
																"typeString": "literal_string \"bad params\""
															},
															"value": "bad params"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_297d8e1f9f35243be441afa6ee90a2edad43706fc019a4dd01b3018b46b1121b",
																"typeString": "literal_string \"bad params\""
															}
														],
														"id": 1303,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8620:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8620:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1313,
												"nodeType": "ExpressionStatement",
												"src": "8620:55:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1314,
															"name": "tokenConfig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "8685:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
																"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig storage pointer"
															}
														},
														"id": 1316,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "pToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 756,
														"src": "8685:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1317,
														"name": "pToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1269,
														"src": "8706:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8685:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1319,
												"nodeType": "ExpressionStatement",
												"src": "8685:27:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1320,
															"name": "tokenConfig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "8722:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
																"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig storage pointer"
															}
														},
														"id": 1322,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "underlying",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 758,
														"src": "8722:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1323,
														"name": "underlying",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1271,
														"src": "8747:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8722:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1325,
												"nodeType": "ExpressionStatement",
												"src": "8722:35:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1326,
															"name": "tokenConfig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "8767:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
																"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig storage pointer"
															}
														},
														"id": 1328,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "underlyingSymbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 760,
														"src": "8767:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1329,
														"name": "underlyingSymbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1273,
														"src": "8798:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8767:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1331,
												"nodeType": "ExpressionStatement",
												"src": "8767:47:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1332,
															"name": "tokenConfig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "8824:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
																"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig storage pointer"
															}
														},
														"id": 1334,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "baseUnit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 762,
														"src": "8824:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1335,
														"name": "baseUnit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "8847:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8824:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1337,
												"nodeType": "ExpressionStatement",
												"src": "8824:31:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1338,
															"name": "tokenConfig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "8865:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
																"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig storage pointer"
															}
														},
														"id": 1340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "fixedUsd",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 764,
														"src": "8865:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1341,
														"name": "fixedUsd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "8888:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8865:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1343,
												"nodeType": "ExpressionStatement",
												"src": "8865:31:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1345,
																		"name": "oracles",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 774,
																		"src": "8943:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_$",
																			"typeString": "mapping(address => struct DeveloperLendPriceProviderV1.PriceOracle storage ref[] storage ref)"
																		}
																	},
																	"id": 1347,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1346,
																		"name": "pToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1269,
																		"src": "8951:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8943:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage",
																		"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle storage ref[] storage ref"
																	}
																},
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "8943:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 1349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8968:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "8943:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "62616420706172616d73",
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8971:12:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_297d8e1f9f35243be441afa6ee90a2edad43706fc019a4dd01b3018b46b1121b",
																"typeString": "literal_string \"bad params\""
															},
															"value": "bad params"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_297d8e1f9f35243be441afa6ee90a2edad43706fc019a4dd01b3018b46b1121b",
																"typeString": "literal_string \"bad params\""
															}
														],
														"id": 1344,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8935:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8935:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1353,
												"nodeType": "ExpressionStatement",
												"src": "8935:49:6"
											},
											{
												"body": {
													"id": 1387,
													"nodeType": "Block",
													"src": "9036:225:6",
													"statements": [
														{
															"assignments": [
																1368
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1368,
																	"mutability": "mutable",
																	"name": "list",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1387,
																	"src": "9050:26:6",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_ptr",
																		"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle[]"
																	},
																	"typeName": {
																		"baseType": {
																			"contractScope": null,
																			"id": 1366,
																			"name": "PriceOracle",
																			"nodeType": "UserDefinedTypeName",
																			"referencedDeclaration": 754,
																			"src": "9050:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PriceOracle_$754_storage_ptr",
																				"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle"
																			}
																		},
																		"id": 1367,
																		"length": null,
																		"nodeType": "ArrayTypeName",
																		"src": "9050:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_ptr",
																			"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle[]"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1372,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1369,
																	"name": "oracles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "9079:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_$",
																		"typeString": "mapping(address => struct DeveloperLendPriceProviderV1.PriceOracle storage ref[] storage ref)"
																	}
																},
																"id": 1371,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1370,
																	"name": "pToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "9087:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9079:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage",
																	"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle storage ref[] storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9050:44:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1377,
																					"name": "sources",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1280,
																					"src": "9153:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 1379,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1378,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1355,
																					"src": "9161:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "9153:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1380,
																					"name": "sourceTypes",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1283,
																					"src": "9190:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_enum$_PriceOracleType_$747_$dyn_calldata_ptr",
																						"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType[] calldata"
																					}
																				},
																				"id": 1382,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1381,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1355,
																					"src": "9202:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "9190:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_PriceOracleType_$747",
																					"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"hexValue": "74727565",
																				"id": 1383,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9230:4:6",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_enum$_PriceOracleType_$747",
																					"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1376,
																			"name": "PriceOracle",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 754,
																			"src": "9118:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_PriceOracle_$754_storage_ptr_$",
																				"typeString": "type(struct DeveloperLendPriceProviderV1.PriceOracle storage pointer)"
																			}
																		},
																		"id": 1384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"names": [
																			"source",
																			"sourceType",
																			"available"
																		],
																		"nodeType": "FunctionCall",
																		"src": "9118:131:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PriceOracle_$754_memory_ptr",
																			"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_PriceOracle_$754_memory_ptr",
																			"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle memory"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1373,
																		"name": "list",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1368,
																		"src": "9108:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_ptr",
																			"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle storage ref[] storage pointer"
																		}
																	},
																	"id": 1375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "9108:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PriceOracle_$754_storage_$returns$__$",
																		"typeString": "function (struct DeveloperLendPriceProviderV1.PriceOracle storage ref)"
																	}
																},
																"id": 1385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9108:142:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1386,
															"nodeType": "ExpressionStatement",
															"src": "9108:142:6"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1358,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1355,
														"src": "9011:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1359,
															"name": "sources",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "9015:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "9015:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9011:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1388,
												"initializationExpression": {
													"assignments": [
														1355
													],
													"declarations": [
														{
															"constant": false,
															"id": 1355,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1388,
															"src": "8999:6:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1354,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "8999:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1357,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9008:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8999:10:6"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9031:3:6",
														"subExpression": {
															"argumentTypes": null,
															"id": 1362,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "9031:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1364,
													"nodeType": "ExpressionStatement",
													"src": "9031:3:6"
												},
												"nodeType": "ForStatement",
												"src": "8994:267:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1390,
															"name": "pToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "9290:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1391,
															"name": "underlying",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "9298:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1392,
															"name": "underlyingSymbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "9310:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1393,
															"name": "baseUnit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "9328:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1394,
															"name": "fixedUsd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "9338:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1389,
														"name": "ConfigUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "9276:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,string memory,uint256,bool)"
														}
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9276:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1396,
												"nodeType": "EmitStatement",
												"src": "9271:76:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1398,
															"name": "pToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "9381:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1399,
																"name": "oracles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "9389:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct DeveloperLendPriceProviderV1.PriceOracle storage ref[] storage ref)"
																}
															},
															"id": 1401,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1400,
																"name": "pToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1269,
																"src": "9397:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9389:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage",
																"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle storage ref[] storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage",
																"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle storage ref[] storage ref"
															}
														],
														"id": 1397,
														"name": "PriceOracleUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "9362:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_struct$_PriceOracle_$754_memory_ptr_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,struct DeveloperLendPriceProviderV1.PriceOracle memory[] memory)"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9362:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1403,
												"nodeType": "EmitStatement",
												"src": "9357:48:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "0e4230a0",
									"id": 1405,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1286,
											"modifierName": {
												"argumentTypes": null,
												"id": 1285,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 239,
												"src": "8399:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8399:9:6"
										}
									],
									"name": "addTokenConfig",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "pToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1405,
												"src": "8217:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8217:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "underlying",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1405,
												"src": "8233:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8233:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "underlyingSymbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1405,
												"src": "8253:30:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1272,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8253:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "baseUnit",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1405,
												"src": "8285:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8285:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "fixedUsd",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1405,
												"src": "8303:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1276,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8303:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "sources",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1405,
												"src": "8326:24:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1278,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8326:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1279,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "8326:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "sourceTypes",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1405,
												"src": "8352:38:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_enum$_PriceOracleType_$747_$dyn_calldata_ptr",
													"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType[]"
												},
												"typeName": {
													"baseType": {
														"contractScope": null,
														"id": 1281,
														"name": "PriceOracleType",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 747,
														"src": "8352:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PriceOracleType_$747",
															"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
														}
													},
													"id": 1282,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "8352:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_enum$_PriceOracleType_$747_$dyn_storage_ptr",
														"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8216:175:6"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8409:0:6"
									},
									"scope": 1697,
									"src": "8193:1220:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1469,
										"nodeType": "Block",
										"src": "9566:480:6",
										"statements": [
											{
												"assignments": [
													1423
												],
												"declarations": [
													{
														"constant": false,
														"id": 1423,
														"mutability": "mutable",
														"name": "list",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1469,
														"src": "9577:26:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_ptr",
															"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle[]"
														},
														"typeName": {
															"baseType": {
																"contractScope": null,
																"id": 1421,
																"name": "PriceOracle",
																"nodeType": "UserDefinedTypeName",
																"referencedDeclaration": 754,
																"src": "9577:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PriceOracle_$754_storage_ptr",
																	"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle"
																}
															},
															"id": 1422,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "9577:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_ptr",
																"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1427,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1424,
														"name": "oracles",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "9606:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct DeveloperLendPriceProviderV1.PriceOracle storage ref[] storage ref)"
														}
													},
													"id": 1426,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1425,
														"name": "pToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "9614:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9606:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage",
														"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9577:44:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1428,
															"name": "list",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "9636:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_ptr",
																"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle storage ref[] storage pointer"
															}
														},
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "9636:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1430,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1409,
														"src": "9650:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9636:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1467,
													"nodeType": "Block",
													"src": "9864:175:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1461,
																				"name": "source",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1411,
																				"src": "9933:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 1462,
																				"name": "_sourceType",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1413,
																				"src": "9966:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_PriceOracleType_$747",
																					"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 1463,
																				"name": "available",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1415,
																				"src": "10003:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_enum$_PriceOracleType_$747",
																					"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1460,
																			"name": "PriceOracle",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 754,
																			"src": "9898:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_PriceOracle_$754_storage_ptr_$",
																				"typeString": "type(struct DeveloperLendPriceProviderV1.PriceOracle storage pointer)"
																			}
																		},
																		"id": 1464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"names": [
																			"source",
																			"sourceType",
																			"available"
																		],
																		"nodeType": "FunctionCall",
																		"src": "9898:129:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PriceOracle_$754_memory_ptr",
																			"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_PriceOracle_$754_memory_ptr",
																			"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle memory"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1457,
																		"name": "list",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1423,
																		"src": "9888:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_ptr",
																			"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle storage ref[] storage pointer"
																		}
																	},
																	"id": 1459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "9888:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PriceOracle_$754_storage_$returns$__$",
																		"typeString": "function (struct DeveloperLendPriceProviderV1.PriceOracle storage ref)"
																	}
																},
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9888:140:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1466,
															"nodeType": "ExpressionStatement",
															"src": "9888:140:6"
														}
													]
												},
												"id": 1468,
												"nodeType": "IfStatement",
												"src": "9632:407:6",
												"trueBody": {
													"id": 1456,
													"nodeType": "Block",
													"src": "9657:201:6",
													"statements": [
														{
															"assignments": [
																1433
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1433,
																	"mutability": "mutable",
																	"name": "oracle",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1456,
																	"src": "9684:26:6",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PriceOracle_$754_storage_ptr",
																		"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle"
																	},
																	"typeName": {
																		"contractScope": null,
																		"id": 1432,
																		"name": "PriceOracle",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 754,
																		"src": "9684:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PriceOracle_$754_storage_ptr",
																			"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1437,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1434,
																	"name": "list",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1423,
																	"src": "9713:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_ptr",
																		"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle storage ref[] storage pointer"
																	}
																},
																"id": 1436,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1435,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1409,
																	"src": "9718:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9713:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PriceOracle_$754_storage",
																	"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9684:40:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1438,
																		"name": "oracle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1433,
																		"src": "9738:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PriceOracle_$754_storage_ptr",
																			"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle storage pointer"
																		}
																	},
																	"id": 1440,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "source",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 749,
																	"src": "9738:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1441,
																	"name": "source",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1411,
																	"src": "9754:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "9738:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1443,
															"nodeType": "ExpressionStatement",
															"src": "9738:22:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1444,
																		"name": "oracle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1433,
																		"src": "9774:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PriceOracle_$754_storage_ptr",
																			"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle storage pointer"
																		}
																	},
																	"id": 1446,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "sourceType",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 751,
																	"src": "9774:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_PriceOracleType_$747",
																		"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1447,
																	"name": "_sourceType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1413,
																	"src": "9794:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_PriceOracleType_$747",
																		"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
																	}
																},
																"src": "9774:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PriceOracleType_$747",
																	"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
																}
															},
															"id": 1449,
															"nodeType": "ExpressionStatement",
															"src": "9774:31:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1450,
																		"name": "oracle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1433,
																		"src": "9819:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PriceOracle_$754_storage_ptr",
																			"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle storage pointer"
																		}
																	},
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "available",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 753,
																	"src": "9819:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1453,
																	"name": "available",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "9838:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9819:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1455,
															"nodeType": "ExpressionStatement",
															"src": "9819:28:6"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "e316e297",
									"id": 1470,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1418,
											"modifierName": {
												"argumentTypes": null,
												"id": 1417,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 239,
												"src": "9556:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "9556:9:6"
										}
									],
									"name": "addOrUpdateTokenConfigSource",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "pToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1470,
												"src": "9457:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9457:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1470,
												"src": "9473:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9473:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "source",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1470,
												"src": "9488:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9488:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "_sourceType",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1470,
												"src": "9504:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PriceOracleType_$747",
													"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
												},
												"typeName": {
													"contractScope": null,
													"id": 1412,
													"name": "PriceOracleType",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 747,
													"src": "9504:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PriceOracleType_$747",
														"typeString": "enum DeveloperLendPriceProviderV1.PriceOracleType"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "available",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1470,
												"src": "9533:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1414,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9533:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9456:92:6"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9566:0:6"
									},
									"scope": 1697,
									"src": "9419:627:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1513,
										"nodeType": "Block",
										"src": "10138:300:6",
										"statements": [
											{
												"assignments": [
													1480
												],
												"declarations": [
													{
														"constant": false,
														"id": 1480,
														"mutability": "mutable",
														"name": "tokenConfig",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1513,
														"src": "10148:31:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
															"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig"
														},
														"typeName": {
															"contractScope": null,
															"id": 1479,
															"name": "TokenConfig",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 765,
															"src": "10148:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
																"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1484,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1481,
														"name": "tokenConfigs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "10182:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenConfig_$765_storage_$",
															"typeString": "mapping(address => struct DeveloperLendPriceProviderV1.TokenConfig storage ref)"
														}
													},
													"id": 1483,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1482,
														"name": "pToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1472,
														"src": "10195:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10182:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenConfig_$765_storage",
														"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10148:54:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1486,
																	"name": "tokenConfig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1480,
																	"src": "10220:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
																		"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig storage pointer"
																	}
																},
																"id": 1487,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "pToken",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 756,
																"src": "10220:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10250:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10242:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1488,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10242:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10242:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10220:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "62616420706172616d73",
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10254:12:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_297d8e1f9f35243be441afa6ee90a2edad43706fc019a4dd01b3018b46b1121b",
																"typeString": "literal_string \"bad params\""
															},
															"value": "bad params"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_297d8e1f9f35243be441afa6ee90a2edad43706fc019a4dd01b3018b46b1121b",
																"typeString": "literal_string \"bad params\""
															}
														],
														"id": 1485,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10212:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10212:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1495,
												"nodeType": "ExpressionStatement",
												"src": "10212:55:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1496,
															"name": "tokenConfig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1480,
															"src": "10277:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
																"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig storage pointer"
															}
														},
														"id": 1498,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "baseUnit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 762,
														"src": "10277:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1499,
														"name": "baseUnit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "10300:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10277:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1501,
												"nodeType": "ExpressionStatement",
												"src": "10277:31:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1503,
															"name": "pToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "10338:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1504,
																"name": "tokenConfig",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1480,
																"src": "10346:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
																	"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig storage pointer"
																}
															},
															"id": 1505,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "underlying",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 758,
															"src": "10346:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1506,
																"name": "tokenConfig",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1480,
																"src": "10370:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
																	"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig storage pointer"
																}
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "underlyingSymbol",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 760,
															"src": "10370:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 1508,
															"name": "baseUnit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "10400:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1509,
																"name": "tokenConfig",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1480,
																"src": "10410:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
																	"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig storage pointer"
																}
															},
															"id": 1510,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fixedUsd",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 764,
															"src": "10410:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1502,
														"name": "ConfigUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "10324:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,string memory,uint256,bool)"
														}
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10324:107:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1512,
												"nodeType": "EmitStatement",
												"src": "10319:112:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "49b39fd6",
									"id": 1514,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1477,
											"modifierName": {
												"argumentTypes": null,
												"id": 1476,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 239,
												"src": "10128:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10128:9:6"
										}
									],
									"name": "updateTokenConfigBaseUnit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "pToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1514,
												"src": "10087:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10087:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "baseUnit",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1514,
												"src": "10103:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10103:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10086:34:6"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10138:0:6"
									},
									"scope": 1697,
									"src": "10052:386:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1557,
										"nodeType": "Block",
										"src": "10527:300:6",
										"statements": [
											{
												"assignments": [
													1524
												],
												"declarations": [
													{
														"constant": false,
														"id": 1524,
														"mutability": "mutable",
														"name": "tokenConfig",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1557,
														"src": "10537:31:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
															"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig"
														},
														"typeName": {
															"contractScope": null,
															"id": 1523,
															"name": "TokenConfig",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 765,
															"src": "10537:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
																"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1528,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1525,
														"name": "tokenConfigs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "10571:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenConfig_$765_storage_$",
															"typeString": "mapping(address => struct DeveloperLendPriceProviderV1.TokenConfig storage ref)"
														}
													},
													"id": 1527,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1526,
														"name": "pToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1516,
														"src": "10584:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10571:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenConfig_$765_storage",
														"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10537:54:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1530,
																	"name": "tokenConfig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1524,
																	"src": "10609:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
																		"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig storage pointer"
																	}
																},
																"id": 1531,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "pToken",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 756,
																"src": "10609:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10639:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10631:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1532,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10631:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10631:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10609:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "62616420706172616d73",
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10643:12:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_297d8e1f9f35243be441afa6ee90a2edad43706fc019a4dd01b3018b46b1121b",
																"typeString": "literal_string \"bad params\""
															},
															"value": "bad params"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_297d8e1f9f35243be441afa6ee90a2edad43706fc019a4dd01b3018b46b1121b",
																"typeString": "literal_string \"bad params\""
															}
														],
														"id": 1529,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10601:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10601:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1539,
												"nodeType": "ExpressionStatement",
												"src": "10601:55:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1540,
															"name": "tokenConfig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "10666:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
																"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig storage pointer"
															}
														},
														"id": 1542,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "fixedUsd",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 764,
														"src": "10666:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1543,
														"name": "fixedUsd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1518,
														"src": "10689:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10666:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1545,
												"nodeType": "ExpressionStatement",
												"src": "10666:31:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1547,
															"name": "pToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1516,
															"src": "10727:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1548,
																"name": "tokenConfig",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1524,
																"src": "10735:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
																	"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig storage pointer"
																}
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "underlying",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 758,
															"src": "10735:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1550,
																"name": "tokenConfig",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1524,
																"src": "10759:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
																	"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig storage pointer"
																}
															},
															"id": 1551,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "underlyingSymbol",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 760,
															"src": "10759:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1552,
																"name": "tokenConfig",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1524,
																"src": "10789:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
																	"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig storage pointer"
																}
															},
															"id": 1553,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "baseUnit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 762,
															"src": "10789:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1554,
															"name": "fixedUsd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "10811:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1546,
														"name": "ConfigUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "10713:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,string memory,uint256,bool)"
														}
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10713:107:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1556,
												"nodeType": "EmitStatement",
												"src": "10708:112:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "71cc09a9",
									"id": 1558,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1521,
											"modifierName": {
												"argumentTypes": null,
												"id": 1520,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 239,
												"src": "10517:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10517:9:6"
										}
									],
									"name": "updateTokenConfigFixedUsd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "pToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1558,
												"src": "10479:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10479:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "fixedUsd",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1558,
												"src": "10495:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1517,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10495:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10478:31:6"
									},
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10527:0:6"
									},
									"scope": 1697,
									"src": "10444:383:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "10906:53:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1565,
														"name": "ethUsdPriceFeedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "10916:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1566,
														"name": "feedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1560,
														"src": "10941:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10916:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1568,
												"nodeType": "ExpressionStatement",
												"src": "10916:36:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "bec69b4f",
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1563,
											"modifierName": {
												"argumentTypes": null,
												"id": 1562,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 239,
												"src": "10896:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10896:9:6"
										}
									],
									"name": "setEthUsdPriceFeedAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "feedAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1570,
												"src": "10868:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10868:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10867:21:6"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10906:0:6"
									},
									"scope": 1697,
									"src": "10833:126:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1617,
										"nodeType": "Block",
										"src": "11100:328:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1582,
																	"name": "tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1573,
																	"src": "11119:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "11119:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1584,
																	"name": "chainLinkTokenEthPriceFeeds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1576,
																	"src": "11136:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "11136:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11119:51:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "746f6b656e732e6c656e677468206d75737420657175616c207468616e20636861696e4c696e6b546f6b656e457468507269636546656564732e6c656e677468",
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11172:66:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d305f694cb36bdb96570f7ffe50ab4ecab2b033e23ba024553062529b4407309",
																"typeString": "literal_string \"tokens.length must equal than chainLinkTokenEthPriceFeeds.length\""
															},
															"value": "tokens.length must equal than chainLinkTokenEthPriceFeeds.length"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d305f694cb36bdb96570f7ffe50ab4ecab2b033e23ba024553062529b4407309",
																"typeString": "literal_string \"tokens.length must equal than chainLinkTokenEthPriceFeeds.length\""
															}
														],
														"id": 1581,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11111:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11111:128:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1589,
												"nodeType": "ExpressionStatement",
												"src": "11111:128:6"
											},
											{
												"body": {
													"id": 1615,
													"nodeType": "Block",
													"src": "11291:130:6",
													"statements": [
														{
															"assignments": [
																1602
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1602,
																	"mutability": "mutable",
																	"name": "token",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1615,
																	"src": "11305:13:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1601,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11305:7:6",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1606,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1603,
																	"name": "tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1573,
																	"src": "11321:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1605,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1604,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1591,
																	"src": "11328:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11321:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11305:25:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1607,
																		"name": "chainLinkTokenEthPriceFeed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 778,
																		"src": "11344:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																			"typeString": "mapping(address => address)"
																		}
																	},
																	"id": 1609,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1608,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1602,
																		"src": "11371:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11344:33:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1610,
																		"name": "chainLinkTokenEthPriceFeeds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1576,
																		"src": "11380:27:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 1612,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1611,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1591,
																		"src": "11408:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11380:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "11344:66:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1614,
															"nodeType": "ExpressionStatement",
															"src": "11344:66:6"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1594,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1591,
														"src": "11267:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1595,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "11271:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "11271:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11267:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1616,
												"initializationExpression": {
													"assignments": [
														1591
													],
													"declarations": [
														{
															"constant": false,
															"id": 1591,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1616,
															"src": "11255:6:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1590,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "11255:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1593,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1592,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11264:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11255:10:6"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11286:3:6",
														"subExpression": {
															"argumentTypes": null,
															"id": 1598,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "11286:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1600,
													"nodeType": "ExpressionStatement",
													"src": "11286:3:6"
												},
												"nodeType": "ForStatement",
												"src": "11250:171:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "98ee9a13",
									"id": 1618,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1579,
											"modifierName": {
												"argumentTypes": null,
												"id": 1578,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 239,
												"src": "11090:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11090:9:6"
										}
									],
									"name": "addOrUpdateChainLinkTokenEthPriceFeed",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1618,
												"src": "11012:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1571,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "11012:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1572,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "11012:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "chainLinkTokenEthPriceFeeds",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1618,
												"src": "11037:44:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1574,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "11037:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1575,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "11037:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11011:71:6"
									},
									"returnParameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11100:0:6"
									},
									"scope": 1697,
									"src": "10965:463:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1649,
										"nodeType": "Block",
										"src": "11525:227:6",
										"statements": [
											{
												"assignments": [
													1628
												],
												"declarations": [
													{
														"constant": false,
														"id": 1628,
														"mutability": "mutable",
														"name": "tokenConfig",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1649,
														"src": "11536:31:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
															"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig"
														},
														"typeName": {
															"contractScope": null,
															"id": 1627,
															"name": "TokenConfig",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 765,
															"src": "11536:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
																"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1632,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1629,
														"name": "tokenConfigs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "11570:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenConfig_$765_storage_$",
															"typeString": "mapping(address => struct DeveloperLendPriceProviderV1.TokenConfig storage ref)"
														}
													},
													"id": 1631,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1630,
														"name": "pToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1620,
														"src": "11583:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11570:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenConfig_$765_storage",
														"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11536:54:6"
											},
											{
												"assignments": [
													1636
												],
												"declarations": [
													{
														"constant": false,
														"id": 1636,
														"mutability": "mutable",
														"name": "priceOracles",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1649,
														"src": "11600:34:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_ptr",
															"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle[]"
														},
														"typeName": {
															"baseType": {
																"contractScope": null,
																"id": 1634,
																"name": "PriceOracle",
																"nodeType": "UserDefinedTypeName",
																"referencedDeclaration": 754,
																"src": "11600:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PriceOracle_$754_storage_ptr",
																	"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle"
																}
															},
															"id": 1635,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "11600:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_ptr",
																"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1640,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1637,
														"name": "oracles",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "11637:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct DeveloperLendPriceProviderV1.PriceOracle storage ref[] storage ref)"
														}
													},
													"id": 1639,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1638,
														"name": "pToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1620,
														"src": "11645:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11637:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage",
														"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11600:52:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1642,
															"name": "pToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "11698:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1643,
															"name": "tokenConfig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "11706:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
																"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig storage pointer"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1644,
																"name": "priceOracles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1636,
																"src": "11719:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_ptr",
																	"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle storage ref[] storage pointer"
																}
															},
															"id": 1646,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1645,
																"name": "sourceIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1622,
																"src": "11732:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11719:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PriceOracle_$754_storage",
																"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_TokenConfig_$765_storage_ptr",
																"typeString": "struct DeveloperLendPriceProviderV1.TokenConfig storage pointer"
															},
															{
																"typeIdentifier": "t_struct$_PriceOracle_$754_storage",
																"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle storage ref"
															}
														],
														"id": 1641,
														"name": "_getUnderlyingPriceInternal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "11670:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_TokenConfig_$765_memory_ptr_$_t_struct$_PriceOracle_$754_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (address,struct DeveloperLendPriceProviderV1.TokenConfig memory,struct DeveloperLendPriceProviderV1.PriceOracle memory) view returns (uint256)"
														}
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11670:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1626,
												"id": 1648,
												"nodeType": "Return",
												"src": "11663:82:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "9e237b1c",
									"id": 1650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOracleSourcePrice",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "pToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1650,
												"src": "11465:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11465:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "sourceIndex",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1650,
												"src": "11481:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1621,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11481:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11464:34:6"
									},
									"returnParameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1650,
												"src": "11520:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11520:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11519:6:6"
									},
									"scope": 1697,
									"src": "11435:317:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1676,
										"nodeType": "Block",
										"src": "11845:94:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 1662,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1652,
																						"src": "11891:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"id": 1663,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "11890:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1660,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "11873:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "11873:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11873:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1659,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -8,
																	"src": "11863:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11863:32:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 1669,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1654,
																						"src": "11927:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"id": 1670,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "11926:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1667,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "11909:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "11909:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11909:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1666,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -8,
																	"src": "11899:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11899:32:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "11863:68:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1674,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "11862:70:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1658,
												"id": 1675,
												"nodeType": "Return",
												"src": "11855:77:6"
											}
										]
									},
									"documentation": null,
									"id": 1677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "compareStrings",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1677,
												"src": "11782:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1651,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11782:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1677,
												"src": "11799:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1653,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11799:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11781:34:6"
									},
									"returnParameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1677,
												"src": "11839:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1656,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11839:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11838:6:6"
									},
									"scope": 1697,
									"src": "11758:181:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1695,
										"nodeType": "Block",
										"src": "12009:105:6",
										"statements": [
											{
												"assignments": [
													1687
												],
												"declarations": [
													{
														"constant": false,
														"id": 1687,
														"mutability": "mutable",
														"name": "priceOracles",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1695,
														"src": "12019:34:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_ptr",
															"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle[]"
														},
														"typeName": {
															"baseType": {
																"contractScope": null,
																"id": 1685,
																"name": "PriceOracle",
																"nodeType": "UserDefinedTypeName",
																"referencedDeclaration": 754,
																"src": "12019:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PriceOracle_$754_storage_ptr",
																	"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle"
																}
															},
															"id": 1686,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "12019:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_ptr",
																"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1691,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1688,
														"name": "oracles",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "12056:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct DeveloperLendPriceProviderV1.PriceOracle storage ref[] storage ref)"
														}
													},
													"id": 1690,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1689,
														"name": "pToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "12064:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12056:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage",
														"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12019:52:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1692,
														"name": "priceOracles",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1687,
														"src": "12088:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PriceOracle_$754_storage_$dyn_storage_ptr",
															"typeString": "struct DeveloperLendPriceProviderV1.PriceOracle storage ref[] storage pointer"
														}
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "12088:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1683,
												"id": 1694,
												"nodeType": "Return",
												"src": "12081:26:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "43f5ae36",
									"id": 1696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "oracleLength",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "pToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1696,
												"src": "11967:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11967:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11966:16:6"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1696,
												"src": "12004:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1681,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12004:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12003:6:6"
									},
									"scope": 1697,
									"src": "11945:169:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1698,
							"src": "1756:10361:6"
						}
					],
					"src": "32:12085:6"
				},
				"id": 6
			}
		}
	}
}